[
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 69047442890,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 67,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;2",
        "after": [
          {
            "result": {
              "duration": 11347670049,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20108390857,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14284215552,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98121946161,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "SBE",
                  "HGT",
                  "Open Return",
                  "tomorrow",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3396770188,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6820411998,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 484722097,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38323884470,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1090907790,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9705176384,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8641236080,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25213064854,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53700306714,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Visa Debit",
                  "4539791001730106",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 423310468,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20500432877,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29106370402,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1757003408,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8230670790,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 450121331,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5356510958,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 460477986,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Starbeck"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3870136204,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4269533091,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4427583074,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(tomorrow;EEE)",
                  "DATE(tomorrow;d MMM yyyy)",
                  "Starbeck",
                  "Harrogate",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53005468353,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;3",
        "after": [
          {
            "result": {
              "duration": 11207126898,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15971523519,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13432298280,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 91637530832,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "PLY",
                  "NTA",
                  "Single",
                  "tomorrow",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3119889520,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6667742874,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 544879920,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Plymouth"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Newton Abbot"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38183611090,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 550716070,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4482029507,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7263971304,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21228305221,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54268671388,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Maestro",
                  "560000227571480302",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406260548,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13929216289,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23537502370,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1896608433,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4678586956,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 498203139,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5739601893,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 817727510,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Plymouth"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Newton Abbot"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2766709801,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3637705009,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4520850493,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(tomorrow;EEE)",
                  "DATE(tomorrow;d MMM yyyy)",
                  "Plymouth",
                  "Newton Abbot",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49762797971,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 69,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;4",
        "after": [
          {
            "result": {
              "duration": 12356301946,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19508359964,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13242029572,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86601373002,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "SBE",
                  "HGT",
                  "Open Return",
                  "+3 hours",
                  "",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3161483028,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6863729995,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 485385861,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37445617838,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1166950571,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8549074485,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7129882429,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22065285113,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52207259219,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Diners",
                  "36005100150025",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 583431674,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20717635047,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29004532117,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1905897342,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 211805730888,
              "error_message": "java.lang.AssertionError: It was not possible to proceed to booking confirmation page\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.BookingActions.proceeedToBookingConfirmation(BookingActions.java:109)\r\n\tat ✽.And I proceed to booking confirmation(booking/GuestKioskBookings.feature:34)\r\n",
              "status": "failed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Starbeck"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 11:52:44.349  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1064, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 11:52:44.349  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1065, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 11:52:56.309  1572  3473 E Watchdog: !@Sync 25810 [05-03 11:52:56.323]\r\r\n05-03 11:52:59.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:52:59.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:53:16.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:53:16.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:53:26.309  1572  3473 E Watchdog: !@Sync 25811 [05-03 11:53:26.325]\r\r\n05-03 11:53:56.309  1572  3473 E Watchdog: !@Sync 25812 [05-03 11:53:56.326]\r\r\n05-03 11:54:25.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:54:25.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:54:26.109  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:54:26.309  1572  3473 E Watchdog: !@Sync 25813 [05-03 11:54:26.326]\r\r\n05-03 11:54:27.819   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:54:27.819   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:54:34.609  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:54:51.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:54:51.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:54:53.489  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:54:54.969   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:54:54.969   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:54:56.319  1572  3473 E Watchdog: !@Sync 25814 [05-03 11:54:56.327]\r\r\n05-03 11:55:26.319  1572  3473 E Watchdog: !@Sync 25815 [05-03 11:55:26.328]\r\r\n05-03 11:55:56.319  1572  3473 E Watchdog: !@Sync 25816 [05-03 11:55:56.330]\r\r\n05-03 11:56:13.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:56:13.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:56:17.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:56:17.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:56:26.319  1572  3473 E Watchdog: !@Sync 25817 [05-03 11:56:26.331]\r\r\n05-03 11:56:56.319  1572  3473 E Watchdog: !@Sync 25818 [05-03 11:56:56.332]\r\r\n05-03 11:56:57.119  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:57:08.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:57:08.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:57:09.169  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:57:16.919  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:57:17.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:57:17.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:57:26.319  1572  3473 E Watchdog: !@Sync 25819 [05-03 11:57:26.332]\r\r\n05-03 11:57:30.529  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:57:32.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:57:32.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:57:34.429   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:57:34.429   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:57:39.229  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:57:56.319  1572  3473 E Watchdog: !@Sync 25820 [05-03 11:57:56.333]\r\r\n05-03 11:58:12.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:58:12.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:58:26.319  1572  3473 E Watchdog: !@Sync 25821 [05-03 11:58:26.334]\r\r\n05-03 11:58:34.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:58:34.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:58:39.249  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 11:58:56.319  1572  3473 E Watchdog: !@Sync 25822 [05-03 11:58:56.334]\r\r\n05-03 11:58:58.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:58:58.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:59:03.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:59:03.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:59:21.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:59:21.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:59:26.319  1572  3473 E Watchdog: !@Sync 25823 [05-03 11:59:26.335]\r\r\n05-03 11:59:34.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:59:34.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 11:59:50.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 11:59:50.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n--------- beginning of main\r\r\n05-03 11:59:56.319  1572  3473 E Watchdog: !@Sync 25824 [05-03 11:59:56.336]\r\r\n05-03 12:00:00.089  6004  6004 E Zygote  : v2\r\r\n05-03 12:00:00.319  6022  6022 E Zygote  : v2\r\r\n05-03 12:00:00.419  6035  6035 E Zygote  : v2\r\r\n05-03 12:00:00.509   567  6047 E QC-time-services: Daemon:Update to modem bit set\r\r\n05-03 12:00:00.509  6035  6035 E QC-time-services: Receive Passed \u003d\u003d base \u003d 2, unit \u003d 1, operation \u003d 0, result \u003d 0\r\r\n05-03 12:00:00.509   567   619 E QC-time-services: Daemon:tod_update_ind_cb: Got Update from modem msg_id 40\r\r\n05-03 12:00:00.509   567   615 E QC-time-services: Daemon: Time-services: Waiting to acceptconnection\r\r\n05-03 12:00:00.609 29158 29158 E daemonapp: [MSC_Daemon]\u003e\u003e\u003e WU:1714 [0:0] [NameNotFoundException] !!\r\r\n05-03 12:00:00.649  6048  6048 E Zygote  : v2\r\r\n05-03 12:00:22.009  1572  1834 E MARsDBManager: updateDBAll : begin --size 2\r\r\n05-03 12:00:22.029  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 12:00:24.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:00:24.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:00:26.329  1572  3473 E Watchdog: !@Sync 25825 [05-03 12:00:26.337]\r\r\n05-03 12:00:39.519  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 28ms lastUpdatedAfter : 60114 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 12:00:55.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:00:55.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:00:56.329  1572  3473 E Watchdog: !@Sync 25826 [05-03 12:00:56.337]\r\r\n05-03 12:01:17.389   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:01:17.389   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:01:26.329  1572  3473 E Watchdog: !@Sync 25827 [05-03 12:01:26.338]\r\r\n05-03 12:01:32.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:01:32.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:01:39.629  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 25ms lastUpdatedAfter : 60110 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 12:01:56.329  1572  3473 E Watchdog: !@Sync 25828 [05-03 12:01:56.339]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(+3 hours;EEE)",
                  "DATE(+3 hours;d MMM yyyy)",
                  "Starbeck",
                  "Harrogate",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52703001465,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 70,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;5",
        "after": [
          {
            "result": {
              "duration": 11152578659,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15729352444,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13337655538,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 87500975662,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "ZFD",
                  "LUT",
                  "Single",
                  "today",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3131245872,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7106487869,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 416997423,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38978397440,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 437997789,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4272830576,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6892904535,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21037072192,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52954609430,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Mastercard Debit",
                  "5372100000002862",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 405419097,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13302106653,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23656784565,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1556766364,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8406925932,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 404804212,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4981190486,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 310673739,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Farringdon"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3066542430,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4104694520,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4351313188,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(today;EEE)",
                  "DATE(today;d MMM yyyy)",
                  "Farringdon",
                  "Luton",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52191538986,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;6",
        "after": [
          {
            "result": {
              "duration": 12133156960,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15926628746,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13278371570,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 96040954319,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "CBY",
                  "EVE",
                  "Open Return",
                  "next WED",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3263187912,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6962458744,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 469507924,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Charlbury"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38361125708,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1152438237,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11277589799,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 718308261,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22864934922,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52919467769,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Mastercard",
                  "5200000000000056",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 411864463,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13590637748,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29827325077,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1616770804,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5742157842,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 368643951,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6298232088,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 302795530,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Charlbury"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2767123236,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4374649147,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 697796132,
              "error_message": "java.lang.AssertionError: The \u0027Journey Date\u0027 field contains unexpected content. Expected: \u00279 May 2018\u0027. Actual: \u0027Tue 08 May 2018\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.generic.PageActions.pageContainsData(PageActions.java:87)\r\n\tat ✽.And the page contains the following data:(booking/GuestKioskBookings.feature:46)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 12:08:49.189  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1069, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:08:49.189  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1068, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:08:56.339  1572  3473 E Watchdog: !@Sync 25842 [05-03 12:08:56.348]\r\r\n05-03 12:09:04.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:09:04.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:09:15.019  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1070, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:09:26.339  1572  3473 E Watchdog: !@Sync 25843 [05-03 12:09:26.349]\r\r\n05-03 12:09:33.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:09:33.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:09:40.159   388  1992 E FrameworkListener: read() failed (Connection reset by peer)\r\r\n05-03 12:09:40.159   388  1992 E FrameworkListener: read() failed (Connection reset by peer)\r\r\n05-03 12:09:56.339  1572  3473 E Watchdog: !@Sync 25844 [05-03 12:09:56.350]\r\r\n05-03 12:10:26.339  1572  3473 E Watchdog: !@Sync 25845 [05-03 12:10:26.351]\r\r\n05-03 12:10:27.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:10:27.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:10:30.759  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:10:32.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:10:32.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:10:39.149  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:10:56.339  1572  3473 E Watchdog: !@Sync 25846 [05-03 12:10:56.351]\r\r\n05-03 12:10:58.139  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:10:58.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:10:58.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:10:59.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:10:59.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:11:26.339  1572  3473 E Watchdog: !@Sync 25847 [05-03 12:11:26.353]\r\r\n05-03 12:11:31.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:11:31.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:11:37.089   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:11:37.089   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:11:56.339  1572  3473 E Watchdog: !@Sync 25848 [05-03 12:11:56.354]\r\r\n05-03 12:12:22.019  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 12:12:22.159  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 12:12:26.339  1572  3473 E Watchdog: !@Sync 25849 [05-03 12:12:26.354]\r\r\n05-03 12:12:31.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:12:31.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:12:31.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:12:31.349   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:12:56.339  1572  3473 E Watchdog: !@Sync 25850 [05-03 12:12:56.355]\r\r\n05-03 12:13:02.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:02.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:13:05.179   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:05.179   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:13:08.549  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:13:20.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:20.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:13:21.179  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:13:26.349  1572  3473 E Watchdog: !@Sync 25851 [05-03 12:13:26.357]\r\r\n05-03 12:13:28.889  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:13:31.509   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:31.509   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:13:42.099  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:13:50.849  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:13:56.349  1572  3473 E Watchdog: !@Sync 25852 [05-03 12:13:56.358]\r\r\n05-03 12:13:58.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:58.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:13:59.949   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:13:59.949   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n--------- beginning of main\r\r\n05-03 12:14:20.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:14:20.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:14:26.349  1572  3473 E Watchdog: !@Sync 25853 [05-03 12:14:26.359]\r\r\n05-03 12:14:38.929  5414 10216 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:14:39.049  5414 10219 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:14:39.589  5414  5414 E SamsungIME: SwiftKey guide popup condition 2 : true false truetrue true true false true false true true\r\r\n05-03 12:14:39.659   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:14:39.659   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:14:40.989  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 28ms lastUpdatedAfter : 60128 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 12:14:43.459  9666  9666 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 12:14:44.849  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:14:51.549  9241  9258 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 12:14:51.609  9464  9464 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 12:14:52.099  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 1\r\r\n05-03 12:14:53.109  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 2\r\r\n05-03 12:14:54.109  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 3\r\r\n05-03 12:14:55.109  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 4\r\r\n05-03 12:14:56.109  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 5\r\r\n05-03 12:14:56.349  1572  3473 E Watchdog: !@Sync 25854 [05-03 12:14:56.360]\r\r\n05-03 12:14:56.569  9241  9258 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 12:14:56.579  9464  9464 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 12:14:57.109  9464 10286 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter loop stopping: empty limit reached.\r\r\n05-03 12:14:57.999  9464  9464 E MotionRecognitionManager: mSContextService \u003d null\r\r\n05-03 12:14:57.999  9464  9464 E MotionRecognitionManager: motionService \u003d com.samsung.android.motion.IMotionRecognitionService$Stub$Proxy@cbd7e2d\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : Cannot load http://www.thetrainline.com/mobile/reference/advert/10f8ad6a-ef7c-4f79-ac80-0845f7d52233.png\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : com.squareup.picasso.Downloader$ResponseException: 404 \r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat com.squareup.picasso.OkHttpDownloader.a(SourceFile:121)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat com.squareup.picasso.NetworkRequestHandler.a(SourceFile:47)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat com.squareup.picasso.BitmapHunter.a(SourceFile:206)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat com.squareup.picasso.BitmapHunter.run(SourceFile:159)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat java.lang.Thread.run(Thread.java:818)\r\r\n05-03 12:14:59.209  9464  9464 E Picasso : \tat com.squareup.picasso.Utils$PicassoThread.run(SourceFile:411)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : \t... 16 more\r\r\n05-03 12:15:02.129  1572  3991 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 12:15:02.339 10354 10354 E Zygote  : v2\r\r\n05-03 12:15:03.549 10373 10373 E Zygote  : v2\r\r\n05-03 12:15:03.689 10385 10385 E Zygote  : v2\r\r\n05-03 12:15:05.539  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 2 size : 0Kb duration : 8ms lastUpdatedAfter : 24552 ms mFlush_time_threasold : 2000 mCurrentSize : 412\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(next WED;EEE)",
                  "DATE(next WED;d MMM yyyy)",
                  "Charlbury",
                  "Evesham",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52059008794,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 76,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;2",
        "after": [
          {
            "result": {
              "duration": 12117021403,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16545812916,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12989919868,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94585711099,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "HNX",
                  "AIG",
                  "Single",
                  "next WED",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3429005656,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6707494965,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 707381007,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Hunts Cross"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Aigburth"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38968171485,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 456048754,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4230644325,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7298986315,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22066718227,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52302806872,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 410150235,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13777131267,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23679646601,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1814263139,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4965824009,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 471522708,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6026940753,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 363048138,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Hunts Cross"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Aigburth"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2905328633,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4431552424,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 755395037,
              "error_message": "java.lang.AssertionError: The \u0027Journey Date\u0027 field contains unexpected content. Expected: \u00279 May 2018\u0027. Actual: \u0027Mon 07 May 2018\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.generic.PageActions.pageContainsData(PageActions.java:87)\r\n\tat ✽.And the page contains the following data:(booking/GuestKioskBookings.feature:46)\r\n",
              "status": "failed"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 12:15:22.709  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1071, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:15:22.709  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1072, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:15:26.349  1572  3473 E Watchdog: !@Sync 25855 [05-03 12:15:26.360]\r\r\n05-03 12:15:37.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:15:37.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:15:56.349  1572  3473 E Watchdog: !@Sync 25856 [05-03 12:15:56.361]\r\r\n05-03 12:16:12.209   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:16:12.209   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:16:26.349  1572  3473 E Watchdog: !@Sync 25857 [05-03 12:16:26.362]\r\r\n05-03 12:16:56.349  1572  3473 E Watchdog: !@Sync 25858 [05-03 12:16:56.362]\r\r\n05-03 12:17:00.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:17:00.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:17:02.829  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:17:04.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:17:04.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:17:11.069  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:17:26.349  1572  3473 E Watchdog: !@Sync 25859 [05-03 12:17:26.363]\r\r\n05-03 12:17:30.089  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:17:56.349  1572  3473 E Watchdog: !@Sync 25860 [05-03 12:17:56.364]\r\r\n05-03 12:18:03.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:18:03.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:18:09.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:18:09.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:18:26.349  1572  3473 E Watchdog: !@Sync 25861 [05-03 12:18:26.365]\r\r\n05-03 12:18:51.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:18:51.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:18:56.349  1572  3473 E Watchdog: !@Sync 25862 [05-03 12:18:56.365]\r\r\n05-03 12:19:05.149   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:19:05.149   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:19:26.349  1572  3473 E Watchdog: !@Sync 25863 [05-03 12:19:26.366]\r\r\n05-03 12:19:39.609  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:19:50.329  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:19:51.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:19:51.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:19:56.359  1572  3473 E Watchdog: !@Sync 25864 [05-03 12:19:56.367]\r\r\n05-03 12:19:58.649  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:20:11.649  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:20:13.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:20:13.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:20:21.589  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:20:26.359  1572  3473 E Watchdog: !@Sync 25865 [05-03 12:20:26.368]\r\r\n--------- beginning of main\r\r\n05-03 12:20:54.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:20:54.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:20:56.359  1572  3473 E Watchdog: !@Sync 25866 [05-03 12:20:56.369]\r\r\n05-03 12:21:03.509  5414 12150 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:21:03.639  5414 12153 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:21:04.159  5414  5414 E SamsungIME: SwiftKey guide popup condition 2 : true false truetrue true true false true false true true\r\r\n05-03 12:21:09.369  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:21:11.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:21:11.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:21:15.269 11167 11184 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 12:21:15.509 11418 11418 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 12:21:15.519 11167 11184 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 12:21:16.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter database empty: 1\r\r\n05-03 12:21:17.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter database empty: 2\r\r\n05-03 12:21:18.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter database empty: 3\r\r\n05-03 12:21:19.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter database empty: 4\r\r\n05-03 12:21:20.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter database empty: 5\r\r\n05-03 12:21:20.459 11167 11184 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 12:21:20.469 11418 11418 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 12:21:21.219 11418 12229 E SnowplowTracker-\u003eEmitter: pool-20-thread-4|Emitter loop stopping: empty limit reached.\r\r\n05-03 12:21:21.929 11418 11418 E MotionRecognitionManager: mSContextService \u003d null\r\r\n05-03 12:21:21.929 11418 11418 E MotionRecognitionManager: motionService \u003d com.samsung.android.motion.IMotionRecognitionService$Stub$Proxy@2ae1691\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : Cannot load http://www.thetrainline.com/mobile/reference/advert/10f8ad6a-ef7c-4f79-ac80-0845f7d52233.png\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : com.squareup.picasso.Downloader$ResponseException: 404 \r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat com.squareup.picasso.OkHttpDownloader.a(SourceFile:121)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat com.squareup.picasso.NetworkRequestHandler.a(SourceFile:47)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat com.squareup.picasso.BitmapHunter.a(SourceFile:206)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat com.squareup.picasso.BitmapHunter.run(SourceFile:159)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat java.lang.Thread.run(Thread.java:818)\r\r\n05-03 12:21:22.749 11418 11418 E Picasso : \tat com.squareup.picasso.Utils$PicassoThread.run(SourceFile:411)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : \t... 16 more\r\r\n05-03 12:21:26.069  1572  3768 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 12:21:26.269 12284 12284 E Zygote  : v2\r\r\n05-03 12:21:26.359  1572  3473 E Watchdog: !@Sync 25867 [05-03 12:21:26.369]\r\r\n05-03 12:21:27.469 12301 12301 E Zygote  : v2\r\r\n05-03 12:21:27.579 12313 12313 E Zygote  : v2\r\r\n05-03 12:21:29.459  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 2 size : 0Kb duration : 7ms lastUpdatedAfter : 47783 ms mFlush_time_threasold : 2000 mCurrentSize : 412\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(next WED;EEE)",
                  "DATE(next WED;d MMM yyyy)",
                  "Hunts Cross",
                  "Aigburth",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52378304979,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 81,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;2",
        "after": [
          {
            "result": {
              "duration": 11169460883,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16311738515,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13210867791,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94617218804,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "CBY",
                  "EVE",
                  "Open Return",
                  "next WED",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3045684646,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7226414656,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 368662314,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Charlbury"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38267664670,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 518287252,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11564211156,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 407399856,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21642136940,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 54550321269,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Mastercard",
                  "5200000000000056",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 533418523,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13751854784,
              "status": "passed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30411875534,
              "status": "passed"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2108036292,
              "status": "passed"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5052910434,
              "status": "passed"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 397065884,
              "status": "passed"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5931474111,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 764523270,
              "status": "passed"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Charlbury"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2929995900,
              "status": "passed"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4251217755,
              "status": "passed"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4761511221,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(next WED;EEE)",
                  "DATE(next WED;d MMM yyyy)",
                  "Charlbury",
                  "Evesham",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52665505576,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 82,
        "name": "Buy a kiosk ticket as guest customer with Payment Cards of different types",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-payment-cards-of-different-types;;3",
        "after": [
          {
            "result": {
              "duration": 12124971172,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15723435822,
              "status": "passed"
            },
            "line": 5,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13220716227,
              "status": "passed"
            },
            "line": 6,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 113345950961,
              "status": "passed"
            },
            "line": 7,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 8
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "Single",
                  "+21 days",
                  "14:00",
                  "1"
                ],
                "line": 9
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3722040244,
              "status": "passed"
            },
            "line": 10,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11022936567,
              "status": "passed"
            },
            "line": 11,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 383559997,
              "status": "passed"
            },
            "line": 12,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Euston"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Manchester"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37809572777,
              "status": "passed"
            },
            "line": 15,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 562081333,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8022782373,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7079779354,
              "status": "passed"
            },
            "line": 18,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21980349575,
              "status": "passed"
            },
            "comments": [
              {
                "line": 19,
                "value": "#And the \"Pay with paypal\" button is visible"
              }
            ],
            "line": 20,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53867195715,
              "status": "passed"
            },
            "line": 21,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Amex",
                  "341111111111111",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EMAILREF"
                ],
                "line": 23
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 401929073,
              "status": "passed"
            },
            "line": 24,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 95288875129,
              "error_message": "java.lang.AssertionError: Unable to find element with locator: \u0027By.xpath: //android.widget.TextView[contains(@resource-id, \u0027ticket_price\u0027)]\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getElement(Control.java:84)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getText(Control.java:244)\r\n\tat com.thetrainline.common.lib.ui.controls.CurrencyControl.getText(CurrencyControl.java:31)\r\n\tat com.thetrainline.common.steps.generic.FieldActions.noteTheFollowingFields(FieldActions.java:93)\r\n\tat ✽.And I note following fields values:(booking/GuestKioskBookings.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 29,
                "value": "# | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 30,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 31,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 32,
            "name": "I type \"1111\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 25
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              7
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 34,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 35,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 38,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 39,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 40,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 41,
                    "value": "#| Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Euston"
                ],
                "line": 42
              },
              {
                "cells": [
                  "Manchester"
                ],
                "line": 43
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 12:28:22.969  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1076, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:28:22.979  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1075, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:28:26.369  1572  3473 E Watchdog: !@Sync 25881 [05-03 12:28:26.379]\r\r\n05-03 12:28:49.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:28:49.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:28:56.369  1572  3473 E Watchdog: !@Sync 25882 [05-03 12:28:56.379]\r\r\n05-03 12:29:01.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:29:01.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:29:26.369  1572  3473 E Watchdog: !@Sync 25883 [05-03 12:29:26.380]\r\r\n05-03 12:29:56.369  1572  3473 E Watchdog: !@Sync 25884 [05-03 12:29:56.382]\r\r\n05-03 12:30:04.639  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:30:13.039  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:30:26.369  1572  3473 E Watchdog: !@Sync 25885 [05-03 12:30:26.383]\r\r\n05-03 12:30:31.859  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:30:56.369  1572  3473 E Watchdog: !@Sync 25886 [05-03 12:30:56.383]\r\r\n05-03 12:31:05.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:31:05.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:31:17.789   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:31:17.789   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:31:26.369  1572  3473 E Watchdog: !@Sync 25887 [05-03 12:31:26.384]\r\r\n05-03 12:31:56.369  1572  3473 E Watchdog: !@Sync 25888 [05-03 12:31:56.385]\r\r\n05-03 12:32:13.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:32:13.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:32:26.369  1572  3473 E Watchdog: !@Sync 25889 [05-03 12:32:26.385]\r\r\n05-03 12:32:35.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:32:35.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:32:56.369  1572  3473 E Watchdog: !@Sync 25890 [05-03 12:32:56.386]\r\r\n05-03 12:32:56.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:32:56.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:33:02.189   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:33:02.189   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:33:05.369  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:33:17.879  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:33:26.379  1572  3473 E Watchdog: !@Sync 25891 [05-03 12:33:26.387]\r\r\n05-03 12:33:26.379  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:33:38.989  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:33:48.639  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:33:49.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:33:49.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:33:51.549   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:33:51.549   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:33:56.379  1572  3473 E Watchdog: !@Sync 25892 [05-03 12:33:56.390]\r\r\n05-03 12:34:26.379  1572  3473 E Watchdog: !@Sync 25893 [05-03 12:34:26.390]\r\r\n05-03 12:34:38.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:34:38.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:34:51.499   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:34:51.499   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:34:56.379  1572  3473 E Watchdog: !@Sync 25894 [05-03 12:34:56.391]\r\r\n05-03 12:35:06.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:35:06.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n--------- beginning of main\r\r\n05-03 12:35:17.769   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:35:17.769   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:35:26.379  1572  3473 E Watchdog: !@Sync 25895 [05-03 12:35:26.393]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 46,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              3,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 47
              },
              {
                "cells": [
                  "DATE(+21 days;EEE)",
                  "DATE(+21 days;d MMM yyyy)",
                  "Euston",
                  "Manchester",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50074204605,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 133,
        "name": "Buy a kiosk ticket as guest customer with PayPal payment",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;buy-a-kiosk-ticket-as-guest-customer-with-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 11547792595,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20145437665,
              "status": "passed"
            },
            "line": 86,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4374920000,
              "status": "passed"
            },
            "line": 87,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3810647004,
              "status": "passed"
            },
            "line": 88,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 119627962700,
              "status": "passed"
            },
            "line": 89,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 90
              },
              {
                "cells": [
                  "HNX",
                  "AIG",
                  "single",
                  "next WED",
                  "11:00",
                  "1"
                ],
                "line": 91
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3394929041,
              "status": "passed"
            },
            "line": 92,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43993323749,
              "status": "passed"
            },
            "line": 93,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 450765111,
              "status": "passed"
            },
            "line": 94,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4396679724,
              "status": "passed"
            },
            "line": 95,
            "name": "I click on the \"Self-service ticket machine\" element",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 927007884,
              "status": "passed"
            },
            "line": 96,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 97
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 98
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18664214234,
              "status": "passed"
            },
            "comments": [
              {
                "line": 99,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 100,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 101,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 102,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 413301357,
              "status": "passed"
            },
            "line": 103,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1050141961,
              "status": "passed"
            },
            "line": 104,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8379208269,
              "status": "passed"
            },
            "line": 105,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 415911854,
              "status": "passed"
            },
            "line": 106,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5614264002,
              "status": "passed"
            },
            "line": 107,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 339014930,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 108,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 109,
                    "value": "#| Outbound Ticket Date |"
                  },
                  {
                    "line": 110,
                    "value": "#      | Outbound Passangers      |"
                  },
                  {
                    "line": 111,
                    "value": "#      | Outbound Deptarture Time |"
                  },
                  {
                    "line": 112,
                    "value": "#      | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Hunts Cross"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Aigburth"
                ],
                "line": 114
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 84,
            "name": "@BONSP-1100"
          },
          {
            "line": 84,
            "name": "@android_release"
          },
          {
            "line": 84,
            "name": "@BONSP-1098"
          },
          {
            "line": 84,
            "name": "@BONSP-1097"
          },
          {
            "line": 84,
            "name": "@BONSP-1096"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 84,
            "name": "@BONSP-1102"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53071952453,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 136,
        "name": "Booking for guest and registered user with Payment Card only",
        "description": "Register a guest customer and buy a kiosk ticket with payment card and \nverify the booking along with previous ticket bought as guest in my tickets",
        "id": "kiosk-bookings-for-guest-user-checkout;booking-for-guest-and-registered-user-with-payment-card-only",
        "after": [
          {
            "result": {
              "duration": 11435588474,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16353344984,
              "status": "passed"
            },
            "line": 140,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4512430309,
              "status": "passed"
            },
            "line": 141,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3737197708,
              "status": "passed"
            },
            "line": 142,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 120553065167,
              "status": "passed"
            },
            "line": 143,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 144
              },
              {
                "cells": [
                  "HNX",
                  "AIG",
                  "single",
                  "next WED",
                  "11:00",
                  "1"
                ],
                "line": 145
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3015961110,
              "status": "passed"
            },
            "line": 146,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43897720197,
              "status": "passed"
            },
            "line": 147,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 455924805,
              "status": "passed"
            },
            "line": 148,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 27449830765,
              "status": "passed"
            },
            "line": 149,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52157880666,
              "status": "passed"
            },
            "line": 150,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 151
              },
              {
                "cells": [
                  "Visa Credit",
                  "4242424242424242",
                  "12",
                  "20",
                  "Sarath Banala",
                  "Stored email"
                ],
                "line": 152
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 449712216,
              "status": "passed"
            },
            "line": 153,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6381503627,
              "status": "passed"
            },
            "line": 154,
            "name": "I type \"222\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "222",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2009287828,
              "status": "passed"
            },
            "line": 155,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11841957578,
              "status": "passed"
            },
            "line": 156,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4385546158,
              "status": "passed"
            },
            "comments": [
              {
                "line": 157,
                "value": "#"
              }
            ],
            "line": 158,
            "name": "I go to the \"Home\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 60458261750,
              "status": "passed"
            },
            "line": 159,
            "name": "register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname",
                  "Email"
                ],
                "line": 160
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto",
                  "Stored email"
                ],
                "line": 161
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74104082875,
              "status": "passed"
            },
            "comments": [
              {
                "line": 162,
                "value": "#    Then I should see the \"Home Menu\" screen"
              },
              {
                "line": 163,
                "value": "#    When I click on the \"Stored payment cards\" button"
              }
            ],
            "line": 164,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 165
              },
              {
                "cells": [
                  "Visa Credit",
                  "4242424242424242",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 166
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15112266232,
              "status": "passed"
            },
            "line": 167,
            "name": "go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 11
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167518619674,
              "status": "passed"
            },
            "line": 168,
            "name": "book a journey using the following criteria",
            "match": {
              "location": "BookingActions.bookAJourneyUsingTheFollowingCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Payment method"
                ],
                "line": 169
              },
              {
                "cells": [
                  "CTK",
                  "ZFD",
                  "single",
                  "next WED",
                  "card"
                ],
                "line": 170
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6651793917,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 171,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 135,
            "name": "@ios"
          },
          {
            "line": 135,
            "name": "@booking"
          },
          {
            "line": 135,
            "name": "@kiosk_book"
          },
          {
            "line": 135,
            "name": "@iosbooking"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53202878055,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 214,
        "name": "Book the each way fare kiosk ticket for many passangers using CC",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;book-the-each-way-fare-kiosk-ticket-for-many-passangers-using-cc;;2",
        "after": [
          {
            "result": {
              "duration": 12189755898,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15925157286,
              "status": "passed"
            },
            "line": 175,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13348583872,
              "status": "passed"
            },
            "line": 176,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 129353764360,
              "status": "passed"
            },
            "line": 177,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 178
              },
              {
                "cells": [
                  "EUS",
                  "MCN",
                  "COV",
                  "Return",
                  "+1 days",
                  "+33 days",
                  "3",
                  "2"
                ],
                "line": 179
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3595879535,
              "status": "passed"
            },
            "line": 180,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26836001259,
              "status": "passed"
            },
            "line": 181,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 509747170,
              "status": "passed"
            },
            "line": 182,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11047608696,
              "status": "passed"
            },
            "line": 183,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 28296831920,
              "status": "passed"
            },
            "line": 184,
            "name": "select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 14
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 53168386115,
              "status": "passed"
            },
            "line": 185,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 186
              },
              {
                "cells": [
                  "Visa Credit",
                  "4242424242424242",
                  "12",
                  "20",
                  "Sarath Banala",
                  "Email Ref"
                ],
                "line": 187
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 393222915,
              "status": "passed"
            },
            "line": 188,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 359156,
              "error_message": "java.lang.NullPointerException\r\n\tat com.thetrainline.common.steps.generic.FieldActions.noteTheFollowingFields(FieldActions.java:93)\r\n\tat ✽.And I note following fields values:(booking/GuestKioskBookings.feature:189)\r\n",
              "status": "failed"
            },
            "line": 189,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 190
              },
              {
                "cells": [
                  "Ticket Price",
                  "Total Price"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 192,
            "name": "I type \"222\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "222",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 193,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 194,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 195,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 196,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 197,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 198,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 199,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              4,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 200
              },
              {
                "cells": [
                  "DATE(+1 days;EEE dd MMM yyyy)",
                  "London Euston",
                  "Machynlleth",
                  "Standard",
                  "5",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 201
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 202,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 203,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 204,
            "name": "scroll up to the \"Show Tickets\" element",
            "match": {
              "arguments": [
                {
                  "val": "up",
                  "offset": 7
                },
                {
                  "val": "Show Tickets",
                  "offset": 18
                }
              ],
              "location": "ScrollActions.scrollDownToElement(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 205,
            "name": "I open the \"Return\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Return",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 12:52:13.659  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1086, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:52:13.659  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1087, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:52:14.839  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1083, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:52:14.839  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1085, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 12:52:26.409  1572  3473 E Watchdog: !@Sync 25929 [05-03 12:52:26.420]\r\r\n05-03 12:52:29.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:52:29.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:52:44.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:52:44.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:52:56.409  1572  3473 E Watchdog: !@Sync 25930 [05-03 12:52:56.420]\r\r\n05-03 12:52:59.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:52:59.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:53:04.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:53:04.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:53:26.409  1572  3473 E Watchdog: !@Sync 25931 [05-03 12:53:26.421]\r\r\n05-03 12:53:55.009  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:53:56.409  1572  3473 E Watchdog: !@Sync 25932 [05-03 12:53:56.421]\r\r\n05-03 12:54:03.309  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:54:21.169  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:54:26.409  1572  3473 E Watchdog: !@Sync 25933 [05-03 12:54:26.423]\r\r\n05-03 12:54:35.289  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:54:40.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:54:40.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:54:44.809  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:54:46.529   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:54:46.529   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:54:56.409  1572  3473 E Watchdog: !@Sync 25934 [05-03 12:54:56.423]\r\r\n05-03 12:55:26.409  1572  3473 E Watchdog: !@Sync 25935 [05-03 12:55:26.424]\r\r\n05-03 12:55:56.409  1572  3473 E Watchdog: !@Sync 25936 [05-03 12:55:56.425]\r\r\n05-03 12:56:26.409  1572  3473 E Watchdog: !@Sync 25937 [05-03 12:56:26.425]\r\r\n05-03 12:56:28.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:56:28.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:56:49.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:56:49.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:56:52.369  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:56:56.409  1572  3473 E Watchdog: !@Sync 25938 [05-03 12:56:56.426]\r\r\n05-03 12:57:04.159   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:57:04.159   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:57:04.889   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 12:57:04.889   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 12:57:05.129  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:57:13.059  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n--------- beginning of main\r\r\n05-03 12:57:25.339  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:57:26.419  1572  3473 E Watchdog: !@Sync 25939 [05-03 12:57:26.427]\r\r\n05-03 12:57:27.179  5414 22450 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:27.269  5414 22451 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:27.779  5414  5414 E SamsungIME: SwiftKey guide popup condition 2 : true false truetrue true true false true false true true\r\r\n05-03 12:57:33.089  5414 22459 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:33.119  5414 22460 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:33.309  5414 22463 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:33.339  5414 22464 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:33.549  5414 22467 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:33.579  5414 22468 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 12:57:34.279  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 12:57:45.239  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 24ms lastUpdatedAfter : 60078 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 207,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 208
              },
              {
                "cells": [
                  "DATE(+33 days;EEE dd MMM yyyy)",
                  "Machynlleth",
                  "London Euston",
                  "Standard",
                  "5",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 209
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 173,
            "name": "@android_release"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 49934858550,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 246,
        "name": "Book the each way fare kiosk ticket for many passangers using PayPal",
        "description": "",
        "id": "kiosk-bookings-for-guest-user-checkout;book-the-each-way-fare-kiosk-ticket-for-many-passangers-using-paypal;;2",
        "after": [
          {
            "result": {
              "duration": 11376534852,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16149659774,
              "status": "passed"
            },
            "line": 218,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13339506946,
              "status": "passed"
            },
            "line": 219,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 137956167573,
              "status": "passed"
            },
            "line": 220,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 221
              },
              {
                "cells": [
                  "EUS",
                  "MCN",
                  "COV",
                  "Return",
                  "+1 days",
                  "+10 days",
                  "3",
                  "2"
                ],
                "line": 222
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3573860301,
              "status": "passed"
            },
            "line": 223,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26639976063,
              "status": "passed"
            },
            "line": 224,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 523155842,
              "status": "passed"
            },
            "line": 225,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15962041259,
              "status": "passed"
            },
            "line": 226,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7374583797,
              "status": "passed"
            },
            "line": 227,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 228
              },
              {
                "cells": [
                  "Ticket price",
                  "Ticket Price"
                ],
                "line": 229
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24074584284,
              "status": "passed"
            },
            "line": 230,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 397618390,
              "status": "passed"
            },
            "line": 231,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 784832058,
              "status": "passed"
            },
            "line": 232,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8315312793,
              "status": "passed"
            },
            "line": 233,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427374872,
              "status": "passed"
            },
            "line": 234,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5968002709,
              "status": "passed"
            },
            "line": 235,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3305382803,
              "status": "passed"
            },
            "line": 236,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3841411013,
              "status": "passed"
            },
            "line": 237,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1280035569,
              "status": "passed"
            },
            "line": 238,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 534715804,
              "status": "passed"
            },
            "line": 239,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1257084960,
              "status": "passed"
            },
            "line": 240,
            "name": "scroll up to the \"Show Tickets\" element",
            "match": {
              "arguments": [
                {
                  "val": "up",
                  "offset": 7
                },
                {
                  "val": "Show Tickets",
                  "offset": 18
                }
              ],
              "location": "ScrollActions.scrollDownToElement(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2912381593,
              "status": "passed"
            },
            "line": 241,
            "name": "I open the \"Return\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Return",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4685240524,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 242,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 216,
            "name": "@BONSP-841"
          },
          {
            "line": 216,
            "name": "@BONSP-842"
          },
          {
            "line": 216,
            "name": "@BONSP-845"
          },
          {
            "line": 216,
            "name": "@BONSP-846"
          },
          {
            "line": 216,
            "name": "@BONSP-843"
          },
          {
            "line": 216,
            "name": "@BONSP-844"
          },
          {
            "line": 216,
            "name": "@BONSP-838"
          },
          {
            "line": 216,
            "name": "@BONSP-839"
          },
          {
            "line": 216,
            "name": "@BONSP-837"
          },
          {
            "line": 216,
            "name": "@android_release"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 216,
            "name": "@BONSP-1788"
          },
          {
            "line": 216,
            "name": "@BONSP-1787"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 216,
            "name": "@BONSP-1786"
          },
          {
            "line": 216,
            "name": "@BONSP-1784"
          }
        ]
      }
    ],
    "name": "Kiosk Bookings for Guest user checkout",
    "description": "",
    "id": "kiosk-bookings-for-guest-user-checkout",
    "keyword": "Feature",
    "uri": "booking/GuestKioskBookings.feature",
    "tags": [
      {
        "line": 1,
        "name": "@android"
      },
      {
        "line": 1,
        "name": "@android_01"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 52611697522,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 12122530532,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16163153779,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13202744385,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90602215264,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "YRK",
                  "CLS",
                  "Open Return",
                  "next MON",
                  "13:30",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3297018789,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6717109005,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38514834494,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1243684930,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20497278516,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7480653642,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13103835786,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22486627784,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53236947919,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Visa Debit",
                  "4539791001730106",
                  "12",
                  "20",
                  "Test VD",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 452328654,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7947091188,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1712970880,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 208919011667,
              "error_message": "java.lang.AssertionError: It was not possible to proceed to booking confirmation page\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.BookingActions.proceeedToBookingConfirmation(BookingActions.java:109)\r\n\tat ✽.And proceed to booking confirmation(booking/GuestMobileBooking.feature:29)\r\n",
              "status": "failed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "York"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Chester-Le-Street"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 13:03:41.959  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1092, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:03:41.959  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1091, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:03:43.549  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1093, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:03:43.559  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1095, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:03:56.419  1572  3473 E Watchdog: !@Sync 25952 [05-03 13:03:56.436]\r\r\n05-03 13:04:07.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:04:07.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:04:07.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:04:07.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:04:22.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:04:22.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:04:26.429  1572  3473 E Watchdog: !@Sync 25953 [05-03 13:04:26.437]\r\r\n05-03 13:04:31.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:04:31.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:04:56.429  1572  3473 E Watchdog: !@Sync 25954 [05-03 13:04:56.439]\r\r\n05-03 13:05:20.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:05:20.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:05:22.789  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:05:24.389   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:05:24.389   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:05:26.429  1572  3473 E Watchdog: !@Sync 25955 [05-03 13:05:26.440]\r\r\n05-03 13:05:31.469  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:05:50.249  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:05:56.429  1572  3473 E Watchdog: !@Sync 25956 [05-03 13:05:56.441]\r\r\n05-03 13:06:23.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:06:23.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:06:25.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:06:25.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:06:26.429  1572  3473 E Watchdog: !@Sync 25957 [05-03 13:06:26.444]\r\r\n05-03 13:06:56.429  1572  3473 E Watchdog: !@Sync 25958 [05-03 13:06:56.446]\r\r\n05-03 13:07:16.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:07:16.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:07:18.709   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:07:18.709   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:07:26.429  1572  3473 E Watchdog: !@Sync 25959 [05-03 13:07:26.446]\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: mScrollEnabled:false mPauseEnabled:false mStayEnabled:true mRotationEnabled:false, (false,false)\r\r\n05-03 13:07:28.039 25899 25899 E Logger  : New Logger Instance\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 13:07:28.039 25899 25899 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 13:07:28.059 25899 25899 E SmartFaceService: from registerCoverManager -\u003e mClearCoverOpened: true\r\r\n05-03 13:07:28.059 25899 25899 E SmartFaceService: SmartFaceService Started.\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: Update service state according to cover state: true\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 13:07:28.059 25899 25911 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 13:07:35.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:07:35.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:07:56.439  1572  3473 E Watchdog: !@Sync 25960 [05-03 13:07:56.447]\r\r\n05-03 13:08:02.669   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:08:02.669   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:08:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:08:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:08:19.099   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:08:19.099   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:08:24.699  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:08:26.439  1572  3473 E Watchdog: !@Sync 25961 [05-03 13:08:26.448]\r\r\n05-03 13:08:36.669  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:08:46.149  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:08:56.439  1572  3473 E Watchdog: !@Sync 25962 [05-03 13:08:56.448]\r\r\n05-03 13:08:57.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:08:57.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:08:58.759  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:09:07.669  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:09:16.709   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:09:16.709   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:09:25.889  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:09:26.439  1572  3473 E Watchdog: !@Sync 25963 [05-03 13:09:26.449]\r\r\n05-03 13:09:56.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:09:56.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:09:56.439  1572  3473 E Watchdog: !@Sync 25964 [05-03 13:09:56.450]\r\r\n05-03 13:09:58.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:09:58.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:10:13.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:10:13.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n--------- beginning of main\r\r\n05-03 13:10:26.439  1572  3473 E Watchdog: !@Sync 25965 [05-03 13:10:26.451]\r\r\n05-03 13:10:35.369   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:10:35.369   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:10:46.759  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 28ms lastUpdatedAfter : 60121 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 13:10:56.439  1572  3473 E Watchdog: !@Sync 25966 [05-03 13:10:56.452]\r\r\n05-03 13:11:14.129 30217 30217 E SchedPolicy: Failed to find cpu subsys\r\r\n05-03 13:11:16.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:11:16.599   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:11:25.179   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:11:25.179   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:11:26.439  1572  3473 E Watchdog: !@Sync 25967 [05-03 13:11:26.452]\r\r\n05-03 13:11:45.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:11:45.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:11:46.859  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 37ms lastUpdatedAfter : 60100 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 13:11:51.779 25631 25631 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 13:11:56.439  1572  3473 E Watchdog: !@Sync 25968 [05-03 13:11:56.453]\r\r\n05-03 13:12:18.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:12:18.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:12:22.019  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 13:12:22.049 26886 26886 E Zygote  : v2\r\r\n05-03 13:12:22.189  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 13:12:26.439  1572  3473 E Watchdog: !@Sync 25969 [05-03 13:12:26.454]\r\r\n05-03 13:12:33.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:12:33.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:12:46.939  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 16ms lastUpdatedAfter : 60086 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 13:12:56.439  1572  3473 E Watchdog: !@Sync 25970 [05-03 13:12:56.455]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53911714320,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 78,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;3",
        "after": [
          {
            "result": {
              "duration": 11139672265,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15923106316,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13396627066,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94491141539,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "COL",
                  "LST",
                  "Single",
                  "next WED",
                  "16:00",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3324061886,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7780311283,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38207169294,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 384121955,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20131542918,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7299288763,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12845855907,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21710707387,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53504160810,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Amex",
                  "341111111111111",
                  "12",
                  "20",
                  "Test Amex",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 445036436,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7196059492,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"1111\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 25
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1821495677,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8600083281,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 442876370,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5439518666,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 335954003,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Colchester"
                ],
                "line": 34
              },
              {
                "cells": [
                  "London Liverpool Street"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62214524701,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1325401297,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1281472194,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1525620246,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9823350596,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2404445055,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320116842,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 300413488,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53113423091,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 79,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;4",
        "after": [
          {
            "result": {
              "duration": 12042990166,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19545712730,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13148110271,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107064138514,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "LST",
                  "NRW",
                  "Open Return",
                  "next THU",
                  "12:00",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3352997710,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6801587632,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38090450339,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1079308130,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21472971214,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7441205620,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12903555267,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23676195733,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55274360905,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Diners",
                  "36005100150025",
                  "12",
                  "20",
                  "Test Diners",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 477016715,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7797607211,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1680751614,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 211265312873,
              "error_message": "java.lang.AssertionError: It was not possible to proceed to booking confirmation page\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.BookingActions.proceeedToBookingConfirmation(BookingActions.java:109)\r\n\tat ✽.And proceed to booking confirmation(booking/GuestMobileBooking.feature:29)\r\n",
              "status": "failed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "London Liverpool Street"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Norwich"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 13:20:49.869  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1099, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:20:49.869  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1100, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:20:56.459  1572  3473 E Watchdog: !@Sync 25986 [05-03 13:20:56.467]\r\r\n05-03 13:21:04.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:21:04.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:21:10.989   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:21:10.989   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:21:26.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:21:26.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:21:26.459  1572  3473 E Watchdog: !@Sync 25987 [05-03 13:21:26.467]\r\r\n05-03 13:21:40.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:21:40.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:21:56.459  1572  3473 E Watchdog: !@Sync 25988 [05-03 13:21:56.468]\r\r\n05-03 13:22:13.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:22:13.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:22:15.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:22:15.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:22:26.459  1572  3473 E Watchdog: !@Sync 25989 [05-03 13:22:26.469]\r\r\n05-03 13:22:35.119  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:22:43.749  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:22:56.459  1572  3473 E Watchdog: !@Sync 25990 [05-03 13:22:56.469]\r\r\n05-03 13:23:00.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:23:00.559   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:23:02.389  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:23:03.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:23:03.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:23:26.459  1572  3473 E Watchdog: !@Sync 25991 [05-03 13:23:26.470]\r\r\n05-03 13:23:56.459  1572  3473 E Watchdog: !@Sync 25992 [05-03 13:23:56.471]\r\r\n05-03 13:24:22.029  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 13:24:22.199  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 13:24:26.459  1572  3473 E Watchdog: !@Sync 25993 [05-03 13:24:26.472]\r\r\n05-03 13:24:31.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:24:31.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:24:46.629   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:24:46.629   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:24:56.459  1572  3473 E Watchdog: !@Sync 25994 [05-03 13:24:56.472]\r\r\n05-03 13:25:03.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:25:03.039   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:25:26.459  1572  3473 E Watchdog: !@Sync 25995 [05-03 13:25:26.473]\r\r\n05-03 13:25:41.289   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:25:41.289   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:25:54.329  1572  2388 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:25:56.459  1572  3473 E Watchdog: !@Sync 25996 [05-03 13:25:56.474]\r\r\n05-03 13:26:06.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:26:06.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:26:06.849  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:26:15.109  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:26:26.459  1572  3473 E Watchdog: !@Sync 25997 [05-03 13:26:26.474]\r\r\n05-03 13:26:29.229  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:26:39.039  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:26:41.139   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:26:41.139   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:26:56.459  1572  3473 E Watchdog: !@Sync 25998 [05-03 13:26:56.475]\r\r\n05-03 13:26:57.459  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 13:27:26.459  1572  3473 E Watchdog: !@Sync 25999 [05-03 13:27:26.475]\r\r\n05-03 13:27:33.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:27:33.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:27:43.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:27:43.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:27:56.459  1572  3473 E Watchdog: !@Sync 26000 [05-03 13:27:56.476]\r\r\n--------- beginning of main\r\r\n05-03 13:28:04.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:28:04.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:28:05.029   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:28:05.029   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:28:21.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:28:21.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:28:26.469  1572  3473 E Watchdog: !@Sync 26001 [05-03 13:28:26.477]\r\r\n05-03 13:28:37.089 30216 30216 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 13:28:45.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:28:45.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:28:48.679  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 25ms lastUpdatedAfter : 60114 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 13:28:56.469  1572  3473 E Watchdog: !@Sync 26002 [05-03 13:28:56.478]\r\r\n05-03 13:29:26.469  1572  3473 E Watchdog: !@Sync 26003 [05-03 13:29:26.478]\r\r\n05-03 13:29:28.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:29:28.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:29:28.789  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1090, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 13:29:29.819 31322 31322 E Zygote  : v2\r\r\n05-03 13:29:31.229 31322 31335 E OpaEligibilityChecker: Updating xpromo flags, clock app not present.\r\r\n05-03 13:29:31.449 31350 31350 E Zygote  : v2\r\r\n05-03 13:29:44.369   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:29:44.369   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:29:48.789  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 17ms lastUpdatedAfter : 60107 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 13:29:56.469  1572  3473 E Watchdog: !@Sync 26004 [05-03 13:29:56.479]\r\r\n05-03 13:30:02.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 13:30:02.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 13:30:26.469  1572  3473 E Watchdog: !@Sync 26005 [05-03 13:30:26.480]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52794509287,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 80,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;5",
        "after": [
          {
            "result": {
              "duration": 11139767861,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 19482549878,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13066316674,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 120133907137,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "NCL",
                  "DAR",
                  "Single",
                  "next THU",
                  "11:00",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3037675467,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7023008939,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37595281392,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 514919287,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20592386000,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7334366694,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12713374322,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23150698626,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53346391130,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Mastercard Debit",
                  "5372100000002862",
                  "12",
                  "20",
                  "Test MD",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 417624191,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7408665273,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1684446870,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8139694140,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 326670764,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5528583419,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1097138742,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Newcastle"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Darlington"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63130196758,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1771934307,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 981347651,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1774827538,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9482223937,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2175773657,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 169204343,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 241365268,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53291230167,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 81,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;6",
        "after": [
          {
            "result": {
              "duration": 11091565343,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15902061124,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13148939301,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 94096645374,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "SBE",
                  "HGT",
                  "Single",
                  "next MON",
                  "15:00",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3555890888,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6817337299,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37719525072,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 453334291,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4473292564,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 680780508,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13052054129,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15880336235,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52286558438,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Card User",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 541620512,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7726766522,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2014105650,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8753802329,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 360339345,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4047713472,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3111213337,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70501888405,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1449883693,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1313813248,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1564079375,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9020915303,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2131215626,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 320224319,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 255782277,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50334532771,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 82,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;7",
        "after": [
          {
            "result": {
              "duration": 11206831741,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15960926525,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13046936291,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 93632881786,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "POP",
                  "YRK",
                  "Single",
                  "next TUE",
                  "14:00",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3248005334,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7175482552,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37063900338,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 394049785,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21351183838,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7273200264,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13300692712,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22383743087,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 53178231850,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Maestro",
                  "560000227571480302",
                  "12",
                  "20",
                  "Test Maestro",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422337506,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7293227128,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1841119368,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5566097130,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 394256096,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6170579937,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 560310667,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 34
              },
              {
                "cells": [
                  "York"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52572194411,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1701106849,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 831835319,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1714547385,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9536927179,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2417982267,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 335678019,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 309140169,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52172718401,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 87,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 11178808930,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15961173614,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13412058353,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84956922340,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "POP",
                  "CLS",
                  "Single",
                  "+2 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3734491886,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6719427856,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 36584436771,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 498403511,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20479533508,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7070598192,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12783781864,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22930329402,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52622588861,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Mastercard Debit",
                  "5372100000002862",
                  "12",
                  "20",
                  "Test MC",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 449196165,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7657391080,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1882953753,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10190066987,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 481839937,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5744771849,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7799789692,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 68151604887,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1627960269,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1203671439,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1496421942,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9295073406,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2204958189,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 157892818,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 223779855,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50043980411,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 11158260616,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16079068334,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13385933668,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89316455880,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "YRK",
                  "CLS",
                  "Open Return",
                  "+3 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3152756347,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6720009257,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38193102800,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1050490045,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21003203780,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7451538781,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13533784159,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22497761081,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 52392851877,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Visa Debit",
                  "4539791001730106",
                  "12",
                  "20",
                  "Test VD",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 414763635,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7771732585,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2250575055,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4592972531,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 386337380,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6053589319,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1028786760,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "York"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 80559881571,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1516325396,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1927023007,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1792661930,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9721344075,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2331091354,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 323333853,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 271564348,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52970889189,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 93,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;3",
        "after": [
          {
            "result": {
              "duration": 11128788758,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16345714404,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13398456061,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85090488684,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "NCL",
                  "DAR",
                  "Single",
                  "+1 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3102719162,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6571592487,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 38437122042,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 575417634,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21271720433,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7443254159,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13338152955,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21606404157,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55057434989,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Mastercard Debit",
                  "5372100000002862",
                  "12",
                  "20",
                  "Test MD",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 411552024,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7371997874,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1872348929,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6771092315,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 453879506,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6217004498,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 376444118,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Newcastle"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Darlington"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 67478229474,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2114413067,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 629659374,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1409111383,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10043303954,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2457378172,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 229439939,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 244109436,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52372222279,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Buy a mobile ticket as guest customer with Payment Cards",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-mobile-ticket-as-guest-customer-with-payment-cards;;4",
        "after": [
          {
            "result": {
              "duration": 11076919878,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15838560449,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12907434152,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 89334173344,
              "status": "passed"
            },
            "line": 10,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "COL",
                  "LST",
                  "Single",
                  "+4 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3629612117,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7038348952,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 37418282824,
              "status": "passed"
            },
            "line": 15,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 435472625,
              "status": "passed"
            },
            "line": 16,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20392720097,
              "status": "passed"
            },
            "line": 17,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7366272711,
              "status": "passed"
            },
            "line": 18,
            "name": "note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 20
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12824753735,
              "status": "passed"
            },
            "line": 21,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22773619369,
              "status": "passed"
            },
            "line": 22,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56524730998,
              "status": "passed"
            },
            "line": 23,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              6,
              7,
              12,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Amex",
                  "341111111111111",
                  "12",
                  "20",
                  "Test Amex",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 25
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 438347764,
              "status": "passed"
            },
            "line": 26,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6370558820,
              "status": "passed"
            },
            "line": 27,
            "name": "I type \"1111\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 25
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              8
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1821193770,
              "status": "passed"
            },
            "line": 28,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5824805583,
              "status": "passed"
            },
            "line": 29,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 389505786,
              "status": "passed"
            },
            "line": 30,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6621456575,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 718429511,
              "status": "passed"
            },
            "comments": [
              {
                "line": 32,
                "value": "#When I scroll to the \"Guest booking\" text"
              }
            ],
            "line": 33,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Colchester"
                ],
                "line": 34
              },
              {
                "cells": [
                  "London Liverpool Street"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103358831160,
              "status": "passed"
            },
            "comments": [
              {
                "line": 36,
                "value": "#      | \u003cEmail\u003e                  |"
              },
              {
                "line": 37,
                "value": "#    And at least one of the following labels is shown:"
              },
              {
                "line": 38,
                "value": "#      | Guest booking |"
              },
              {
                "line": 39,
                "value": "#      | Guest Booking |"
              }
            ],
            "line": 40,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1718708464,
              "status": "passed"
            },
            "line": 41,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1034280767,
              "status": "passed"
            },
            "line": 42,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1435707022,
              "status": "passed"
            },
            "line": 43,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9640690865,
              "status": "passed"
            },
            "line": 44,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2387994630,
              "status": "passed"
            },
            "line": 45,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 46
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 48
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 49
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 239757437,
              "status": "passed"
            },
            "line": 53,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 240566483,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 54,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52897420450,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 163,
        "name": "Book the each way fare Mobile ticket for many passangers using CC",
        "description": "",
        "id": "mobile-bookings-for-guest-user-checkout;book-the-each-way-fare-mobile-ticket-for-many-passangers-using-cc;;2",
        "after": [
          {
            "result": {
              "duration": 11339210980,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15850368310,
              "status": "passed"
            },
            "line": 98,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13666971095,
              "status": "passed"
            },
            "line": 99,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110860455734,
              "status": "passed"
            },
            "line": 100,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 101
              },
              {
                "cells": [
                  "POP",
                  "CLS",
                  "",
                  "Return",
                  "+2 hours",
                  "tomorrow",
                  "3",
                  "2"
                ],
                "line": 102
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3580608113,
              "status": "passed"
            },
            "line": 103,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24297069016,
              "status": "passed"
            },
            "line": 104,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 490745927,
              "status": "passed"
            },
            "line": 105,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21358090705,
              "status": "passed"
            },
            "line": 106,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7777442896,
              "status": "passed"
            },
            "line": 107,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 108
              },
              {
                "cells": [
                  "Ticket price",
                  "Ticket Price"
                ],
                "line": 109
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16481431904,
              "status": "passed"
            },
            "line": 110,
            "name": "I clear text from \"Traveller Name\" field",
            "match": {
              "arguments": [
                {
                  "val": "Traveller Name",
                  "offset": 19
                }
              ],
              "location": "FieldActions.clearTextFromField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6635371576,
              "status": "passed"
            },
            "line": 111,
            "name": "I type \"Test MC\" text into \"Traveller Name\" field",
            "match": {
              "arguments": [
                {
                  "val": "Test MC",
                  "offset": 8
                },
                {
                  "val": "Traveller Name",
                  "offset": 28
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              14
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 839054625,
              "status": "passed"
            },
            "line": 112,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22441496995,
              "status": "passed"
            },
            "line": 113,
            "name": "I select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 55301539025,
              "status": "passed"
            },
            "line": 114,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              17,
              11,
              12,
              15
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Email"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Amex",
                  "341111111111111",
                  "12",
                  "20",
                  "Test MC",
                  "mykola.kolisnyk@thetrainline.com"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 445812808,
              "status": "passed"
            },
            "line": 117,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8469498203,
              "status": "passed"
            },
            "line": 118,
            "name": "I type \"1111\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 25
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              13
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2273036348,
              "status": "passed"
            },
            "line": 119,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5615952846,
              "status": "passed"
            },
            "line": 120,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 380988927,
              "status": "passed"
            },
            "line": 121,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7300216358,
              "status": "passed"
            },
            "line": 122,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 389914629,
              "status": "passed"
            },
            "line": 123,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 124
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 125
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 71440843492,
              "status": "passed"
            },
            "line": 126,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1671526164,
              "status": "passed"
            },
            "line": 127,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1706478796,
              "status": "passed"
            },
            "line": 128,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1866644829,
              "status": "passed"
            },
            "line": 129,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9885214276,
              "status": "passed"
            },
            "line": 130,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2506041382,
              "status": "passed"
            },
            "line": 131,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Type"
                ],
                "line": 132
              },
              {
                "cells": [
                  "Ticket Class"
                ],
                "line": 133
              },
              {
                "cells": [
                  "Passengers"
                ],
                "line": 134
              },
              {
                "cells": [
                  "Total Price"
                ],
                "line": 135
              },
              {
                "cells": [
                  "Transaction Id"
                ],
                "line": 136
              },
              {
                "cells": [
                  "Purchase Date"
                ],
                "line": 137
              },
              {
                "cells": [
                  "Journey Date"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 245762094,
              "status": "passed"
            },
            "line": 139,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 233534047,
              "status": "passed"
            },
            "line": 140,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 912705104,
              "status": "passed"
            },
            "line": 141,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 625431055,
              "status": "passed"
            },
            "line": 142,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 176677218,
              "status": "passed"
            },
            "line": 143,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 197452369,
              "status": "passed"
            },
            "line": 144,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1236041658,
              "status": "passed"
            },
            "line": 145,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13490108897,
              "status": "passed"
            },
            "line": 146,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 2029448093,
              "status": "passed"
            },
            "line": 147,
            "name": "click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 5502167628,
              "status": "passed"
            },
            "line": 148,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 516014308,
              "status": "passed"
            },
            "line": 149,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 150
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 151
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10526151959,
              "status": "passed"
            },
            "line": 152,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Info Official Reference"
                ],
                "line": 153
              },
              {
                "cells": [
                  "Ticket Passanger ID"
                ],
                "line": 154
              },
              {
                "cells": [
                  "Ticket Passenger Name"
                ],
                "line": 155
              },
              {
                "cells": [
                  "Ticket Purchased On"
                ],
                "line": 156
              },
              {
                "cells": [
                  "Ticket Activated"
                ],
                "line": 157
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 195427863,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 158,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              16
            ],
            "rows": [
              {
                "cells": [
                  "Test Mc"
                ],
                "line": 159
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 96,
            "name": "@BONSP-1990"
          },
          {
            "line": 96,
            "name": "@BONSP-817"
          },
          {
            "line": 96,
            "name": "@android_release"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 96,
            "name": "@BONSP-1736"
          },
          {
            "line": 96,
            "name": "@BONSP-1669"
          },
          {
            "line": 96,
            "name": "@BONSP-1668"
          },
          {
            "line": 96,
            "name": "@BONSP-1788"
          },
          {
            "line": 96,
            "name": "@BONSP-1963"
          },
          {
            "line": 96,
            "name": "@BONSP-1787"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 96,
            "name": "@BONSP-1786"
          },
          {
            "line": 96,
            "name": "@BONSP-1555"
          },
          {
            "line": 96,
            "name": "@BONSP-1784"
          },
          {
            "line": 96,
            "name": "@BONSP-1541"
          },
          {
            "line": 96,
            "name": "@BONSP-1783"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52368081453,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 206,
        "name": "Buy a one way mobile ticket as guest customer with PayPal payment",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-one-way-mobile-ticket-as-guest-customer-with-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 11643998341,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60760,
              "status": "passed"
            },
            "line": 170,
            "name": "I have no PayPal client installed",
            "match": {
              "location": "PayPalActions.removePPClient()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20668625912,
              "status": "passed"
            },
            "line": 171,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4749047157,
              "status": "passed"
            },
            "line": 172,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3894902307,
              "status": "passed"
            },
            "line": 173,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 117926944695,
              "status": "passed"
            },
            "line": 174,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 175
              },
              {
                "cells": [
                  "MAN",
                  "EUS",
                  "single",
                  "next WED",
                  "11:00",
                  "1"
                ],
                "line": 176
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3018012890,
              "status": "passed"
            },
            "line": 177,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44164369508,
              "status": "passed"
            },
            "line": 178,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 519164349,
              "status": "passed"
            },
            "line": 179,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20810954313,
              "status": "passed"
            },
            "line": 180,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18763537886,
              "status": "passed"
            },
            "comments": [
              {
                "line": 181,
                "value": "#And I note following fields values:"
              },
              {
                "line": 182,
                "value": "#  | Field                   | As                       |"
              },
              {
                "line": 183,
                "value": "#  | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 184,
                "value": "#| Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 185,
                "value": "#| Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 186,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              },
              {
                "line": 187,
                "value": "# Add clicking on Paypal without traveller name to make sure we\u0027re still on Payment screen"
              },
              {
                "line": 188,
                "value": "# And then populate traveller name to proceed"
              },
              {
                "line": 189,
                "value": "# Ticket is available instantly message verification should be added"
              },
              {
                "line": 190,
                "value": "#And type \"Test User\" text into \"Traveller Name\" field"
              }
            ],
            "line": 191,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 482649794,
              "status": "passed"
            },
            "line": 192,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1044491870,
              "status": "passed"
            },
            "line": 193,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8238516054,
              "status": "passed"
            },
            "line": 194,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6059705503,
              "status": "passed"
            },
            "line": 195,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 683197386,
              "status": "passed"
            },
            "line": 196,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 197
              },
              {
                "cells": [
                  "London Euston"
                ],
                "line": 198
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7851202201,
              "status": "passed"
            },
            "line": 199,
            "name": "I scroll to the \"Guest booking\" text",
            "match": {
              "arguments": [
                {
                  "val": "Guest booking",
                  "offset": 17
                }
              ],
              "location": "ScrollActions.scrollToText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 207661581,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 200,
            "name": "I should see at least one of the following labels is shown:",
            "match": {
              "location": "LabelActions.atLeastOneLabelIsShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Guest booking"
                ],
                "line": 201
              },
              {
                "cells": [
                  "Guest Booking"
                ],
                "line": 202
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 165,
            "name": "@BONSP-1100"
          },
          {
            "line": 165,
            "name": "@android_release"
          },
          {
            "line": 165,
            "name": "@BONSP-1098"
          },
          {
            "line": 165,
            "name": "@BONSP-1097"
          },
          {
            "line": 165,
            "name": "@BONSP-1096"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 165,
            "name": "@BONSP-1102"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53879596049,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 207,
        "name": "Buy a one way mobile ticket as guest customer with PayPal payment",
        "description": "[X] Make sure that all the buttons \"Pay by card\", \"Pay with Paypal\" and \"Change payment methods\" behaves in the correct way.\n(I.E. if we are not logged in and we try to add a new card, the screen that opens up is the guest one and viceversa).",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-one-way-mobile-ticket-as-guest-customer-with-paypal-payment;;3",
        "after": [
          {
            "result": {
              "duration": 11722990252,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 51848,
              "status": "passed"
            },
            "line": 170,
            "name": "I have no PayPal client installed",
            "match": {
              "location": "PayPalActions.removePPClient()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16537350066,
              "status": "passed"
            },
            "line": 171,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4489484019,
              "status": "passed"
            },
            "line": 172,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3752394059,
              "status": "passed"
            },
            "line": 173,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 89815903374,
              "status": "passed"
            },
            "line": 174,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 175
              },
              {
                "cells": [
                  "MAN",
                  "EUS",
                  "Open Return",
                  "+2 hours",
                  "",
                  "3"
                ],
                "line": 176
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3982208545,
              "status": "passed"
            },
            "line": 177,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43884718478,
              "status": "passed"
            },
            "line": 178,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1150576566,
              "status": "passed"
            },
            "line": 179,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21288855415,
              "status": "passed"
            },
            "line": 180,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18029153208,
              "status": "passed"
            },
            "comments": [
              {
                "line": 181,
                "value": "#And I note following fields values:"
              },
              {
                "line": 182,
                "value": "#  | Field                   | As                       |"
              },
              {
                "line": 183,
                "value": "#  | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 184,
                "value": "#| Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 185,
                "value": "#| Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 186,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              },
              {
                "line": 187,
                "value": "# Add clicking on Paypal without traveller name to make sure we\u0027re still on Payment screen"
              },
              {
                "line": 188,
                "value": "# And then populate traveller name to proceed"
              },
              {
                "line": 189,
                "value": "# Ticket is available instantly message verification should be added"
              },
              {
                "line": 190,
                "value": "#And type \"Test User\" text into \"Traveller Name\" field"
              }
            ],
            "line": 191,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 397295960,
              "status": "passed"
            },
            "line": 192,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 903773190,
              "status": "passed"
            },
            "line": 193,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8077302257,
              "status": "passed"
            },
            "line": 194,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6214514710,
              "status": "passed"
            },
            "line": 195,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 685027731,
              "status": "passed"
            },
            "line": 196,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 197
              },
              {
                "cells": [
                  "London Euston"
                ],
                "line": 198
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8546219600,
              "status": "passed"
            },
            "line": 199,
            "name": "I scroll to the \"Guest booking\" text",
            "match": {
              "arguments": [
                {
                  "val": "Guest booking",
                  "offset": 17
                }
              ],
              "location": "ScrollActions.scrollToText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 237400239,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 200,
            "name": "I should see at least one of the following labels is shown:",
            "match": {
              "location": "LabelActions.atLeastOneLabelIsShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Guest booking"
                ],
                "line": 201
              },
              {
                "cells": [
                  "Guest Booking"
                ],
                "line": 202
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 165,
            "name": "@BONSP-1100"
          },
          {
            "line": 165,
            "name": "@android_release"
          },
          {
            "line": 165,
            "name": "@BONSP-1098"
          },
          {
            "line": 165,
            "name": "@BONSP-1097"
          },
          {
            "line": 165,
            "name": "@BONSP-1096"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 165,
            "name": "@BONSP-1102"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53786259500,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 260,
        "name": "Buy a return mobile ticket as guest customer with PayPal payment",
        "description": "",
        "id": "mobile-bookings-for-guest-user-checkout;buy-a-return-mobile-ticket-as-guest-customer-with-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 11539325963,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 78582,
              "status": "passed"
            },
            "line": 212,
            "name": "I have no PayPal client installed",
            "match": {
              "location": "PayPalActions.removePPClient()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15636728538,
              "status": "passed"
            },
            "line": 213,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13311524372,
              "status": "passed"
            },
            "line": 214,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108007459644,
              "status": "passed"
            },
            "line": 215,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 216
              },
              {
                "cells": [
                  "POP",
                  "CLS",
                  "",
                  "Return",
                  "+2 hours",
                  "tomorrow",
                  "3",
                  "2"
                ],
                "line": 217
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3620966178,
              "status": "passed"
            },
            "line": 218,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24600182117,
              "status": "passed"
            },
            "line": 219,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 606571583,
              "status": "passed"
            },
            "line": 220,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21209020433,
              "status": "passed"
            },
            "line": 221,
            "name": "I click on the \"Mobile ticket\" element",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7431605352,
              "status": "passed"
            },
            "line": 222,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 223
              },
              {
                "cells": [
                  "Ticket price",
                  "Ticket Price"
                ],
                "line": 224
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16389862241,
              "status": "passed"
            },
            "line": 225,
            "name": "I clear text from \"Traveller Name\" field",
            "match": {
              "arguments": [
                {
                  "val": "Traveller Name",
                  "offset": 19
                }
              ],
              "location": "FieldActions.clearTextFromField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8967638962,
              "status": "passed"
            },
            "line": 226,
            "name": "I type \"Paypal User\" text into \"Traveller Name\" field",
            "match": {
              "arguments": [
                {
                  "val": "Paypal User",
                  "offset": 8
                },
                {
                  "val": "Traveller Name",
                  "offset": 32
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 950584722,
              "status": "passed"
            },
            "line": 227,
            "name": "I should see the \"Buy\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 18
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11098637206,
              "status": "passed"
            },
            "line": 228,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 553788880,
              "status": "passed"
            },
            "line": 229,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 910798066,
              "status": "passed"
            },
            "line": 230,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8468520919,
              "status": "passed"
            },
            "line": 231,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 386453769,
              "status": "passed"
            },
            "line": 232,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5369858331,
              "status": "passed"
            },
            "line": 233,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1839434305,
              "status": "passed"
            },
            "line": 234,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 235
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 236
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 77777255217,
              "status": "passed"
            },
            "line": 237,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1612545725,
              "status": "passed"
            },
            "line": 238,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1784677593,
              "status": "passed"
            },
            "line": 239,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1795596207,
              "status": "passed"
            },
            "line": 240,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9827990730,
              "status": "passed"
            },
            "line": 241,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1002634260,
              "status": "passed"
            },
            "line": 242,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 679487547,
              "status": "passed"
            },
            "line": 243,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1365726416,
              "status": "passed"
            },
            "line": 244,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15950774022,
              "status": "passed"
            },
            "line": 245,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1313260472,
              "status": "passed"
            },
            "line": 246,
            "name": "click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4838592584,
              "status": "passed"
            },
            "line": 247,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 891379608,
              "status": "passed"
            },
            "line": 248,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Poppleton"
                ],
                "line": 249
              },
              {
                "cells": [
                  "Chester-le-Street"
                ],
                "line": 250
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9143283809,
              "status": "passed"
            },
            "line": 251,
            "name": "the following elements are shown:",
            "match": {
              "location": "FieldActions.elementsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Ticket Info Official Reference"
                ],
                "line": 252
              },
              {
                "cells": [
                  "Ticket Passanger ID"
                ],
                "line": 253
              },
              {
                "cells": [
                  "Ticket Passenger Name"
                ],
                "line": 254
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 616045741,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 255,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              11
            ],
            "rows": [
              {
                "cells": [
                  "Paypal User"
                ],
                "line": 256
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 209,
            "name": "@BONSP-1100"
          },
          {
            "line": 209,
            "name": "@BONSP-1098"
          },
          {
            "line": 209,
            "name": "@BONSP-1097"
          },
          {
            "line": 209,
            "name": "@BONSP-1096"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          },
          {
            "line": 209,
            "name": "@BONSP-817"
          },
          {
            "line": 209,
            "name": "@BONSP-1102"
          }
        ]
      }
    ],
    "name": "Mobile Bookings for Guest user checkout",
    "description": "",
    "id": "mobile-bookings-for-guest-user-checkout",
    "keyword": "Feature",
    "uri": "booking/GuestMobileBooking.feature",
    "tags": [
      {
        "line": 1,
        "name": "@android"
      },
      {
        "line": 1,
        "name": "@android_01"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 52713020297,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 75,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 12230402638,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63406164413,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14998765368,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39737316257,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15513563945,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 62758444352,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Amex",
                  "341111111111111",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14982138874,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 143810234921,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "ZFD",
                  "LUT",
                  "",
                  "Open Return",
                  "+21 days",
                  "",
                  "2",
                  "16-25 Railcard, Senior Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3196040319,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6568012539,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 361668493,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 241438450,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Valid railcards savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Valid railcards savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37968706439,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 961833596,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11366293505,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8192729062,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28758713315,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"1111\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "1111",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 25
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1709783842,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5459703775,
              "status": "passed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 423885658,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6249403612,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 785245763,
              "status": "passed"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2448965009,
              "status": "passed"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4440020404,
              "status": "passed"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 3494982348,
              "error_message": "java.lang.AssertionError: The \u0027Journey Date\u0027 field contains unexpected content. Expected: \u0027Thu 24 May\u0027. Actual: \u0027Wed 23 May 2018\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.generic.PageActions.pageContainsData(PageActions.java:87)\r\n\tat ✽.And the page contains the following data:(booking/RegisteredKioskBooking.feature:49)\r\n",
              "status": "failed"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Farringdon",
                  "Luton",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(+21 days;EEE dd MMM)",
                  "2",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 14:50:56.089  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1133, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 14:50:56.089  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1134, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 14:50:56.109 23311 23311 E libpersona: scanKnoxPersonas\r\r\n05-03 14:50:56.119 23311 23311 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 14:50:56.129 23311 23311 E libpersona: scanKnoxPersonas\r\r\n05-03 14:50:56.129 23311 23311 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 14:50:56.599  1572  3473 E Watchdog: !@Sync 26166 [05-03 14:50:56.613]\r\r\n05-03 14:50:57.609  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1135, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 14:50:57.609  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1137, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 14:51:26.599  1572  3473 E Watchdog: !@Sync 26167 [05-03 14:51:26.614]\r\r\n05-03 14:51:39.119   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:51:39.119   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:51:46.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:51:46.229   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:51:56.599  1572  3473 E Watchdog: !@Sync 26168 [05-03 14:51:56.615]\r\r\n05-03 14:52:16.649  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:52:24.949  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:52:26.599  1572  3473 E Watchdog: !@Sync 26169 [05-03 14:52:26.616]\r\r\n05-03 14:52:28.059  1572  2388 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:52:29.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:52:29.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:52:35.629  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:52:37.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:52:37.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:52:56.609  1572  3473 E Watchdog: !@Sync 26170 [05-03 14:52:56.617]\r\r\n05-03 14:53:26.609  1572  3473 E Watchdog: !@Sync 26171 [05-03 14:53:26.618]\r\r\n05-03 14:53:56.609  1572  3473 E Watchdog: !@Sync 26172 [05-03 14:53:56.618]\r\r\n05-03 14:54:10.529  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:54:20.159  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:54:21.159   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:54:21.159   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:54:26.609  1572  3473 E Watchdog: !@Sync 26173 [05-03 14:54:26.619]\r\r\n05-03 14:54:29.409  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:54:32.099   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:54:32.099   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:54:56.609  1572  3473 E Watchdog: !@Sync 26174 [05-03 14:54:56.620]\r\r\n05-03 14:55:26.609  1572  3473 E Watchdog: !@Sync 26175 [05-03 14:55:26.620]\r\r\n05-03 14:55:38.809  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:55:48.159  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:55:56.609  1572  3473 E Watchdog: !@Sync 26176 [05-03 14:55:56.621]\r\r\n05-03 14:56:06.919  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:56:26.609  1572  3473 E Watchdog: !@Sync 26177 [05-03 14:56:26.622]\r\r\n05-03 14:56:56.609  1572  3473 E Watchdog: !@Sync 26178 [05-03 14:56:56.623]\r\r\n05-03 14:57:08.629  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:57:18.409  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:57:24.549  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:57:26.609  1572  3473 E Watchdog: !@Sync 26179 [05-03 14:57:26.624]\r\r\n05-03 14:57:34.319  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:57:36.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:57:36.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:57:37.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:57:37.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:57:56.609  1572  3473 E Watchdog: !@Sync 26180 [05-03 14:57:56.624]\r\r\n05-03 14:58:13.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:58:13.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:58:17.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 14:58:17.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 14:58:26.609  1572  3473 E Watchdog: !@Sync 26181 [05-03 14:58:26.625]\r\r\n05-03 14:58:56.609  1572  3473 E Watchdog: !@Sync 26182 [05-03 14:58:56.626]\r\r\n--------- beginning of main\r\r\n05-03 14:58:58.259  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 18ms lastUpdatedAfter : 60120 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 14:59:12.349  5414 25233 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 14:59:12.489  5414 25237 E SamsungIME: lang.getLanguageCode():en, lang.getCountryCode():GB\r\r\n05-03 14:59:13.029  5414  5414 E SamsungIME: SwiftKey guide popup condition 2 : true false truetrue true true false true false true true\r\r\n05-03 14:59:18.029  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 14:59:24.549 23917 23934 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 14:59:24.649 24141 24141 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 14:59:25.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 1\r\r\n05-03 14:59:26.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 2\r\r\n05-03 14:59:26.619  1572  3473 E Watchdog: !@Sync 26183 [05-03 14:59:26.627]\r\r\n05-03 14:59:27.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 3\r\r\n05-03 14:59:28.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 4\r\r\n05-03 14:59:29.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter database empty: 5\r\r\n05-03 14:59:29.579 23917 23934 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 14:59:29.589 24141 24141 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 14:59:30.129 24141 25284 E SnowplowTracker-\u003eEmitter: pool-20-thread-2|Emitter loop stopping: empty limit reached.\r\r\n05-03 14:59:31.139 24141 24141 E MotionRecognitionManager: mSContextService \u003d null\r\r\n05-03 14:59:31.139 24141 24141 E MotionRecognitionManager: motionService \u003d com.samsung.android.motion.IMotionRecognitionService$Stub$Proxy@c9b0f08\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.my_tickets.ItineraryJourneyIdentifier$$Parcelable\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : \t... 16 more\r\r\n05-03 14:59:35.159  1572  4002 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50480672816,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 76,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;3",
        "after": [
          {
            "result": {
              "duration": 11377791628,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 69202529701,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15059842414,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39350115281,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15337149478,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63905283266,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Diners",
                  "36005100150025",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14473710590,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 136094511772,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "ZFD",
                  "LUT",
                  "",
                  "Open Return",
                  "tomorrow",
                  "",
                  "3",
                  "Senior Railcard, Senior Railcard, Senior Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3120595950,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7061130515,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 432797318,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 175454468,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Senior Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Senior Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38012301229,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 975362166,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11150465580,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8274267470,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34875385283,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2081154138,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5166825812,
              "status": "passed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 438383679,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6355844764,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 344076599,
              "status": "passed"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Luton"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2517217075,
              "status": "passed"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4240254585,
              "status": "passed"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4321262090,
              "status": "passed"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Farringdon",
                  "Luton",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(tomorrow;EEE dd MMM)",
                  "3",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 960162576,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 524649175,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52761684047,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;4",
        "after": [
          {
            "result": {
              "duration": 11318733956,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 69218929899,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15804870804,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38497609587,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15286445020,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64094124262,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Mastercard Debit",
                  "5372100000002862",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15224206252,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 120052342534,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "SWA",
                  "AMF",
                  "",
                  "Open Return",
                  "tomorrow",
                  "",
                  "2",
                  "Heart Of Wales Railcard, Highland Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3446997212,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6781636920,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 454137666,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Swansea"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Ammanford"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 160683974,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Heart Of Wales Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Heart Of Wales Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36271532483,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 615183766,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12185021789,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8202672553,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35018096603,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1713360009,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5269862813,
              "status": "passed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 427481269,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6421846839,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 318595154,
              "status": "passed"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Swansea"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Ammanford"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2197684604,
              "status": "passed"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4677658281,
              "status": "passed"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5023537411,
              "status": "passed"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Swansea",
                  "Ammanford",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(tomorrow;EEE dd MMM)",
                  "2",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 896048096,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 527767621,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52605629676,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 78,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;5",
        "after": [
          {
            "result": {
              "duration": 11212632516,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62549434180,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15585432416,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39331816147,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15921602181,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64317645686,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Mastercard",
                  "5200000000000056",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14743762972,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 104305769504,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "PLY",
                  "NTA",
                  "",
                  "Single",
                  "+3 hours",
                  "",
                  "1",
                  "Devon And Cornwall"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3150060246,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6753084826,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 374584067,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Plymouth"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Newton Abbot"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 178346078,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Devon And Cornwall Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Devon And Cornwall Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37616059782,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 445753938,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4426174264,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1644136063,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24362544510,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2138665279,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4771766610,
              "status": "passed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 383180859,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5838486457,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1749584000,
              "status": "passed"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Plymouth"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Newton Abbot"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2244252018,
              "status": "passed"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4094444802,
              "status": "passed"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4821976081,
              "status": "passed"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Plymouth",
                  "Newton Abbot",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(+3 hours;EEE dd MMM)",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 817993231,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 529629021,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53094132362,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 79,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;6",
        "after": [
          {
            "result": {
              "duration": 11993625115,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62496171072,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15624771882,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39532917595,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15996864270,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64566225130,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Maestro",
                  "560000227571480302",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14838075453,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 124525343183,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "SBE",
                  "HGT",
                  "",
                  "Single",
                  "next WED",
                  "",
                  "2",
                  "Two Together Railcard,Senior Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3165292242,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6511092790,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 470909712,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40484581405,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat com.thetrainline.common.steps.generic.LabelActions.messageIsShown(LabelActions.java:27)\r\n\tat ✽.And the \"Two Together Railcard savings applied\" text is shown(booking/RegisteredKioskBooking.feature:23)\r\n",
              "status": "failed"
            },
            "line": 23,
            "name": "the \"Two Together Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Two Together Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Starbeck",
                  "Harrogate",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(next WED;EEE dd MMM)",
                  "2",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 15:26:05.059  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1146, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 15:26:05.059  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1145, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 15:26:26.649  1572  3473 E Watchdog: !@Sync 26237 [05-03 15:26:26.665]\r\r\n05-03 15:26:32.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:26:32.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:26:32.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:26:32.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:26:47.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:26:47.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:26:55.509   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:26:55.509   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:26:56.659  1572  3473 E Watchdog: !@Sync 26238 [05-03 15:26:56.667]\r\r\n05-03 15:27:25.759  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:27:26.659  1572  3473 E Watchdog: !@Sync 26239 [05-03 15:27:26.669]\r\r\n05-03 15:27:34.469  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:27:37.329  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:27:45.019  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:27:56.659  1572  3473 E Watchdog: !@Sync 26240 [05-03 15:27:56.670]\r\r\n05-03 15:28:26.659  1572  3473 E Watchdog: !@Sync 26241 [05-03 15:28:26.672]\r\r\n05-03 15:28:56.659  1572  3473 E Watchdog: !@Sync 26242 [05-03 15:28:56.673]\r\r\n05-03 15:29:19.639  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:29:26.659  1572  3473 E Watchdog: !@Sync 26243 [05-03 15:29:26.674]\r\r\n05-03 15:29:29.539  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:29:39.189  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:29:56.659  1572  3473 E Watchdog: !@Sync 26244 [05-03 15:29:56.675]\r\r\n05-03 15:29:58.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:29:58.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:29:59.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:29:59.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:30:26.659  1572  3473 E Watchdog: !@Sync 26245 [05-03 15:30:26.675]\r\r\n05-03 15:30:48.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:30:48.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:30:51.049  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:30:51.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:30:51.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:30:56.659  1572  3473 E Watchdog: !@Sync 26246 [05-03 15:30:56.676]\r\r\n05-03 15:30:59.599  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:31:18.029  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:31:26.659  1572  3473 E Watchdog: !@Sync 26247 [05-03 15:31:26.676]\r\r\n05-03 15:31:53.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:31:53.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:31:55.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:31:55.069   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:31:56.669  1572  3473 E Watchdog: !@Sync 26248 [05-03 15:31:56.677]\r\r\n05-03 15:32:00.179  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:32:10.159  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:32:16.009  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:32:25.489  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:32:26.669  1572  3473 E Watchdog: !@Sync 26249 [05-03 15:32:26.678]\r\r\n--------- beginning of main\r\r\n05-03 15:32:56.669  1572  3473 E Watchdog: !@Sync 26250 [05-03 15:32:56.679]\r\r\n05-03 15:33:01.869  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 26ms lastUpdatedAfter : 60120 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50226473255,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 84,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 12326964570,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64535182707,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15555194720,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38944607071,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16382469568,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 64009568673,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Visa Debit",
                  "4539791001730106",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14581518695,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100347115653,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "GYP",
                  "JCH",
                  "",
                  "Open Return",
                  "tomorrow",
                  "",
                  "1",
                  "Esk Valley Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3355360579,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6424376594,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 404021089,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Gypsy Lane"
                ],
                "line": 21
              },
              {
                "cells": [
                  "James Cook University Hospital"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 183047241,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Esk Valley Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Esk Valley Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36987058502,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1111924358,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8395557159,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8144525463,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35580406662,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1948875626,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 211370560440,
              "error_message": "java.lang.AssertionError: It was not possible to proceed to booking confirmation page\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.steps.BookingActions.proceeedToBookingConfirmation(BookingActions.java:109)\r\n\tat ✽.And proceed to booking confirmation(booking/RegisteredKioskBooking.feature:41)\r\n",
              "status": "failed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Gypsy Lane"
                ],
                "line": 45
              },
              {
                "cells": [
                  "James Cook University Hospital"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Gypsy Lane",
                  "James Cook University Hospital",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(tomorrow;EEE dd MMM)",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 15:33:56.669  1572  3473 E Watchdog: !@Sync 26252 [05-03 15:33:56.680]\r\r\n05-03 15:34:06.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:34:06.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:34:25.909   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:34:25.909   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:34:26.669  1572  3473 E Watchdog: !@Sync 26253 [05-03 15:34:26.680]\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: Performing stop of activity that is not resumed: {com.thetrainline.androidconfigurator/com.thetrainline.androidconfigurator.mvp.presentation.activity.MainActivity}\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: java.lang.RuntimeException: Performing stop of activity that is not resumed: {com.thetrainline.androidconfigurator/com.thetrainline.androidconfigurator.mvp.presentation.activity.MainActivity}\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.app.ActivityThread.performStopActivityInner(ActivityThread.java:4752)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.app.ActivityThread.handleStopActivity(ActivityThread.java:4851)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.app.ActivityThread.access$1400(ActivityThread.java:229)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1850)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.os.Looper.loop(Looper.java:148)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat android.app.ActivityThread.main(ActivityThread.java:7331)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat java.lang.reflect.Method.invoke(Native Method)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)\r\r\n05-03 15:34:29.309  3279  3279 E ActivityThread: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)\r\r\n05-03 15:34:56.679  1572  3473 E Watchdog: !@Sync 26254 [05-03 15:34:56.681]\r\r\n05-03 15:34:57.299  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:35:05.789  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:35:08.639  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:35:14.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:35:14.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:35:16.909  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:35:18.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:35:18.929   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:35:26.669  1572  3473 E Watchdog: !@Sync 26255 [05-03 15:35:26.682]\r\r\n05-03 15:35:56.669  1572  3473 E Watchdog: !@Sync 26256 [05-03 15:35:56.683]\r\r\n05-03 15:36:22.049  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 15:36:22.209  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 15:36:26.669  1572  3473 E Watchdog: !@Sync 26257 [05-03 15:36:26.684]\r\r\n05-03 15:36:52.349  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:36:56.669  1572  3473 E Watchdog: !@Sync 26258 [05-03 15:36:56.684]\r\r\n05-03 15:37:02.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:37:02.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:37:03.319  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:37:11.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:37:11.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:37:12.429  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:37:26.669  1572  3473 E Watchdog: !@Sync 26259 [05-03 15:37:26.685]\r\r\n05-03 15:37:56.679  1572  3473 E Watchdog: !@Sync 26260 [05-03 15:37:56.686]\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: mScrollEnabled:false mPauseEnabled:false mStayEnabled:true mRotationEnabled:false, (false,false)\r\r\n05-03 15:38:03.289  4327  4327 E Logger  : New Logger Instance\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 15:38:03.289  4327  4327 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 15:38:03.299  4327  4327 E SmartFaceService: from registerCoverManager -\u003e mClearCoverOpened: true\r\r\n05-03 15:38:03.299  4327  4327 E SmartFaceService: SmartFaceService Started.\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: Update service state according to cover state: true\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 15:38:03.309  4327  4343 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 15:38:21.449  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:38:26.679  1572  3473 E Watchdog: !@Sync 26261 [05-03 15:38:26.688]\r\r\n05-03 15:38:29.889  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:38:48.769  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:38:56.679  1572  3473 E Watchdog: !@Sync 26262 [05-03 15:38:56.688]\r\r\n05-03 15:39:22.599  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:39:26.679  1572  3473 E Watchdog: !@Sync 26263 [05-03 15:39:26.689]\r\r\n05-03 15:39:33.219  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:39:56.679  1572  3473 E Watchdog: !@Sync 26264 [05-03 15:39:56.690]\r\r\n05-03 15:40:11.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:40:11.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:40:20.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:40:20.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:40:26.679  1572  3473 E Watchdog: !@Sync 26265 [05-03 15:40:26.690]\r\r\n05-03 15:40:53.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:40:53.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:40:56.679  1572  3473 E Watchdog: !@Sync 26266 [05-03 15:40:56.691]\r\r\n05-03 15:41:10.469   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:41:10.469   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:41:19.889  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 15:41:26.679  1572  3473 E Watchdog: !@Sync 26267 [05-03 15:41:26.692]\r\r\n05-03 15:41:52.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:41:52.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:41:53.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:41:53.399   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:41:56.679  1572  3473 E Watchdog: !@Sync 26268 [05-03 15:41:56.692]\r\r\n05-03 15:42:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:42:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:42:25.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:42:25.479   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:42:26.679  1572  3473 E Watchdog: !@Sync 26269 [05-03 15:42:26.693]\r\r\n--------- beginning of main\r\r\n05-03 15:42:40.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:42:40.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:42:48.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:42:48.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:42:56.679  1572  3473 E Watchdog: !@Sync 26270 [05-03 15:42:56.694]\r\r\n05-03 15:43:02.949  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 31ms lastUpdatedAfter : 60119 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 15:43:18.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:43:18.319   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:43:26.679  1572  3473 E Watchdog: !@Sync 26271 [05-03 15:43:26.694]\r\r\n05-03 15:43:56.679  1572  3473 E Watchdog: !@Sync 26272 [05-03 15:43:56.695]\r\r\n05-03 15:43:59.549 32167 32167 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 15:44:00.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:44:00.259   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:44:00.399  5542  5542 E Zygote  : v2\r\r\n05-03 15:44:03.089  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 31ms lastUpdatedAfter : 60136 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 15:44:15.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:44:15.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:44:19.809   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 15:44:19.809   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 15:44:26.679  1572  3473 E Watchdog: !@Sync 26273 [05-03 15:44:26.695]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52655498084,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "Book the kiosk ticket through all available entry points using Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 11463742795,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 66691305400,
              "status": "passed"
            },
            "line": 7,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15477584884,
              "status": "passed"
            },
            "line": 8,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39148740550,
              "status": "passed"
            },
            "line": 9,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15240342888,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63380051070,
              "status": "passed"
            },
            "line": 11,
            "name": "I have the following payment cards stored:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              0,
              1
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 13
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14505055729,
              "status": "passed"
            },
            "line": 14,
            "name": "I go to the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100955762509,
              "status": "passed"
            },
            "line": 15,
            "name": "search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              3,
              4,
              7,
              8,
              9,
              12,
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Railcards"
                ],
                "line": 16
              },
              {
                "cells": [
                  "CBY",
                  "EVE",
                  "",
                  "Single",
                  "+1 hours",
                  "",
                  "1",
                  "Cotswold Line Railcard"
                ],
                "line": 17
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3152383689,
              "status": "passed"
            },
            "line": 18,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6601293880,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 488200780,
              "status": "passed"
            },
            "line": 20,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Charlbury"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 274019032,
              "status": "passed"
            },
            "line": 23,
            "name": "the \"Cotswold Line Railcard savings applied\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Cotswold Line Railcard savings applied",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38750132186,
              "status": "passed"
            },
            "line": 24,
            "name": "I proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 430393943,
              "status": "passed"
            },
            "line": 25,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4506825314,
              "status": "passed"
            },
            "comments": [
              {
                "line": 26,
                "value": "#And the \"Railcard Discount\" field containts \"\u003crailcards_applied\u003e\" railcards"
              },
              {
                "line": 27,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 28,
                "value": "# Add fee verification formula"
              },
              {
                "line": 29,
                "value": "# Add buttons verification on Payment screen"
              }
            ],
            "line": 30,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1425639851,
              "status": "passed"
            },
            "line": 31,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 34
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23166559820,
              "status": "passed"
            },
            "comments": [
              {
                "line": 35,
                "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
              },
              {
                "line": 36,
                "value": "#      | Outbound Passangers     | Outbound Passangers      |"
              },
              {
                "line": 37,
                "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 38,
                "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2030427536,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6228631162,
              "status": "passed"
            },
            "line": 41,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 417777035,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6519252922,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 265726578,
              "status": "passed"
            },
            "line": 44,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              5,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Charlbury"
                ],
                "line": 45
              },
              {
                "cells": [
                  "Evesham"
                ],
                "line": 46
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2248229739,
              "status": "passed"
            },
            "line": 47,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3940064691,
              "status": "passed"
            },
            "line": 48,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4855914435,
              "status": "passed"
            },
            "line": 49,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              6,
              8,
              13
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Journey Date",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 50
              },
              {
                "cells": [
                  "Charlbury",
                  "Evesham",
                  "Outbound Ticket Type",
                  "Standard",
                  "DATE(+1 hours;EEE dd MMM)",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1038054066,
              "status": "passed"
            },
            "line": 52,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 534052582,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 53,
                "value": "# Share trip flow"
              }
            ],
            "line": 54,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53023027031,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 150,
        "name": "Book the kiosk ticket through all available entry points using PayPal",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-paypal;;2",
        "after": [
          {
            "result": {
              "duration": 11353950689,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64502559189,
              "status": "passed"
            },
            "line": 95,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15742990652,
              "status": "passed"
            },
            "line": 96,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40463949917,
              "status": "passed"
            },
            "line": 97,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 106211329563,
              "status": "passed"
            },
            "line": 98,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 99
              },
              {
                "cells": [
                  "ZFD",
                  "NCL",
                  "YRK",
                  "Single",
                  "+1 hours",
                  "1"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3524470677,
              "status": "passed"
            },
            "line": 101,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45865178231,
              "status": "passed"
            },
            "comments": [
              {
                "line": 102,
                "value": "#Then I should see the \"Out Search Results\" screen"
              }
            ],
            "line": 103,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 478231635,
              "status": "passed"
            },
            "line": 104,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10942163729,
              "status": "passed"
            },
            "line": 105,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8872282769,
              "status": "passed"
            },
            "line": 106,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 107
              },
              {
                "comments": [
                  {
                    "line": 108,
                    "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
                  },
                  {
                    "line": 109,
                    "value": "#      | Outbound Passangers     | Outbound Passangers      |"
                  },
                  {
                    "line": 110,
                    "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
                  },
                  {
                    "line": 111,
                    "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17442674378,
              "status": "passed"
            },
            "line": 114,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 436499055,
              "status": "passed"
            },
            "line": 115,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 913132040,
              "status": "passed"
            },
            "line": 116,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9180291732,
              "status": "passed"
            },
            "line": 117,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 386737043,
              "status": "passed"
            },
            "line": 118,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5782425713,
              "status": "passed"
            },
            "line": 119,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1328921566,
              "status": "passed"
            },
            "line": 120,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 121,
                    "value": "#      | Outbound Ticket Date |"
                  }
                ],
                "cells": [
                  "Farringdon"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Newcastle"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2339778609,
              "status": "passed"
            },
            "line": 124,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4417112731,
              "status": "passed"
            },
            "line": 125,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5328311540,
              "status": "passed"
            },
            "line": 126,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              5,
              7
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Farringdon",
                  "Newcastle",
                  "DATE(+1 hours;EEE dd MMM)",
                  "Farringdon",
                  "Newcastle",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1130246986,
              "status": "passed"
            },
            "line": 129,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 565292674,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 130,
                "value": "# Share trip flow"
              }
            ],
            "line": 131,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53544518874,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 151,
        "name": "Book the kiosk ticket through all available entry points using PayPal",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-paypal;;3",
        "after": [
          {
            "result": {
              "duration": 11222392919,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63611776375,
              "status": "passed"
            },
            "line": 95,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15658392396,
              "status": "passed"
            },
            "line": 96,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36588225462,
              "status": "passed"
            },
            "line": 97,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 111234411414,
              "status": "passed"
            },
            "line": 98,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 99
              },
              {
                "cells": [
                  "GTW",
                  "ZFD",
                  "CTK",
                  "Single",
                  "+3 hours",
                  "1"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3617272002,
              "status": "passed"
            },
            "line": 101,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45258566682,
              "status": "passed"
            },
            "comments": [
              {
                "line": 102,
                "value": "#Then I should see the \"Out Search Results\" screen"
              }
            ],
            "line": 103,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 457364399,
              "status": "passed"
            },
            "line": 104,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4393167286,
              "status": "passed"
            },
            "line": 105,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1585638187,
              "status": "passed"
            },
            "line": 106,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 107
              },
              {
                "comments": [
                  {
                    "line": 108,
                    "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
                  },
                  {
                    "line": 109,
                    "value": "#      | Outbound Passangers     | Outbound Passangers      |"
                  },
                  {
                    "line": 110,
                    "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
                  },
                  {
                    "line": 111,
                    "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17888555507,
              "status": "passed"
            },
            "line": 114,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 400989597,
              "status": "passed"
            },
            "line": 115,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 810790936,
              "status": "passed"
            },
            "line": 116,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8642900890,
              "status": "passed"
            },
            "line": 117,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 422210856,
              "status": "passed"
            },
            "line": 118,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6273576432,
              "status": "passed"
            },
            "line": 119,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 505143492,
              "status": "passed"
            },
            "line": 120,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 121,
                    "value": "#      | Outbound Ticket Date |"
                  }
                ],
                "cells": [
                  "Gatwick Airport"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Farringdon"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2354780259,
              "status": "passed"
            },
            "line": 124,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4290728969,
              "status": "passed"
            },
            "line": 125,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4911764277,
              "status": "passed"
            },
            "line": 126,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              5,
              7
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Gatwick Airport",
                  "Farringdon",
                  "DATE(+3 hours;EEE dd MMM)",
                  "Gatwick Airport",
                  "Farringdon",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1126737249,
              "status": "passed"
            },
            "line": 129,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 630095492,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 130,
                "value": "# Share trip flow"
              }
            ],
            "line": 131,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52852991499,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 156,
        "name": "Book the kiosk ticket through all available entry points using PayPal",
        "description": "Entry points : 923,924,921",
        "id": "kiosk-booking-for-registered-user;book-the-kiosk-ticket-through-all-available-entry-points-using-paypal;;2",
        "after": [
          {
            "result": {
              "duration": 11352408479,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62456263169,
              "status": "passed"
            },
            "line": 95,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15083748433,
              "status": "passed"
            },
            "line": 96,
            "name": "I am on the \"Available Cards\" page",
            "match": {
              "arguments": [
                {
                  "val": "Available Cards",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36071904656,
              "status": "passed"
            },
            "line": 97,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 107543371465,
              "status": "passed"
            },
            "line": 98,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 99
              },
              {
                "cells": [
                  "WAT",
                  "RDG",
                  "PAD",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 100
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3408783822,
              "status": "passed"
            },
            "line": 101,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43868555107,
              "status": "passed"
            },
            "comments": [
              {
                "line": 102,
                "value": "#Then I should see the \"Out Search Results\" screen"
              }
            ],
            "line": 103,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 851094724,
              "status": "passed"
            },
            "line": 104,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10872726718,
              "status": "passed"
            },
            "line": 105,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8858418266,
              "status": "passed"
            },
            "line": 106,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 107
              },
              {
                "comments": [
                  {
                    "line": 108,
                    "value": "#      | Outbound Ticket Date    | Outbound Ticket Date     |"
                  },
                  {
                    "line": 109,
                    "value": "#      | Outbound Passangers     | Outbound Passangers      |"
                  },
                  {
                    "line": 110,
                    "value": "#      | Outbound Departure Time | Outbound Deptarture Time |"
                  },
                  {
                    "line": 111,
                    "value": "#      | Outbound Arrival Time   | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17807357081,
              "status": "passed"
            },
            "line": 114,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 471110894,
              "status": "passed"
            },
            "line": 115,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 965406795,
              "status": "passed"
            },
            "line": 116,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8037960361,
              "status": "passed"
            },
            "line": 117,
            "name": "proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 417410587,
              "status": "passed"
            },
            "line": 118,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4807284440,
              "status": "passed"
            },
            "line": 119,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 816709720,
              "status": "passed"
            },
            "line": 120,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 121,
                    "value": "#      | Outbound Ticket Date |"
                  }
                ],
                "cells": [
                  "London Waterloo"
                ],
                "line": 122
              },
              {
                "cells": [
                  "Reading"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2271640771,
              "status": "passed"
            },
            "line": 124,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4222967028,
              "status": "passed"
            },
            "line": 125,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 4796761439,
              "status": "passed"
            },
            "line": 126,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              5,
              7
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Total Price",
                  "Purchase Date"
                ],
                "line": 127
              },
              {
                "cells": [
                  "London Waterloo",
                  "Reading",
                  "DATE(tomorrow;EEE dd MMM)",
                  "London Waterloo",
                  "Reading",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "Total Price",
                  "DATE(today;EEE dd MMM yyyy)"
                ],
                "line": 128
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 946286192,
              "status": "passed"
            },
            "line": 129,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 525021563,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "comments": [
              {
                "line": 130,
                "value": "# Share trip flow"
              }
            ],
            "line": 131,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 54716629410,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 224,
        "name": "Book the each way fare kiosk ticket for many passangers using CC",
        "description": "",
        "id": "kiosk-booking-for-registered-user;book-the-each-way-fare-kiosk-ticket-for-many-passangers-using-cc;;2",
        "after": [
          {
            "result": {
              "duration": 12151481478,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61681791276,
              "status": "passed"
            },
            "line": 160,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4389658899,
              "status": "passed"
            },
            "line": 161,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28963821916,
              "status": "passed"
            },
            "line": 162,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3728257964,
              "status": "passed"
            },
            "line": 163,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128356751027,
              "status": "passed"
            },
            "line": 164,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 165
              },
              {
                "cells": [
                  "EUS",
                  "MCN",
                  "COV",
                  "Return",
                  "+1 days",
                  "+33 days",
                  "3",
                  "2"
                ],
                "line": 166
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3479298301,
              "status": "passed"
            },
            "line": 167,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59502534885,
              "error_message": "java.lang.AssertionError: Neither Outbound nor Return page was found\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:712)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:53)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.proceedFromSearchResultsToPayment(JourneySearchActions.java:219)\r\n\tat ✽.And proceed search results to the payment screen(booking/RegisteredKioskBooking.feature:168)\r\n",
              "status": "failed"
            },
            "line": 168,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 14
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name"
                ],
                "line": 173
              },
              {
                "cells": [
                  "Visa Credit",
                  "4242424242424242",
                  "12",
                  "20",
                  "Sarath Banala"
                ],
                "line": 174
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 176,
                "value": "#And the page contains the following data:"
              },
              {
                "line": 177,
                "value": "#  | Outbound Ticket | Return Ticket | Outbound Passangers                  | Return Passangers                    |"
              },
              {
                "line": 178,
                "value": "#  | OUT             | RTN           | \u003cAdults\u003e Adults, \u003cChildren\u003e Children | \u003cAdults\u003e Adults, \u003cChildren\u003e Children |"
              }
            ],
            "line": 179,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 180
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 181
              },
              {
                "comments": [
                  {
                    "line": 182,
                    "value": "#| Outbound Passangers     | Outbound Passangers      |"
                  }
                ],
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 183
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 184
              },
              {
                "comments": [
                  {
                    "line": 185,
                    "value": "#| Outbound Ticket Type    | Outbound Ticket Type     |"
                  },
                  {
                    "line": 186,
                    "value": "#| Outbound Price          | Outbound Price           |"
                  }
                ],
                "cells": [
                  "Return Departure Time",
                  "Return Departure Time"
                ],
                "line": 187
              },
              {
                "cells": [
                  "Return Arrival Time",
                  "Return Arrival Time"
                ],
                "line": 188
              },
              {
                "comments": [
                  {
                    "line": 189,
                    "value": "#| Return Ticket Type      | Return Ticket Type       |"
                  },
                  {
                    "line": 190,
                    "value": "#| Return Price            | Return Price             |"
                  }
                ],
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 191
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 192,
            "name": "I type \"222\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "222",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 193,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 194,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 195,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 196,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 197,
            "name": "I open the \"Outbound\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Outbound",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 198,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 199,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              4,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 200
              },
              {
                "cells": [
                  "DATE(+1 days;EEE dd MMM)",
                  "London Euston",
                  "Machynlleth",
                  "Standard",
                  "5",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 201
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 202,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 203,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 204,
            "name": "I open the \"Return\" leg for the top-most visible ticket",
            "match": {
              "arguments": [
                {
                  "val": "Return",
                  "offset": 12
                }
              ],
              "location": "MyTicketsActions.openFirstTicketLeg(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 205,
            "name": "I should see the \"Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 206,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              5,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Journey Date",
                  "Origin Station",
                  "Destination Station",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price"
                ],
                "line": 207
              },
              {
                "cells": [
                  "DATE(+33 days;EEE dd MMM)",
                  "Machynlleth",
                  "London Euston",
                  "Standard",
                  "5",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price"
                ],
                "line": 208
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 209,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 210,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 211,
            "name": "I scroll the first ticket into view",
            "match": {
              "location": "MyTicketsActions.scrollFirstTicketToView()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:13:20.549  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1162, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:13:20.549  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1163, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:13:21.109  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1161, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:13:26.729  1572  3473 E Watchdog: !@Sync 26331 [05-03 16:13:26.741]\r\r\n05-03 16:13:44.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:13:44.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:13:56.739  1572  3473 E Watchdog: !@Sync 26332 [05-03 16:13:56.741]\r\r\n05-03 16:14:12.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:14:12.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:14:26.729  1572  3473 E Watchdog: !@Sync 26333 [05-03 16:14:26.742]\r\r\n05-03 16:14:43.609  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:14:52.029  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:14:54.739  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:14:56.729  1572  3473 E Watchdog: !@Sync 26334 [05-03 16:14:56.743]\r\r\n05-03 16:14:57.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:14:57.799   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:15:02.139  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:15:03.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:15:03.979   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:15:26.729  1572  3473 E Watchdog: !@Sync 26335 [05-03 16:15:26.743]\r\r\n05-03 16:15:56.729  1572  3473 E Watchdog: !@Sync 26336 [05-03 16:15:56.744]\r\r\n05-03 16:16:10.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:16:10.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:16:12.859  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:16:14.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:16:14.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:16:21.289  1572  4002 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:16:26.729  1572  3473 E Watchdog: !@Sync 26337 [05-03 16:16:26.745]\r\r\n05-03 16:16:39.719  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:16:53.849  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:16:56.729  1572  3473 E Watchdog: !@Sync 26338 [05-03 16:16:56.746]\r\r\n05-03 16:16:59.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:16:59.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:16:59.729   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:16:59.729   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:17:03.179  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n--------- beginning of main\r\r\n05-03 16:17:18.199 16085 16106 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 16:17:18.219 16323 16323 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 16:17:20.829 16085 16106 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 16:17:20.829 16323 16323 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 16:17:26.739  1572  3473 E Watchdog: !@Sync 26339 [05-03 16:17:26.747]\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : \t... 16 more\r\r\n05-03 16:17:28.769  1572  1595 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : \t... 16 more\r\r\n05-03 16:17:40.919  1572  1595 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:17:56.739  1572  3473 E Watchdog: !@Sync 26340 [05-03 16:17:56.748]\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : \t... 16 more\r\r\n05-03 16:17:58.499  1572  2388 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:17:58.589  1572  3519 E LocSvc_utils_cfg: W/loc_read_sec_gps_conf: no secgps conf file, using defaults\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: Error getting search results\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: BaseUncheckedException{code\u003d\u0027SERVICE_OUTAGE\u0027, description\u003d\u0027Trainline is down for maintenance, please try again later.\u0027}\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.getApiErrors(SourceFile:72)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.mapBasedOnErrorType(SourceFile:59)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.mapNetworkError(SourceFile:52)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapFailedResponse(SourceFile:44)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapError(SourceFile:142)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:110)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:107)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:85)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$1.a(SourceFile:460)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$1.call(SourceFile:456)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle$1.a(SourceFile:64)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe$BodySubscriber.a(SourceFile:56)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe$BodySubscriber.a(SourceFile:39)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallArbiter.b(SourceFile:118)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallArbiter.a(SourceFile:100)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.a(SourceFile:46)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(SourceFile:24)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.a(SourceFile:36)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.call(SourceFile:28)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Observable.a(SourceFile:10256)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.a(SourceFile:81)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.call(SourceFile:27)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:670)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:666)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:74)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$2.a(SourceFile:680)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single$2.call(SourceFile:662)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$2.aa_(SourceFile:81)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.observers.SafeSubscriber.aa_(SourceFile:79)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable$30.a(SourceFile:2086)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable$25$1.a(SourceFile:1683)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable$11$1.a(SourceFile:614)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent$SingleDoOnEventSubscriber.a(SourceFile:63)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.a(SourceFile:40)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.call(SourceFile:25)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable$11.a(SourceFile:619)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable$11.call(SourceFile:602)\r\r\n05-03 16:18:04.479 16323 16323 E TrainJourneyResultsPres: \tat rx.Completable.a(Sou\r\r\n05-03 16:18:05.849 16085 16106 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 16:18:05.849 16323 16323 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 16:18:06.769  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 31ms lastUpdatedAfter : 60137 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:18:26.739  1572  3473 E Watchdog: !@Sync 26341 [05-03 16:18:26.748]\r\r\n05-03 16:18:32.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:18:32.439   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:18:35.059   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:18:35.059   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:18:56.739  1572  3473 E Watchdog: !@Sync 26342 [05-03 16:18:56.749]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 212,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              8,
              9
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 213,
                    "value": "#| Outbound Ticket Date     |"
                  },
                  {
                    "line": 214,
                    "value": "#| Outbound Passangers      |"
                  }
                ],
                "cells": [
                  "Outbound Deptarture Time"
                ],
                "line": 215
              },
              {
                "cells": [
                  "Outbound Arrival Time"
                ],
                "line": 216
              },
              {
                "comments": [
                  {
                    "line": 217,
                    "value": "#      |\tReturn Departure Time\t|"
                  },
                  {
                    "line": 218,
                    "value": "#      |\tReturn Arrival Time\t\t|"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 219
              },
              {
                "cells": [
                  "Machynlleth"
                ],
                "line": 220
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 158,
            "name": "@android_release"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52595167164,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 266,
        "name": "Book the each way fare kiosk ticket for many passangers using paypal",
        "description": "",
        "id": "kiosk-booking-for-registered-user;book-the-each-way-fare-kiosk-ticket-for-many-passangers-using-paypal;;2",
        "after": [
          {
            "result": {
              "duration": 12311936726,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63520179437,
              "status": "passed"
            },
            "line": 228,
            "name": "I am logged into the system",
            "match": {
              "location": "LoginActions.openHomePageLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4356813676,
              "status": "passed"
            },
            "line": 229,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29888734815,
              "status": "passed"
            },
            "line": 230,
            "name": "I have no payment cards stored",
            "match": {
              "location": "CardManipulationActions.removeAllCards()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3782254236,
              "status": "passed"
            },
            "line": 231,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 128880357568,
              "status": "passed"
            },
            "line": 232,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7,
              8,
              9
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 233
              },
              {
                "cells": [
                  "EUS",
                  "MCN",
                  "COV",
                  "Return",
                  "+1 days",
                  "+33 days",
                  "3",
                  "2"
                ],
                "line": 234
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3527046339,
              "status": "passed"
            },
            "line": 235,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16305416559,
              "status": "passed"
            },
            "line": 236,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18805692542,
              "status": "passed"
            },
            "line": 237,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 612855193,
              "status": "passed"
            },
            "line": 238,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11125563916,
              "status": "passed"
            },
            "line": 239,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9291714622,
              "status": "passed"
            },
            "line": 240,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 241
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 242
              },
              {
                "comments": [
                  {
                    "line": 243,
                    "value": "#| Outbound Passangers     | Outbound Passangers      |"
                  }
                ],
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 244
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 245
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11063257367,
              "status": "passed"
            },
            "comments": [
              {
                "line": 246,
                "value": "#And the page contains the following data:"
              },
              {
                "line": 247,
                "value": "#  | Outbound Ticket | Return Ticket | Outbound Passangers                  | Return Passangers                    |"
              },
              {
                "line": 248,
                "value": "#  | OUTBOUND        | RTN           | \u003cAdults\u003e Adults, \u003cChildren\u003e Children | \u003cAdults\u003e Adults, \u003cChildren\u003e Children |"
              }
            ],
            "line": 249,
            "name": "I click on the \"Self-service ticket machine\" button",
            "match": {
              "arguments": [
                {
                  "val": "Self-service ticket machine",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 17991711327,
              "status": "passed"
            },
            "line": 250,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 509543828,
              "status": "passed"
            },
            "line": 251,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 825814461,
              "status": "passed"
            },
            "line": 252,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10017693969,
              "status": "passed"
            },
            "line": 253,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 461492804,
              "status": "passed"
            },
            "line": 254,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5999126414,
              "status": "passed"
            },
            "line": 255,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6846157274,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 256,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 257,
                    "value": "#| Outbound Ticket Date |"
                  },
                  {
                    "line": 258,
                    "value": "#      | Outbound Passangers      |"
                  },
                  {
                    "line": 259,
                    "value": "#      | Outbound Deptarture Time |"
                  },
                  {
                    "line": 260,
                    "value": "#      | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 261
              },
              {
                "cells": [
                  "Machynlleth"
                ],
                "line": 262
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 226,
            "name": "@android_release"
          },
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      }
    ],
    "name": "Kiosk Booking for registered user",
    "description": "",
    "id": "kiosk-booking-for-registered-user",
    "keyword": "Feature",
    "uri": "booking/RegisteredKioskBooking.feature",
    "tags": [
      {
        "line": 1,
        "name": "@android"
      },
      {
        "line": 1,
        "name": "@android_01"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 54352432783,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 93,
        "name": "Book the mobile ticket using different Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-using-different-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 12283563131,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 16145312096,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13298205894,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90122866735,
              "status": "passed"
            },
            "line": 10,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "+1 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3045374907,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 60454018577,
              "error_message": "java.lang.AssertionError: Neither Outbound nor Return page was found\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:712)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:53)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.proceedFromSearchResultsToPayment(JourneySearchActions.java:219)\r\n\tat ✽.And proceed search results to the payment screen(booking/RegisteredMobileBooking.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Outbound Passangers",
                  "Outbound Passangers"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 30
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Post code"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EC1M 3HE"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 37,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 38,
                "value": "#And I should see the \"Traveller Name\" field text matches the \"Zenon Kopyto\" pattern"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 44,
                "value": "#When I scroll the first ticket into view"
              }
            ],
            "line": 45,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 46,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 47,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 48,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 49,
                    "value": "#| Outbound Arrival Time    |"
                  },
                  {
                    "line": 50,
                    "value": "#| Outbound Ticket Date     |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 53,
                "value": "#And the \"Download ticket\" text is shown"
              }
            ],
            "line": 54,
            "name": "I wait for 3 seconds",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "CommonActions.waitForSeconds(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    When I open the \"Outbound\" leg for the top-most visible ticket"
              }
            ],
            "line": 60,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              4,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price",
                  "Journey Date"
                ],
                "line": 64
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price",
                  "DATE(+1 hours;EEE dd MMM yyyy)"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Fare Name Coupon",
                  "Ticket Passanger Class Coupon"
                ],
                "line": 69
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Adult Standard"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I should see the \"Ticket Price Coupon\" field value is calculated using the following formula:",
            "match": {
              "arguments": [
                {
                  "val": "Ticket Price Coupon",
                  "offset": 18
                }
              ],
              "location": "CalculationActions.fieldValueIsCalculatedByFormula(String,String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And ",
            "doc_string": {
              "content_type": "",
              "line": 72,
              "value": "(\"Total Price\" / 1 )"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ACTIVATE TICKET"
                ],
                "line": 78
              },
              {
                "cells": [
                  "You are about to activate your ticket for travel, once activated:"
                ],
                "line": 79
              },
              {
                "cells": [
                  "This process cannot be undone"
                ],
                "line": 80
              },
              {
                "cells": [
                  "Tickets cannot be refunded"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Tickets are valid for today"
                ],
                "line": 82
              },
              {
                "cells": [
                  "Tickets cannot be moved to a different phone"
                ],
                "line": 83
              },
              {
                "cells": [
                  "Ensure you are travelling on the same day you activate. Please ensure your phone date \u0026 time is correct. Phone date \u0026 time:"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "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\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:26:06.819  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1167, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:26:06.819  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1168, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:26:21.959   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:26:21.959   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:26:26.749  1572  3473 E Watchdog: !@Sync 26357 [05-03 16:26:26.760]\r\r\n05-03 16:26:52.289   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:26:52.289   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:26:56.749  1572  3473 E Watchdog: !@Sync 26358 [05-03 16:26:56.761]\r\r\n05-03 16:27:26.749  1572  3473 E Watchdog: !@Sync 26359 [05-03 16:27:26.762]\r\r\n05-03 16:27:46.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:27:46.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:27:49.779  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:27:51.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:27:51.359   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:27:56.749  1572  3473 E Watchdog: !@Sync 26360 [05-03 16:27:56.763]\r\r\n05-03 16:27:58.439  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:28:18.579  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n--------- beginning of main\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : Class not found when unmarshalling: org.parceler.NonParcelRepository$ListParcelable\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : java.lang.ClassNotFoundException: org.parceler.NonParcelRepository$ListParcelable\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : Caused by: java.lang.ClassNotFoundException: org.parceler.NonParcelRepository$ListParcelable\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : \t... 16 more\r\r\n05-03 16:28:26.449  1572  4010 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:28:26.749  1572  3473 E Watchdog: !@Sync 26361 [05-03 16:28:26.763]\r\r\n05-03 16:28:35.699  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:28:35.699  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:28:35.749  3746  7379 E WakeLock: release without a matched acquire!\r\r\n05-03 16:28:35.749  3746  7379 E GCM     : Connection closed with errorCode 20\r\r\n05-03 16:28:35.749  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:28:35.759  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:28:35.789  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:28:36.109 20587 20587 E Zygote  : v2\r\r\n05-03 16:28:36.129   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:28:36.199  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:28:36.569 20600 20600 E Zygote  : v2\r\r\n05-03 16:28:37.639  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:28:37.639  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:28:37.679  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:28:37.709  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:28:37.749 20615 20615 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:28:37.759 20615 20615 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : \t... 16 more\r\r\n05-03 16:28:37.839  1572  3753 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:28:38.969  3746 20642 E WakeLock: release without a matched acquire!\r\r\n05-03 16:28:40.569 20644 20644 E Zygote  : v2\r\r\n05-03 16:28:40.709 20656 20656 E Zygote  : v2\r\r\n05-03 16:28:41.029 20672 20672 E Zygote  : v2\r\r\n05-03 16:28:41.109 20656 20685 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:28:41.109 20656 20685 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:28:41.129 20656 20669 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(205/llIIIIlllllIIllIIllI)] Network Status is not ready. DM Not Initialized\r\r\n05-03 16:28:41.129 20656 20669 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(210/llIIIIlllllIIllIIllI)] SPD SERVICE Stop!!\r\r\n05-03 16:28:41.419 20686 20686 E Zygote  : v2\r\r\n05-03 16:28:48.979  3746 20713 E WakeLock: release without a matched acquire!\r\r\n05-03 16:28:49.959 20715 20715 E Zygote  : v2\r\r\n05-03 16:28:50.459 20730 20730 E Zygote  : v2\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 16:28:50.559  1572  4013 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:28:50.729 20747 20747 E Zygote  : v2\r\r\n05-03 16:28:50.869  2332  2332 E wpa_supplicant: IAPP Type:33, Func Type: 81\r\r\n05-03 16:28:50.869  2332  2332 E wpa_supplicant: num_neighbor_count\u003d14\r\r\n05-03 16:28:51.199 20790 20790 E Zygote  : v2\r\r\n05-03 16:28:51.259 20805 20805 E Zygote  : v2\r\r\n05-03 16:28:51.599  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1169, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:28:51.599  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1171, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:28:51.769  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:28:51.809  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:28:51.809  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:28:51.839  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:28:51.869  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:28:52.029  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{775}  lp{{InterfaceName: wlan0 LinkAddresses: [fe80::3ebb:fdff:fe71:b5b9/64,10.41.121.29/24,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -72]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:28:52.129  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:28:52.169 20889 20889 E Zygote  : v2\r\r\n05-03 16:28:52.269 20904 20904 E Zygote  : v2\r\r\n05-03 16:28:52.399 20904 20904 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 16:28:52.449 20656 20918 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:28:52.449 20656 20918 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:28:52.479 20656 20918 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(245/llIIIIlllllIIllIIllI)] DM Not Init\r\r\n05-03 16:28:52.479 20656 20918 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:28:52.699 20656 20669 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(409/llIIllllIIlllIIIIlll)] SPD SERVICE Stop!!\r\r\n05-03 16:28:53.669  3746 20921 E WakeLock: release without a matched acquire!\r\r\n05-03 16:28:54.689  3746 20926 E WakeLock: release without a matched acquire!\r\r\n05-03 16:28:55.009 20928 20928 E Zygote  : v2\r\r\n05-03 16:28:55.149 20928 20940 E SPPClientService: ShipBuild Binary : True\r\r\n05-03 16:28:55.149 20928 20928 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:28:55.149 20928 20928 E SPPClientService: [SystemStateMoniter] Current Time : 790932709\r\r\n05-03 16:28:55.159 20928 20928 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 16:28:55.179 20942 20942 E Zygote  : v2\r\r\n05-03 16:28:55.199 20928 20947 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 16:28:55.599 20942 20960 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:28:56.749  1572  3473 E Watchdog: !@Sync 26362 [05-03 16:28:56.764]\r\r\n05-03 16:28:58.099 20970 20970 E Zygote  : v2\r\r\n05-03 16:28:58.309 20984 20984 E Zygote  : v2\r\r\n05-03 16:29:04.859 21025 21025 E Zygote  : v2\r\r\n05-03 16:29:05.719 21050 21050 E Zygote  : v2\r\r\n05-03 16:29:07.839  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 24ms lastUpdatedAfter : 60102 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:29:12.099 21078 21078 E Zygote  : v2\r\r\n05-03 16:29:15.009 21096 21096 E Zygote  : v2\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 16:29:15.129  1572  4013 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:29:15.249 21118 21118 E Zygote  : v2\r\r\n05-03 16:29:15.509 21137 21137 E Zygote  : v2\r\r\n05-03 16:29:15.859 20928 20928 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:29:15.859 20928 20928 E SPPClientService: [SystemStateMoniter] Current Time : 790953417\r\r\n05-03 16:29:15.859 20928 20928 E SPPClientService: [SystemStateMoniter] No Connect : false\r\r\n05-03 16:29:22.789  3746 21011 E WakeLock: release without a matched acquire!\r\r\n05-03 16:29:26.749  1572  3473 E Watchdog: !@Sync 26363 [05-03 16:29:26.765]\r\r\n05-03 16:29:56.749  1572  3473 E Watchdog: !@Sync 26364 [05-03 16:29:56.765]\r\r\n05-03 16:29:59.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:29:59.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:29:59.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:29:59.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 88,
            "name": "the \"Ticket active\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Ticket active",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              12
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53060566397,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Book the mobile ticket using different Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-using-different-payment-cards;;3",
        "after": [
          {
            "result": {
              "duration": 12611984308,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 21528081140,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13214378339,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 90181713503,
              "status": "passed"
            },
            "line": 10,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "+3 hours",
                  "",
                  "2"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3803717184,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45282831316,
              "status": "passed"
            },
            "line": 14,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 419420242,
              "status": "passed"
            },
            "line": 15,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16902159419,
              "status": "passed"
            },
            "line": 16,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11083333108,
              "status": "passed"
            },
            "line": 17,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Outbound Passangers",
                  "Outbound Passangers"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12900980415,
              "status": "passed"
            },
            "line": 25,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6094223907,
              "status": "passed"
            },
            "line": 26,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 701138714,
              "status": "passed"
            },
            "line": 27,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40728899854,
              "status": "passed"
            },
            "line": 28,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 30
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9163598809,
              "status": "passed"
            },
            "line": 31,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1580730442,
              "status": "passed"
            },
            "line": 32,
            "name": "I click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56877808910,
              "status": "passed"
            },
            "line": 33,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Post code"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Mastercard",
                  "5200000000000056",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EC1M 3HE"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 441192657,
              "status": "passed"
            },
            "line": 36,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5855075145,
              "status": "passed"
            },
            "comments": [
              {
                "line": 37,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 38,
                "value": "#And I should see the \"Traveller Name\" field text matches the \"Zenon Kopyto\" pattern"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2055140981,
              "status": "passed"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5398683706,
              "status": "passed"
            },
            "line": 41,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 406671013,
              "status": "passed"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6693960184,
              "status": "passed"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 424716037,
              "status": "passed"
            },
            "comments": [
              {
                "line": 44,
                "value": "#When I scroll the first ticket into view"
              }
            ],
            "line": 45,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 46,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 47,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 48,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 49,
                    "value": "#| Outbound Arrival Time    |"
                  },
                  {
                    "line": 50,
                    "value": "#| Outbound Ticket Date     |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3010907812,
              "status": "passed"
            },
            "comments": [
              {
                "line": 53,
                "value": "#And the \"Download ticket\" text is shown"
              }
            ],
            "line": 54,
            "name": "I wait for 3 seconds",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "CommonActions.waitForSeconds(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 100711381411,
              "status": "passed"
            },
            "line": 55,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1728373812,
              "status": "passed"
            },
            "line": 56,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40055765048,
              "error_message": "java.lang.AssertionError\r\n\tat org.junit.Assert.fail(Assert.java:86)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertTrue(Assert.java:52)\r\n\tat com.thetrainline.common.steps.generic.FieldActions.theButtonIsVisible(FieldActions.java:127)\r\n\tat ✽.Then the \"View tickets\" button is visible(booking/RegisteredMobileBooking.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    When I open the \"Outbound\" leg for the top-most visible ticket"
              }
            ],
            "line": 60,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              4,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price",
                  "Journey Date"
                ],
                "line": 64
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Standard",
                  "2",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price",
                  "DATE(+3 hours;EEE dd MMM yyyy)"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Fare Name Coupon",
                  "Ticket Passanger Class Coupon"
                ],
                "line": 69
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Adult Standard"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I should see the \"Ticket Price Coupon\" field value is calculated using the following formula:",
            "match": {
              "arguments": [
                {
                  "val": "Ticket Price Coupon",
                  "offset": 18
                }
              ],
              "location": "CalculationActions.fieldValueIsCalculatedByFormula(String,String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And ",
            "doc_string": {
              "content_type": "",
              "line": 72,
              "value": "(\"Total Price\" / 2 )"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ACTIVATE TICKET"
                ],
                "line": 78
              },
              {
                "cells": [
                  "You are about to activate your ticket for travel, once activated:"
                ],
                "line": 79
              },
              {
                "cells": [
                  "This process cannot be undone"
                ],
                "line": 80
              },
              {
                "cells": [
                  "Tickets cannot be refunded"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Tickets are valid for today"
                ],
                "line": 82
              },
              {
                "cells": [
                  "Tickets cannot be moved to a different phone"
                ],
                "line": 83
              },
              {
                "cells": [
                  "Ensure you are travelling on the same day you activate. Please ensure your phone date \u0026 time is correct. Phone date \u0026 time:"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:30:56.759  1572  3473 E Watchdog: !@Sync 26366 [05-03 16:30:56.767]\r\r\n05-03 16:31:26.759  1572  3473 E Watchdog: !@Sync 26367 [05-03 16:31:26.767]\r\r\n05-03 16:31:56.759  1572  3473 E Watchdog: !@Sync 26368 [05-03 16:31:56.768]\r\r\n05-03 16:32:03.839  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:32:12.179  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:32:26.759  1572  3473 E Watchdog: !@Sync 26369 [05-03 16:32:26.769]\r\r\n05-03 16:32:31.519  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:32:56.759  1572  3473 E Watchdog: !@Sync 26370 [05-03 16:32:56.769]\r\r\n05-03 16:33:26.759  1572  3473 E Watchdog: !@Sync 26371 [05-03 16:33:26.770]\r\r\n05-03 16:33:56.759  1572  3473 E Watchdog: !@Sync 26372 [05-03 16:33:56.771]\r\r\n05-03 16:34:26.759  1572  3473 E Watchdog: !@Sync 26373 [05-03 16:34:26.771]\r\r\n05-03 16:34:31.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:34:31.279   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:34:44.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:34:44.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:34:45.909  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:34:50.199  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:34:56.759  1572  3473 E Watchdog: !@Sync 26374 [05-03 16:34:56.772]\r\r\n05-03 16:34:58.709  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:34:59.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:34:59.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:35:01.399  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:07.419   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:35:07.419   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:35:08.129  1572  4010 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:10.709  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:16.799  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:19.759  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:26.339  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:26.759  1572  3473 E Watchdog: !@Sync 26375 [05-03 16:35:26.773]\r\r\n05-03 16:35:44.349  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:54.689  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:35:56.759  1572  3473 E Watchdog: !@Sync 26376 [05-03 16:35:56.774]\r\r\n05-03 16:36:00.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:36:00.879   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:36:03.259  1572  2480 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:36:07.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:36:07.329   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:36:22.069  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 16:36:22.229  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 16:36:26.759  1572  3473 E Watchdog: !@Sync 26377 [05-03 16:36:26.774]\r\r\n05-03 16:36:42.189  1572  3639 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:36:56.759  1572  3473 E Watchdog: !@Sync 26378 [05-03 16:36:56.775]\r\r\n05-03 16:36:58.539  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:37:14.299 23519 23535 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:37:26.759  1572  3473 E Watchdog: !@Sync 26379 [05-03 16:37:26.776]\r\r\n05-03 16:37:31.669  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:37:56.769  1572  3473 E Watchdog: !@Sync 26380 [05-03 16:37:56.777]\r\r\n05-03 16:38:00.039 23894 23911 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:38:26.769  1572  3473 E Watchdog: !@Sync 26381 [05-03 16:38:26.778]\r\r\n--------- beginning of main\r\r\n05-03 16:38:33.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:38:33.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:38:34.659 23990 23990 E Zygote  : v2\r\r\n05-03 16:38:34.739 23990 23990 E SmartFaceServiceStarter: onCreate\r\r\n05-03 16:38:34.739 23990 23990 E SmartFaceServiceStarter: onStartCommand\r\r\n05-03 16:38:34.739 23990 23990 E SmartFaceServiceStarter: Starting SmartFaceService.\r\r\n05-03 16:38:34.739 23990 23990 E SmartFaceService: SmartFaceService constructor for user: 0\r\r\n05-03 16:38:34.799 23990 23990 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 16:38:34.799 23990 23990 E SmartFaceService: mScrollEnabled:false mPauseEnabled:false mStayEnabled:true mRotationEnabled:false, (false,false)\r\r\n05-03 16:38:34.799 23990 23990 E Logger  : New Logger Instance\r\r\n05-03 16:38:34.799 23990 23990 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 16:38:34.809 23990 23990 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 16:38:34.809 23990 23990 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 16:38:34.809 23990 23990 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 16:38:34.819 23990 23990 E SmartFaceService: SmartFaceService constructor done\r\r\n05-03 16:38:34.819 23990 23990 E SmartFaceServiceStarter: onStartCommand done\r\r\n05-03 16:38:34.819 23990 23990 E SmartFaceService: from registerCoverManager -\u003e mClearCoverOpened: true\r\r\n05-03 16:38:34.819 23990 23990 E SmartFaceService: SmartFaceService Started.\r\r\n05-03 16:38:34.819 23990 24002 E SmartFaceService: Update service state according to cover state: true\r\r\n05-03 16:38:34.829 23990 24002 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 16:38:34.829 23990 24002 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 16:38:34.829 23990 24002 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 16:38:34.829 23990 24002 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 16:38:34.829 23990 24002 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 16:38:39.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:38:39.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:38:41.959 22005 22022 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 16:38:41.979 22232 22232 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 16:38:44.669 24017 24017 E Zygote  : v2\r\r\n05-03 16:38:56.769  1572  3473 E Watchdog: !@Sync 26382 [05-03 16:38:56.779]\r\r\n05-03 16:39:02.029 22232 23009 E Appboy v2.1.3 .bo.app.cl: Error occurred while executing Appboy request: An error occurred during request processing, resulting in no valid response being received. Check the error log for more details.\r\r\n05-03 16:39:08.799  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 21ms lastUpdatedAfter : 60088 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:39:16.369  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:39:16.389  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:39:16.399  1572  2284 E WifiStateMachine: set default RSSI: -200\r\r\n05-03 16:39:16.419  3746 23892 E WakeLock: release without a matched acquire!\r\r\n05-03 16:39:16.419  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:39:16.419  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:39:16.479  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:39:16.539 24045 24045 E Zygote  : v2\r\r\n05-03 16:39:16.779  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:39:16.819   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:39:16.829  1572  2289 E ConnectivityService: EVENT_NETWORK_TESTED - isLiveNetworkAgent found mismatched netId: null - NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: DISCONNECTED/DISCONNECTED, reason: (unspecified), extra: \u003cunknown ssid\u003e, roaming: false, failover: false, isAvailable: true]}  network{776}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN\u0026VALIDATED LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps]}  Score{60}  everValidated{true}  lastValidated{true}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} }\r\r\n05-03 16:39:16.929 23376 24079 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:39:16.939 23376 24079 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:39:16.949  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:39:16.959  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:39:17.139 22232 24013 E MobileTicketServiceRetr: Service call execution failed\r\r\n05-03 16:39:17.219 22232 22232 E MyTicketsAdapterPresent: Failed to execute rx.Single@d2a5ad2\r\r\n05-03 16:39:17.669 24084 24084 E Zygote  : v2\r\r\n05-03 16:39:17.739  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:39:17.769  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:39:17.809 24097 24097 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:39:17.809 24097 24097 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:39:18.209 24119 24119 E Zygote  : v2\r\r\n05-03 16:39:19.219  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:39:19.259  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:39:19.269  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:39:19.319  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:39:19.369  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:39:19.519  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"FARWLAN\", roaming: false, failover: false, isAvailable: true]}  network{777}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.72.181/21,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.72.0/21 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.72.1 wlan0,] DnsAddresses: [10.40.0.23,10.40.0.12,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -81]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:39:19.629  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:39:19.649 24233 24233 E Zygote  : v2\r\r\n05-03 16:39:19.829 23376 24253 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:39:19.839 23376 24253 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:39:19.939  3746 24255 E WakeLock: release without a matched acquire!\r\r\n05-03 16:39:19.949 23376 24253 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:39:20.269  3746 24257 E WakeLock: release without a matched acquire!\r\r\n05-03 16:39:20.329 24295 24295 E Zygote  : v2\r\r\n05-03 16:39:21.639 24295 24295 E ExtMediaPlayer-JNI: env-\u003eIsInstanceOf fails\r\r\n05-03 16:39:21.639 24295 24295 E MediaPlayer-JNI: JNIMediaPlayerFactory: bIsQCMediaPlayerPresent 0\r\r\n05-03 16:39:21.639 24295 24295 E ExtMediaPlayer-JNI: env-\u003eIsInstanceOf fails\r\r\n05-03 16:39:21.639 24295 24295 E MediaPlayer-JNI: JNIMediaPlayerFactory: bIsQCMediaPlayerPresent 0\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 88,
            "name": "the \"Tickets active\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Tickets active",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              12
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 75669454942,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 99,
        "name": "Book the mobile ticket using different Payment Cards",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-using-different-payment-cards;;2",
        "after": [
          {
            "result": {
              "duration": 13403230136,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17245657858,
              "status": "passed"
            },
            "line": 8,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13399013968,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86094236059,
              "status": "passed"
            },
            "line": 10,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 11
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "+3 hours",
                  "",
                  "1"
                ],
                "line": 12
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3124144304,
              "status": "passed"
            },
            "line": 13,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 54596573544,
              "error_message": "java.lang.AssertionError: Neither Outbound nor Return page was found\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:712)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:53)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.proceedFromSearchResultsToPayment(JourneySearchActions.java:219)\r\n\tat ✽.And proceed search results to the payment screen(booking/RegisteredMobileBooking.feature:14)\r\n",
              "status": "failed"
            },
            "line": 14,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 17,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Outbound Passangers",
                  "Outbound Passangers"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 24
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 30
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 31,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 32,
            "name": "I click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 33,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              9,
              10
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Post code"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Maestro",
                  "560000227571480302",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EC1M 3HE"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 37,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              },
              {
                "line": 38,
                "value": "#And I should see the \"Traveller Name\" field text matches the \"Zenon Kopyto\" pattern"
              }
            ],
            "line": 39,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              11
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 43,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 44,
                "value": "#When I scroll the first ticket into view"
              }
            ],
            "line": 45,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 46,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 47,
                    "value": "#| Outbound Passangers      |"
                  },
                  {
                    "line": 48,
                    "value": "#| Outbound Deptarture Time |"
                  },
                  {
                    "line": 49,
                    "value": "#| Outbound Arrival Time    |"
                  },
                  {
                    "line": 50,
                    "value": "#| Outbound Ticket Date     |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 51
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 53,
                "value": "#And the \"Download ticket\" text is shown"
              }
            ],
            "line": 54,
            "name": "I wait for 3 seconds",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "CommonActions.waitForSeconds(int)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 55,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 56,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 59,
                "value": "#    When I open the \"Outbound\" leg for the top-most visible ticket"
              }
            ],
            "line": 60,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              4,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price",
                  "Journey Date"
                ],
                "line": 64
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price",
                  "DATE(+3 hours;EEE dd MMM yyyy)"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 68,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Ticket Fare Name Coupon",
                  "Ticket Passanger Class Coupon"
                ],
                "line": 69
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Ticket Type",
                  "Adult Standard"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I should see the \"Ticket Price Coupon\" field value is calculated using the following formula:",
            "match": {
              "arguments": [
                {
                  "val": "Ticket Price Coupon",
                  "offset": 18
                }
              ],
              "location": "CalculationActions.fieldValueIsCalculatedByFormula(String,String)"
            },
            "matchedColumns": [
              4
            ],
            "keyword": "And ",
            "doc_string": {
              "content_type": "",
              "line": 72,
              "value": "(\"Total Price\" / 1 )"
            }
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ACTIVATE TICKET"
                ],
                "line": 78
              },
              {
                "cells": [
                  "You are about to activate your ticket for travel, once activated:"
                ],
                "line": 79
              },
              {
                "cells": [
                  "This process cannot be undone"
                ],
                "line": 80
              },
              {
                "cells": [
                  "Tickets cannot be refunded"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Tickets are valid for today"
                ],
                "line": 82
              },
              {
                "cells": [
                  "Tickets cannot be moved to a different phone"
                ],
                "line": 83
              },
              {
                "cells": [
                  "Ensure you are travelling on the same day you activate. Please ensure your phone date \u0026 time is correct. Phone date \u0026 time:"
                ],
                "line": 84
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 85,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:39:44.769  1572  2289 E ConnectivityService: EVENT_NETWORK_INFO_CHANGED from unknown NetworkAgent\r\r\n05-03 16:39:54.369 25322 25340 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:39:56.769  1572  3473 E Watchdog: !@Sync 26384 [05-03 16:39:56.780]\r\r\n05-03 16:39:57.719  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:40:06.559 25746 25762 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:40:26.769  1572  3473 E Watchdog: !@Sync 26385 [05-03 16:40:26.781]\r\r\n05-03 16:40:31.329 26124 26124 E libpersona: scanKnoxPersonas\r\r\n05-03 16:40:31.329 26124 26124 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:40:31.339 26124 26124 E libpersona: scanKnoxPersonas\r\r\n05-03 16:40:31.339 26124 26124 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:40:47.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:40:47.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:40:47.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:40:47.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:40:56.769  1572  3473 E Watchdog: !@Sync 26386 [05-03 16:40:56.781]\r\r\n05-03 16:41:26.769  1572  3473 E Watchdog: !@Sync 26387 [05-03 16:41:26.782]\r\r\n05-03 16:41:44.469  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:41:52.819  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:41:56.769  1572  3473 E Watchdog: !@Sync 26388 [05-03 16:41:56.783]\r\r\n05-03 16:42:11.339  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n--------- beginning of main\r\r\n05-03 16:42:26.769  1572  3473 E Watchdog: !@Sync 26389 [05-03 16:42:26.784]\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : \t... 16 more\r\r\n05-03 16:42:28.649  1572  3648 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : \t... 16 more\r\r\n05-03 16:42:47.489  1572  1597 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:42:52.299  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:42:54.769  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:42:54.789  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:42:54.799  3746 25571 E WakeLock: release without a matched acquire!\r\r\n05-03 16:42:54.809  3746 25571 E GCM     : Connection closed with errorCode 20\r\r\n05-03 16:42:54.809  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:42:54.809  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: Service call execution failed\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: javax.net.ssl.SSLException: Read error: ssl\u003d0xb99116f0: I/O error during system call, Connection timed out\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.android.org.conscrypt.NativeCrypto.SSL_read(Native Method)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.android.org.conscrypt.OpenSSLSocketImpl$SSLInputStream.read(OpenSSLSocketImpl.java:811)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okio.Okio$2.a(SourceFile:139)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okio.AsyncTimeout$2.a(SourceFile:237)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okio.RealBufferedSource.a(SourceFile:345)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okio.RealBufferedSource.f(SourceFile:217)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okio.RealBufferedSource.v(SourceFile:211)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http1.Http1Codec.a(SourceFile:189)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.CallServerInterceptor.intercept(SourceFile:75)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.logging.HttpLoggingInterceptor.intercept(SourceFile:211)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.connection.ConnectInterceptor.intercept(SourceFile:45)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.cache.CacheInterceptor.intercept(SourceFile:93)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.BridgeInterceptor.intercept(SourceFile:93)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(SourceFile:120)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.thetrainline.networking.framework.SessionInterceptor.intercept(SourceFile:35)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.thetrainline.networking.framework.RestServiceInterceptor.intercept(SourceFile:43)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.thetrainline.one_platform.common.login.AuthInterceptor.a(SourceFile:59)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat com.thetrainline.one_platform.common.login.AuthInterceptor.intercept(SourceFile:54)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:92)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.internal.http.RealInterceptorChain.a(SourceFile:67)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.RealCall.f(SourceFile:185)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat okhttp3.RealCall.execute(SourceFile:69)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat retrofit2.OkHttpCall.a(SourceFile:180)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.a(SourceFile:40)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(SourceFile:24)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.a(SourceFile:36)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.call(SourceFile:28)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Observable.a(SourceFile:10256)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.OnSubscribeSingle.a(SourceFile:81)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.OnSubscribeSingle.call(SourceFile:27)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single$2$1.a(SourceFile:670)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single$2$1.a(SourceFile:666)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:74)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single$2.a(SourceFile:680)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single$2.call(SourceFile:662)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:42:54.829 26441 26532 E SearchServiceApiRetrofi: \tat r\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: Error getting search results\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: BaseUncheckedException{code\u003d\u0027INT_NET\u0027, description\u003d\u0027Connection to trainline mothership lost. Please check your internet connection.\u0027}\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.getApiErrors(SourceFile:72)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.mapNetworkError(SourceFile:77)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapNetworkError(SourceFile:92)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapError(SourceFile:151)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:110)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:107)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:85)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$1.a(SourceFile:460)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$1.call(SourceFile:456)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle$1.a(SourceFile:64)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe$BodySubscriber.a(SourceFile:71)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallArbiter.a(SourceFile:159)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.a(SourceFile:43)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(SourceFile:24)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.a(SourceFile:36)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.call(SourceFile:28)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Observable.a(SourceFile:10256)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.a(SourceFile:81)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.call(SourceFile:27)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:670)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:666)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:74)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$2.a(SourceFile:680)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single$2.call(SourceFile:662)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$2.aa_(SourceFile:81)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.observers.SafeSubscriber.aa_(SourceFile:79)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$30.a(SourceFile:2086)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$25$1.a(SourceFile:1683)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$11$1.a(SourceFile:614)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent$SingleDoOnEventSubscriber.a(SourceFile:63)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.a(SourceFile:40)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.call(SourceFile:25)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$11.a(SourceFile:619)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$11.call(SourceFile:602)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable.a(SourceFile:2035)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$25.a(SourceFile:1679)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable$25.call(SourceFile:1676)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable.a(SourceFile:2035)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable.a(SourceFile:2083)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable.a(SourceFile:2067)\r\r\n05-03 16:42:54.849 26441 26441 E TrainJourneyResultsPres: \tat rx.Completable\r\r\n05-03 16:42:54.849  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:42:55.169   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:42:55.169  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:42:55.629 26895 26895 E Zygote  : v2\r\r\n05-03 16:42:55.959 26907 26907 E Zygote  : v2\r\r\n05-03 16:42:56.769  1572  3473 E Watchdog: !@Sync 26390 [05-03 16:42:56.785]\r\r\n05-03 16:42:58.339  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:42:58.339  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:42:58.399  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:42:58.399  3746 26929 E WakeLock: release without a matched acquire!\r\r\n05-03 16:42:58.419  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:42:58.459 26932 26932 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:42:58.469 26932 26932 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:43:02.279 26961 26961 E Zygote  : v2\r\r\n05-03 16:43:02.599 26978 26978 E Zygote  : v2\r\r\n05-03 16:43:02.669 26961 26992 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:43:02.679 26961 26992 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:43:02.699 26961 26975 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(205/llIIIIlllllIIllIIllI)] Network Status is not ready. DM Not Initialized\r\r\n05-03 16:43:02.699 26961 26975 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(210/llIIIIlllllIIllIIllI)] SPD SERVICE Stop!!\r\r\n05-03 16:43:02.999 26993 26993 E Zygote  : v2\r\r\n05-03 16:43:03.219 27009 27009 E Zygote  : v2\r\r\n05-03 16:43:05.199 27023 27023 E Zygote  : v2\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 16:43:05.309  1572  1597 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:43:05.449 27039 27039 E Zygote  : v2\r\r\n05-03 16:43:05.659 27058 27058 E Zygote  : v2\r\r\n05-03 16:43:05.679 27064 27064 E Zygote  : v2\r\r\n05-03 16:43:05.719 25731 25731 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:43:05.719 25731 25731 E SPPClientService: [SystemStateMoniter] Current Time : 791783279\r\r\n05-03 16:43:05.729 25731 25731 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 16:43:05.749 27083 27083 E Zygote  : v2\r\r\n05-03 16:43:05.789 25731 27094 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 16:43:06.209 27083 27109 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:43:08.419  3746 27123 E WakeLock: release without a matched acquire!\r\r\n05-03 16:43:08.609  2332  2332 E wpa_supplicant: IAPP Type:33, Func Type: 81\r\r\n05-03 16:43:08.609  2332  2332 E wpa_supplicant: num_neighbor_count\u003d14\r\r\n05-03 16:43:08.609  2332  2332 E wpa_supplicant: IAPP Type:33, Func Type: 81\r\r\n05-03 16:43:08.609  2332  2332 E wpa_supplicant: num_neighbor_count\u003d14\r\r\n05-03 16:43:09.279  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 18ms lastUpdatedAfter : 60104 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:43:11.279  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:11.319  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:11.319  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:11.369  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:43:11.399  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:11.529  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"FARWLAN\", roaming: false, failover: false, isAvailable: true]}  network{779}  lp{{InterfaceName: wlan0 LinkAddresses: [fe80::3ebb:fdff:fe71:b5b9/64,10.41.72.181/21,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.72.0/21 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.72.1 wlan0,] DnsAddresses: [10.40.0.23,10.40.0.12,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -72]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:43:11.599  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:43:11.659 27232 27232 E Zygote  : v2\r\r\n05-03 16:43:11.749 27245 27245 E Zygote  : v2\r\r\n05-03 16:43:11.869 27245 27245 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 16:43:11.919 26961 27259 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:43:11.929 26961 27259 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:43:11.939 26961 27259 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(245/llIIIIlllllIIllIIllI)] DM Not Init\r\r\n05-03 16:43:11.939 26961 27259 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:43:12.089  3746 27262 E WakeLock: release without a matched acquire!\r\r\n05-03 16:43:12.189 26961 26975 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(409/llIIllllIIlllIIIIlll)] SPD SERVICE Stop!!\r\r\n05-03 16:43:17.549 27272 27272 E Zygote  : v2\r\r\n05-03 16:43:17.759 27286 27286 E Zygote  : v2\r\r\n05-03 16:43:18.399 27318 27318 E Zygote  : v2\r\r\n05-03 16:43:21.219 27351 27351 E Zygote  : v2\r\r\n05-03 16:43:21.959 27365 27365 E Zygote  : v2\r\r\n05-03 16:43:24.089 27397 27397 E Zygote  : v2\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 16:43:24.189  1572  3648 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:43:24.329 27413 27413 E Zygote  : v2\r\r\n05-03 16:43:24.559 27432 27432 E Zygote  : v2\r\r\n05-03 16:43:26.179 27449 27449 E Zygote  : v2\r\r\n05-03 16:43:26.279 27449 27449 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:43:26.279 27449 27449 E SPPClientService: [SystemStateMoniter] Current Time : 791803833\r\r\n05-03 16:43:26.289 27449 27461 E SPPClientService: ShipBuild Binary : True\r\r\n05-03 16:43:26.289 27449 27449 E SPPClientService: [SystemStateMoniter] No Connect : false\r\r\n05-03 16:43:26.319 27463 27463 E Zygote  : v2\r\r\n05-03 16:43:26.359  1572  1572 E JavaBinder: !!! FAILED BINDER TRANSACTION !!!  (parcel size \u003d 104)\r\r\n05-03 16:43:26.559 27463 27479 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:43:26.769  1572  3473 E Watchdog: !@Sync 26391 [05-03 16:43:26.786]\r\r\n05-03 16:43:38.129  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:43:38.129  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:43:38.139  3746 27271 E WakeLock: release without a matched acquire!\r\r\n05-03 16:43:38.139  3746 27271 E GCM     : Connection closed with errorCode 20\r\r\n05-03 16:43:38.149  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:38.179  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:43:38.249 27523 27523 E Zygote  : v2\r\r\n05-03 16:43:38.489   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:43:38.489  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:43:38.489  1572  2289 E ConnectivityService: EVENT_NETWORK_INFO_CHANGED from unknown NetworkAgent\r\r\n05-03 16:43:38.579  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:43:38.579  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:43:38.609 26961 27561 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:43:38.609 26961 27561 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:43:38.629  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:38.659  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:43:38.709 27565 27565 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:43:38.709 27565 27565 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:43:38.999 27587 27587 E Zygote  : v2\r\r\n05-03 16:43:39.699  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:39.739  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:39.759  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:39.809  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:43:39.829  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:39.989  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"FARWLAN\", roaming: false, failover: false, isAvailable: true]}  network{780}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.72.181/21,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.72.0/21 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.72.1 wlan0,] DnsAddresses: [10.40.0.23,10.40.0.12,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -82]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:43:40.079  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:43:40.119 27701 27701 E Zygote  : v2\r\r\n05-03 16:43:40.179  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:43:40.179  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:43:40.199  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:40.199  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:40.229  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:43:40.269 27722 27722 E Zygote  : v2\r\r\n05-03 16:43:40.499 27722 27722 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 16:43:40.529   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:43:40.539   343   343 E lowmemorykiller: Error writing /proc/27397/oom_score_adj; errno\u003d22\r\r\n05-03 16:43:40.589  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:43:40.619 26961 27757 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:43:40.629 26961 27757 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:43:40.859 26961 27759 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:43:40.879 26961 27759 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:43:44.199  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:43:44.209  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:43:44.289 27768 27768 E Zygote  : v2\r\r\n05-03 16:43:44.299  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:44.319  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:43:44.359 27781 27781 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:43:44.369 27781 27781 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 16:43:44.399  1572  3991 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:43:44.559  3746 27808 E WakeLock: release without a matched acquire!\r\r\n05-03 16:43:44.889 27816 27816 E Zygote  : v2\r\r\n05-03 16:43:45.569  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:45.609  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:45.609  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:43:45.629  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:43:45.659  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:43:45.819  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"FARWLAN\", roaming: false, failover: false, isAvailable: true]}  network{781}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.72.181/21,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.72.0/21 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.72.1 wlan0,] DnsAddresses: [10.40.0.23,10.40.0.12,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -80]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:43:45.899  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:43:45.969 26961 27930 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:43:45.969 26961 27930 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:43:46.059 26961 27930 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:43:46.079  3746 27932 E WakeLock: release without a matched acquire!\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 88,
            "name": "the \"Ticket active\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Ticket active",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              12
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 56168380714,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 204,
        "name": "Book the mobile ticket EWF and Open Return",
        "description": "",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-ewf-and-open-return;;2",
        "after": [
          {
            "result": {
              "duration": 12437296489,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20102486385,
              "status": "passed"
            },
            "line": 102,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13207680214,
              "status": "passed"
            },
            "line": 103,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214322667660,
              "error_message": "java.lang.AssertionError: Unable to find element with locator: \u0027By.xpath: //android.widget.EditText[contains(@resource-id,\u0027id/search_station_searchbox\u0027)]\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getElement(Control.java:84)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.click(Control.java:260)\r\n\tat com.thetrainline.common.lib.ui.controls.Edit.setText(Edit.java:25)\r\n\tat com.thetrainline.android.pages.search.SearchPage.searchStation(SearchPage.java:45)\r\n\tat com.thetrainline.android.pages.search.BuyTicketsPage.setOriginStation(BuyTicketsPage.java:131)\r\n\tat com.thetrainline.android.actions.BuyTicketAction.populateJourneySearch(BuyTicketAction.java:26)\r\n\tat com.thetrainline.android.actions.BuyTicketAction.searchJourney(BuyTicketAction.java:97)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.searchJourneyByCriteria(JourneySearchActions.java:138)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.goToSearchResults(JourneySearchActions.java:425)\r\n\tat ✽.When I go to the search results for the following journey:(booking/RegisteredMobileBooking.feature:104)\r\n",
              "status": "failed"
            },
            "line": 104,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7,
              8
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 105
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "Return",
                  "+1 hours",
                  "+33 days",
                  "1",
                  "0"
                ],
                "line": 106
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 111
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Outbound Passangers",
                  "Outbound Passangers"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 114
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Outbound Price",
                  "Outbound Price"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Return Departure Time",
                  "Return Departure Time"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Return Arrival Time",
                  "Return Arrival Time"
                ],
                "line": 119
              },
              {
                "comments": [
                  {
                    "line": 120,
                    "value": "#| Return Ticket Type      | Return Ticket Type       |"
                  },
                  {
                    "line": 121,
                    "value": "#| Return Price            | Return Price             |"
                  }
                ],
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 122
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 128
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 14
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Post code"
                ],
                "line": 131
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EC1M 3HE"
                ],
                "line": 132
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 134,
            "name": "I should see the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I should see the \"Traveller Name\" field text matches the \"Zenon Kopyto\" pattern",
            "match": {
              "arguments": [
                {
                  "val": "Traveller Name",
                  "offset": 18
                },
                {
                  "val": "Zenon Kopyto",
                  "offset": 58
                }
              ],
              "location": "FieldActions.fieldTextShouldMatchPattern(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 136,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              }
            ],
            "line": 137,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              15
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 143,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 144,
                    "value": "#re-enable"
                  },
                  {
                    "line": 145,
                    "value": "#| Outbound Passangers      |"
                  }
                ],
                "cells": [
                  "Outbound Deptarture Time"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Outbound Arrival Time"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Outbound Ticket Date"
                ],
                "line": 148
              },
              {
                "cells": [
                  "London Euston"
                ],
                "line": 149
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 150
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "the \"Download tickets\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I wait for 3 seconds",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "CommonActions.waitForSeconds(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 157,
                "value": "#    When I open the \"Outbound\" leg for the top-most visible ticket"
              }
            ],
            "line": 158,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 160,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              16,
              2,
              3,
              4,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Info Departure Time",
                  "Info Arrival Time",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price",
                  "Journey Date"
                ],
                "line": 162
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Deptarture Time",
                  "Outbound Arrival Time",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price",
                  "DATE(+1 hours;EEE dd MMM yyyy)"
                ],
                "line": 163
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 164,
            "name": "I click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Info Departure Time",
                  "Info Arrival Time",
                  "Ticket Fare Name Coupon",
                  "Ticket Journey Part Coupon",
                  "Ticket Passanger Class Coupon",
                  "Ticket Departure Station Coupon",
                  "Ticket Arrival Station Coupon",
                  "Ticket Price Coupon",
                  "Ticket Passenger Name"
                ],
                "line": 167
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Deptarture Time",
                  "Outbound Arrival Time",
                  "Outbound Ticket Type",
                  "SGL (Single)",
                  "Adult Standard",
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Price",
                  "Zenon Kopyto"
                ],
                "line": 168
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ACTIVATE TICKET"
                ],
                "line": 172
              },
              {
                "cells": [
                  "You are about to activate your ticket for travel, once activated"
                ],
                "line": 173
              },
              {
                "cells": [
                  "This process cannot be undone"
                ],
                "line": 174
              },
              {
                "cells": [
                  "Tickets cannot be refunded"
                ],
                "line": 175
              },
              {
                "cells": [
                  "Tickets are valid for today"
                ],
                "line": 176
              },
              {
                "cells": [
                  "Tickets cannot be moved to a different phone"
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 178,
                "value": "#And the \"Ensure you are travelling on the same day you activate. Please ensure your phone date \u0026 time is correct. Phone date \u0026 time: 25/08/2015 17:31\" text is shown"
              }
            ],
            "line": 179,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "I should see the \"Mobile Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "the \"Ticket active\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Ticket active",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              18
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:44:03.139 28376 28376 E libpersona: scanKnoxPersonas\r\r\n05-03 16:44:03.139 28376 28376 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:44:03.149 28376 28376 E libpersona: scanKnoxPersonas\r\r\n05-03 16:44:03.149 28376 28376 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:44:26.779  1572  3473 E Watchdog: !@Sync 26393 [05-03 16:44:26.787]\r\r\n05-03 16:44:32.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:44:32.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:44:52.969   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:44:52.969   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:44:56.779  1572  3473 E Watchdog: !@Sync 26394 [05-03 16:44:56.787]\r\r\n05-03 16:44:57.259   388  1992 E FrameworkListener: read() failed (Connection reset by peer)\r\r\n05-03 16:45:26.779  1572  3473 E Watchdog: !@Sync 26395 [05-03 16:45:26.788]\r\r\n05-03 16:45:28.419  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:45:37.609  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:45:53.239  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1175, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:45:56.779  1572  3473 E Watchdog: !@Sync 26396 [05-03 16:45:56.789]\r\r\n05-03 16:45:57.399 29939 29955 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:46:26.779  1572  3473 E Watchdog: !@Sync 26397 [05-03 16:46:26.790]\r\r\n05-03 16:46:28.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:46:28.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:46:30.299   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:46:30.299   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n--------- beginning of main\r\r\n05-03 16:46:56.779  1572  3473 E Watchdog: !@Sync 26398 [05-03 16:46:56.791]\r\r\n05-03 16:46:58.249  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:46:58.249  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:46:58.269  3746 30014 E WakeLock: release without a matched acquire!\r\r\n05-03 16:46:58.269  3746 30014 E GCM     : Connection closed with errorCode 20\r\r\n05-03 16:46:58.269  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:46:58.269  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:46:58.299  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:46:58.549  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:46:58.559   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:46:58.559 29713 30106 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:46:58.569 29713 30106 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:46:59.769  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:46:59.769  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:46:59.989  2332  2332 E wpa_supplicant: IAPP Type:33, Func Type: 81\r\r\n05-03 16:46:59.989  2332  2332 E wpa_supplicant: num_neighbor_count\u003d14\r\r\n05-03 16:46:59.999  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:47:00.039  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:47:00.079 30110 30110 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:47:00.089 30110 30110 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:47:01.479  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:47:01.539  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:47:01.539  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.72.1} in /proc/net/arp\r\r\n05-03 16:47:01.559  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:47:01.599  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:47:01.759  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"FARWLAN\", roaming: false, failover: false, isAvailable: true]}  network{783}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.72.181/21,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.72.0/21 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.72.1 wlan0,] DnsAddresses: [10.40.0.23,10.40.0.12,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -67]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:47:01.839  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:47:01.849 30226 30226 E Zygote  : v2\r\r\n05-03 16:47:01.949 30239 30239 E Zygote  : v2\r\r\n05-03 16:47:02.089 30239 30239 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 16:47:02.129 29713 30252 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:47:02.129 29713 30252 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:47:02.249 29713 30252 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:47:02.399  3746 30254 E WakeLock: release without a matched acquire!\r\r\n05-03 16:47:04.539 29921 29921 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:47:04.539 29921 29921 E SPPClientService: [SystemStateMoniter] Current Time : 792022092\r\r\n05-03 16:47:04.539 29921 29921 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 16:47:04.549 29921 30262 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 16:47:07.369 29921 29921 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:47:07.369 29921 29921 E SPPClientService: [SystemStateMoniter] Current Time : 792024921\r\r\n05-03 16:47:07.369 29921 29921 E SPPClientService: [SystemStateMoniter] No Connect : false\r\r\n05-03 16:47:09.739  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 40ms lastUpdatedAfter : 60127 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:47:26.779  1572  3473 E Watchdog: !@Sync 26399 [05-03 16:47:26.792]\r\r\n05-03 16:47:40.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:47:40.199   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:47:41.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:47:41.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:47:56.779  1572  3473 E Watchdog: !@Sync 26400 [05-03 16:47:56.792]\r\r\n05-03 16:48:05.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:48:05.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:48:05.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:48:05.779   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:48:09.839  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 17ms lastUpdatedAfter : 60102 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:48:22.059  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 16:48:22.089 30284 30284 E Zygote  : v2\r\r\n05-03 16:48:22.249  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 16:48:26.779  1572  3473 E Watchdog: !@Sync 26401 [05-03 16:48:26.793]\r\r\n05-03 16:48:33.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:48:33.919   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:48:56.779  1572  3473 E Watchdog: !@Sync 26402 [05-03 16:48:56.793]\r\r\n05-03 16:48:59.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:48:59.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 185,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 77033361544,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 205,
        "name": "Book the mobile ticket EWF and Open Return",
        "description": "",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-ewf-and-open-return;;3",
        "after": [
          {
            "result": {
              "duration": 12198796908,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 20118154770,
              "status": "passed"
            },
            "line": 102,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13090261848,
              "status": "passed"
            },
            "line": 103,
            "name": "I am on the \"Journey Search\" page",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 98976215770,
              "status": "passed"
            },
            "line": 104,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7,
              8
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children"
                ],
                "line": 105
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "Return",
                  "+1 hours",
                  "+3 hours",
                  "1",
                  "0"
                ],
                "line": 106
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3595596801,
              "status": "passed"
            },
            "line": 107,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27781488396,
              "status": "passed"
            },
            "line": 108,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 644787404,
              "status": "passed"
            },
            "line": 109,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 82261849854,
              "error_message": "java.lang.AssertionError: Unable to find element with locator: \u0027By.xpath: //android.widget.TextView[contains(@resource-id, \u0027passengers_info\u0027)]\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getElement(Control.java:84)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getText(Control.java:244)\r\n\tat com.thetrainline.common.steps.generic.FieldActions.noteTheFollowingFields(FieldActions.java:93)\r\n\tat ✽.And I note following fields values:(booking/RegisteredMobileBooking.feature:110)\r\n",
              "status": "failed"
            },
            "line": 110,
            "name": "I note following fields values:",
            "match": {
              "location": "FieldActions.noteTheFollowingFields(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Field",
                  "As"
                ],
                "line": 111
              },
              {
                "cells": [
                  "Outbound Ticket Date",
                  "Outbound Ticket Date"
                ],
                "line": 112
              },
              {
                "cells": [
                  "Outbound Passangers",
                  "Outbound Passangers"
                ],
                "line": 113
              },
              {
                "cells": [
                  "Outbound Departure Time",
                  "Outbound Deptarture Time"
                ],
                "line": 114
              },
              {
                "cells": [
                  "Outbound Arrival Time",
                  "Outbound Arrival Time"
                ],
                "line": 115
              },
              {
                "cells": [
                  "Outbound Ticket Type",
                  "Outbound Ticket Type"
                ],
                "line": 116
              },
              {
                "cells": [
                  "Outbound Price",
                  "Outbound Price"
                ],
                "line": 117
              },
              {
                "cells": [
                  "Return Departure Time",
                  "Return Departure Time"
                ],
                "line": 118
              },
              {
                "cells": [
                  "Return Arrival Time",
                  "Return Arrival Time"
                ],
                "line": 119
              },
              {
                "comments": [
                  {
                    "line": 120,
                    "value": "#| Return Ticket Type      | Return Ticket Type       |"
                  },
                  {
                    "line": 121,
                    "value": "#| Return Price            | Return Price             |"
                  }
                ],
                "cells": [
                  "Ticket price",
                  "Total Price"
                ],
                "line": 122
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 127
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 128
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "select Pay by card method",
            "match": {
              "arguments": [
                {
                  "val": "card",
                  "offset": 14
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "add the card with the following criteria:",
            "match": {
              "location": "CardManipulationActions.addCards(DataTable)"
            },
            "matchedColumns": [
              13,
              14
            ],
            "rows": [
              {
                "cells": [
                  "Card type",
                  "Card number",
                  "Expiry month",
                  "Expiry year",
                  "Card holder name",
                  "Post code"
                ],
                "line": 131
              },
              {
                "cells": [
                  "Visa Credit",
                  "4000000000000051",
                  "12",
                  "20",
                  "Sarath Banala",
                  "EC1M 3HE"
                ],
                "line": 132
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 134,
            "name": "I should see the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I should see the \"Traveller Name\" field text matches the \"Zenon Kopyto\" pattern",
            "match": {
              "arguments": [
                {
                  "val": "Traveller Name",
                  "offset": 18
                },
                {
                  "val": "Zenon Kopyto",
                  "offset": 58
                }
              ],
              "location": "FieldActions.fieldTextShouldMatchPattern(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 136,
                "value": "#And the \"\u003cfee label\u003e\" text is shown"
              }
            ],
            "line": 137,
            "name": "I type \"223\" text into \"CVV\" field",
            "match": {
              "arguments": [
                {
                  "val": "223",
                  "offset": 8
                },
                {
                  "val": "CVV",
                  "offset": 24
                }
              ],
              "location": "FieldActions.typeTextIntoField(String,String)"
            },
            "matchedColumns": [
              15
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "click on the \"Buy\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 143,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 144,
                    "value": "#re-enable"
                  },
                  {
                    "line": 145,
                    "value": "#| Outbound Passangers      |"
                  }
                ],
                "cells": [
                  "Outbound Deptarture Time"
                ],
                "line": 146
              },
              {
                "cells": [
                  "Outbound Arrival Time"
                ],
                "line": 147
              },
              {
                "cells": [
                  "Outbound Ticket Date"
                ],
                "line": 148
              },
              {
                "cells": [
                  "London Euston"
                ],
                "line": 149
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 150
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 151,
            "name": "the \"Download tickets\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I wait for 3 seconds",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 11
                }
              ],
              "location": "CommonActions.waitForSeconds(int)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "click on the \"Download tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Download tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 154,
            "name": "click on the \"Confirm download\" button",
            "match": {
              "arguments": [
                {
                  "val": "Confirm download",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "the \"View tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 156,
            "name": "click on the \"View tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "View tickets",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 157,
                "value": "#    When I open the \"Outbound\" leg for the top-most visible ticket"
              }
            ],
            "line": 158,
            "name": "I should see the \"Mobile Ticket Barcode\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Barcode",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "the \"Barcode\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Barcode",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 160,
            "name": "the \"Ticket\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              16,
              2,
              3,
              4,
              6
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Info Departure Time",
                  "Info Arrival Time",
                  "Ticket Type",
                  "Ticket Class",
                  "Passengers",
                  "Purchase Date",
                  "Total Price",
                  "Journey Date"
                ],
                "line": 162
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Deptarture Time",
                  "Outbound Arrival Time",
                  "Outbound Ticket Type",
                  "Standard",
                  "1",
                  "DATE(today;EEE dd MMM yyyy)",
                  "Total Price",
                  "DATE(+1 hours;EEE dd MMM yyyy)"
                ],
                "line": 163
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 164,
            "name": "I click on the \"Ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 165,
            "name": "I should see the \"Mobile Ticket Details\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Ticket Details",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "the page contains the following data:",
            "match": {
              "location": "PageActions.pageContainsData(DataTable)"
            },
            "matchedColumns": [
              2,
              3,
              9
            ],
            "rows": [
              {
                "cells": [
                  "Origin Station",
                  "Destination Station",
                  "Info Departure Time",
                  "Info Arrival Time",
                  "Ticket Fare Name Coupon",
                  "Ticket Journey Part Coupon",
                  "Ticket Passanger Class Coupon",
                  "Ticket Departure Station Coupon",
                  "Ticket Arrival Station Coupon",
                  "Ticket Price Coupon",
                  "Ticket Passenger Name"
                ],
                "line": 167
              },
              {
                "cells": [
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Deptarture Time",
                  "Outbound Arrival Time",
                  "Outbound Ticket Type",
                  "OUT (2-Part Return)",
                  "Adult Standard",
                  "London Euston",
                  "Manchester Piccadilly",
                  "Outbound Price",
                  "Zenon Kopyto"
                ],
                "line": 168
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "click on the \"Activate ticket\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate ticket",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 170,
            "name": "I should see the \"Activate Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Activate Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "ACTIVATE TICKET"
                ],
                "line": 172
              },
              {
                "cells": [
                  "You are about to activate your ticket for travel, once activated"
                ],
                "line": 173
              },
              {
                "cells": [
                  "This process cannot be undone"
                ],
                "line": 174
              },
              {
                "cells": [
                  "Tickets cannot be refunded"
                ],
                "line": 175
              },
              {
                "cells": [
                  "Tickets are valid for today"
                ],
                "line": 176
              },
              {
                "cells": [
                  "Tickets cannot be moved to a different phone"
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 178,
                "value": "#And the \"Ensure you are travelling on the same day you activate. Please ensure your phone date \u0026 time is correct. Phone date \u0026 time: 25/08/2015 17:31\" text is shown"
              }
            ],
            "line": 179,
            "name": "the \"Cancel\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Cancel",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "the \"Activate tickets\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I click on the \"Activate tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Activate tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 182,
            "name": "I should see the \"Mobile Booking info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Mobile Booking info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 183,
            "name": "the \"Ticket active\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Ticket active",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "matchedColumns": [
              18
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "I click on the \"Back\" button",
            "match": {
              "arguments": [
                {
                  "val": "Back",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:50:12.829 32395 32395 E libpersona: scanKnoxPersonas\r\r\n05-03 16:50:12.829 32395 32395 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:50:12.839 32395 32395 E libpersona: scanKnoxPersonas\r\r\n05-03 16:50:12.839 32395 32395 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:50:13.059   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:50:13.059   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:50:26.779  1572  3473 E Watchdog: !@Sync 26405 [05-03 16:50:26.796]\r\r\n05-03 16:50:56.789  1572  3473 E Watchdog: !@Sync 26406 [05-03 16:50:56.797]\r\r\n05-03 16:51:26.789  1572  3473 E Watchdog: !@Sync 26407 [05-03 16:51:26.798]\r\r\n05-03 16:51:27.989  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:51:36.829  1572  3768 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:51:56.499  1572  2388 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:51:56.789  1572  3473 E Watchdog: !@Sync 26408 [05-03 16:51:56.798]\r\r\n05-03 16:52:26.789  1572  3473 E Watchdog: !@Sync 26409 [05-03 16:52:26.799]\r\r\n05-03 16:52:56.789  1572  3473 E Watchdog: !@Sync 26410 [05-03 16:52:56.799]\r\r\n05-03 16:53:01.999  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:53:08.509  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:53:19.579  1234  1253 E ActivityThread: Failed to find provider info for null\r\r\n05-03 16:53:26.789  1572  3473 E Watchdog: !@Sync 26411 [05-03 16:53:26.800]\r\r\n05-03 16:53:47.649  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n--------- beginning of main\r\r\n05-03 16:53:51.909  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:51.949  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:51.949  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:51.989  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:53:52.019  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:52.149  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{790}  lp{{InterfaceName: wlan0 LinkAddresses: [fe80::3ebb:fdff:fe71:b5b9/64,10.41.121.29/24,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -84]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:53:52.209  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:53:52.239  1544  1544 E Zygote  : v2\r\r\n05-03 16:53:52.359  1558  1558 E Zygote  : v2\r\r\n05-03 16:53:52.419  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:53:52.419  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:53:52.429  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:52.429  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:52.469  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:53:52.549  1558  1558 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 16:53:52.759   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:53:52.769   934  1589 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:53:52.769   934  1589 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:53:52.779  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:53:52.939   934  1608 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:53:52.949   934  1608 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 16:53:53.089  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:53:53.089  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:53:53.129  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:53.169  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:53:53.199  1610  1610 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:53:53.199  1610  1610 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:53:54.429  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:54.449  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:54.449  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:54.489  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:53:54.519  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:54.699  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{791}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -84]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:53:54.829  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:53:54.889   934  1721 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:53:54.899   934  1721 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:53:55.039   934  1721 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:53:55.399  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:53:55.409  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:53:55.419  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:55.419  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:55.439  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:53:55.739   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:53:55.749   934  1756 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:53:55.749  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:53:55.759   934  1756 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:53:55.769  3746  1757 E WakeLock: release without a matched acquire!\r\r\n05-03 16:53:56.789  1572  3473 E Watchdog: !@Sync 26412 [05-03 16:53:56.801]\r\r\n05-03 16:53:57.649  3746  1760 E WakeLock: release without a matched acquire!\r\r\n05-03 16:53:57.989  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:53:57.999  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:53:58.049  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:58.079  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:53:58.109  1763  1763 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:53:58.119  1763  1763 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:53:59.129  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:59.169  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:59.169  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:53:59.199  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:53:59.229  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:53:59.369  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{792}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -84]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:53:59.439  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:53:59.509   934  1886 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:53:59.509   934  1886 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:53:59.619   934  1886 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:54:00.059  3746  1723 E WakeLock: release without a matched acquire!\r\r\n05-03 16:54:00.609  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:54:00.609  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:54:00.629  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:54:00.629  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:54:00.659  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 16:54:00.879  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:54:00.889   934  1926 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 16:54:00.889   934  1926 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:54:00.909   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 16:54:00.939  3746  1931 E WakeLock: release without a matched acquire!\r\r\n05-03 16:54:00.969  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 16:54:00.979  1572  2290 E Tethering: No numeric data\r\r\n05-03 16:54:01.049  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:54:01.079  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 16:54:01.129  1933  1933 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:54:01.139  1933  1933 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 16:54:02.269  3746  1955 E WakeLock: release without a matched acquire!\r\r\n05-03 16:54:02.479  1957  1957 E Zygote  : v2\r\r\n05-03 16:54:02.699  1957  1957 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 16:54:08.769 32070 32070 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:54:08.769 32070 32070 E SPPClientService: [SystemStateMoniter] Current Time : 792446323\r\r\n05-03 16:54:08.769 32070 32070 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 16:54:08.779 32070  1974 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 16:54:09.159  3746  1976 E WakeLock: release without a matched acquire!\r\r\n05-03 16:54:10.489  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 21ms lastUpdatedAfter : 60112 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:54:10.959 32070 32070 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:54:10.959 32070 32070 E SPPClientService: [SystemStateMoniter] Current Time : 792448519\r\r\n05-03 16:54:10.969 32070 32070 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 16:54:10.979 32070  1979 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 16:54:15.129  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:54:15.179  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:54:15.189  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 16:54:15.219  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 16:54:15.259  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 16:54:15.449  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{793}  lp{{InterfaceName: wlan0 LinkAddresses: [fe80::3ebb:fdff:fe71:b5b9/64,10.41.121.29/24,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -74]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 16:54:15.549  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 16:54:15.649   934  2097 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 16:54:15.659   934  2097 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 16:54:15.779   934  2097 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 16:54:20.759 32070 32070 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 16:54:20.759 32070 32070 E SPPClientService: [SystemStateMoniter] Current Time : 792458314\r\r\n05-03 16:54:20.759 32070 32070 E SPPClientService: [SystemStateMoniter] No Connect : false\r\r\n05-03 16:54:26.789  1572  3473 E Watchdog: !@Sync 26413 [05-03 16:54:26.801]\r\r\n05-03 16:54:32.699  1957  1957 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 16:54:35.809  3746  2099 E WakeLock: release without a matched acquire!\r\r\n05-03 16:54:35.979  3746  2114 E WakeLock: release without a matched acquire!\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 185,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53031138287,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 249,
        "name": "Book the mobile ticket through all available entry points using PayPal payment",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-through-all-available-entry-points-using-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 12139312570,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15928854163,
              "status": "passed"
            },
            "line": 210,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4267256637,
              "status": "passed"
            },
            "line": 211,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4003823256,
              "status": "passed"
            },
            "line": 212,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 86589981816,
              "status": "passed"
            },
            "line": 213,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 214
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "+3 hours",
                  "",
                  "1"
                ],
                "line": 215
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3556004306,
              "status": "passed"
            },
            "line": 216,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 59160294843,
              "error_message": "java.lang.AssertionError: Neither Outbound nor Return page was found\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:712)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:53)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.proceedFromSearchResultsToPayment(JourneySearchActions.java:219)\r\n\tat ✽.And proceed search results to the payment screen(booking/RegisteredMobileBooking.feature:217)\r\n",
              "status": "failed"
            },
            "line": 217,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 218,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 219,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 220,
                "value": "#And I note following fields values:"
              },
              {
                "line": 221,
                "value": "#  | Field               | As                  |"
              },
              {
                "line": 222,
                "value": "# | Outbound Ticket         | Outbound Ticket Type     |"
              },
              {
                "line": 223,
                "value": "#  | Outbound Passangers | Outbound Passangers |"
              },
              {
                "line": 224,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 225,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 226,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 227,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 228,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 229,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 230
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 231
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 232,
                "value": "#Then I should see the \"Available Cards\" screen"
              }
            ],
            "line": 233,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 234,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 235,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 236,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 237,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 238,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:54:54.409  2409  2409 E libpersona: scanKnoxPersonas\r\r\n05-03 16:54:54.409  2409  2409 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:54:54.419  2409  2409 E libpersona: scanKnoxPersonas\r\r\n05-03 16:54:54.419  2409  2409 E libpersona: Couldn\u0027t open the File - /data/system/users/0/personalist.xml - No such file or directory\r\r\n05-03 16:54:54.439  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1176, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:54:54.439  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1177, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 16:54:56.789  1572  3473 E Watchdog: !@Sync 26414 [05-03 16:54:56.802]\r\r\n05-03 16:55:26.799  1572  3473 E Watchdog: !@Sync 26415 [05-03 16:55:26.803]\r\r\n05-03 16:55:56.789  1572  3473 E Watchdog: !@Sync 26416 [05-03 16:55:56.804]\r\r\n05-03 16:56:26.789  1572  3473 E Watchdog: !@Sync 26417 [05-03 16:56:26.805]\r\r\n05-03 16:56:31.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:56:31.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:56:31.729  1572  3753 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:56:33.409   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:56:33.409   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:56:40.319  1572  1597 E InputMethodManagerService: Perflock object null\r\r\n05-03 16:56:56.789  1572  3473 E Watchdog: !@Sync 26418 [05-03 16:56:56.805]\r\r\n05-03 16:56:59.389  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n--------- beginning of main\r\r\n05-03 16:57:10.819  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 20ms lastUpdatedAfter : 60111 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.common.Instant$$Parcelable\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : \t... 16 more\r\r\n05-03 16:57:17.419  1572  3991 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:57:26.799  1572  3473 E Watchdog: !@Sync 26419 [05-03 16:57:26.806]\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : \t... 16 more\r\r\n05-03 16:57:34.399  1572  4015 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: Error getting search results\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: BaseUncheckedException{code\u003d\u0027SERVICE_OUTAGE\u0027, description\u003d\u0027Trainline is down for maintenance, please try again later.\u0027}\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.getApiErrors(SourceFile:72)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.mapBasedOnErrorType(SourceFile:59)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.common.NetworkErrorMapper.mapNetworkError(SourceFile:52)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapFailedResponse(SourceFile:44)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper.mapError(SourceFile:142)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:110)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat com.thetrainline.networking.errorHandling.retrofit.RetrofitErrorMapper$1$1.call(SourceFile:107)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:85)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$1.a(SourceFile:460)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$1.call(SourceFile:456)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext$2.a(SourceFile:69)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle$1.a(SourceFile:64)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe$BodySubscriber.a(SourceFile:56)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe$BodySubscriber.a(SourceFile:39)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallArbiter.b(SourceFile:118)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallArbiter.a(SourceFile:100)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.a(SourceFile:46)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.CallExecuteOnSubscribe.call(SourceFile:24)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.a(SourceFile:36)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat retrofit2.adapter.rxjava.BodyOnSubscribe.call(SourceFile:28)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Observable.a(SourceFile:10256)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.a(SourceFile:81)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.OnSubscribeSingle.call(SourceFile:27)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:670)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$2$1.a(SourceFile:666)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap$MapSubscriber.a(SourceFile:74)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$2.a(SourceFile:680)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single$2.call(SourceFile:662)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.a(SourceFile:77)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOperatorOnErrorResumeNext.call(SourceFile:23)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.a(SourceFile:45)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeMap.call(SourceFile:30)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleOnSubscribeDelaySubscriptionOther$2.aa_(SourceFile:81)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.observers.SafeSubscriber.aa_(SourceFile:79)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable$30.a(SourceFile:2086)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable$25$1.a(SourceFile:1683)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable$11$1.a(SourceFile:614)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent$SingleDoOnEventSubscriber.a(SourceFile:63)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.a(SourceFile:48)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleFromCallable.call(SourceFile:29)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.a(SourceFile:40)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.internal.operators.SingleDoOnEvent.call(SourceFile:25)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Single.a(SourceFile:1962)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable$11.a(SourceFile:619)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable$11.call(SourceFile:602)\r\r\n05-03 16:57:38.279  3226  3226 E TrainJourneyResultsPres: \tat rx.Completable.a(Sou\r\r\n05-03 16:57:39.669  3010  3027 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 16:57:39.669  3226  3226 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 16:57:56.799  1572  3473 E Watchdog: !@Sync 26420 [05-03 16:57:56.807]\r\r\n05-03 16:58:09.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:58:09.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:58:10.939  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 20ms lastUpdatedAfter : 60121 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 16:58:24.309   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:58:24.309   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:58:26.799  1572  3473 E Watchdog: !@Sync 26421 [05-03 16:58:26.808]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 239,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 240,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 241,
                    "value": "# | Outbound Passangers |"
                  },
                  {
                    "line": 242,
                    "value": "# | Outbound Deptarture Time |"
                  },
                  {
                    "line": 243,
                    "value": "# | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 244
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 245
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50138266156,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 254,
        "name": "Book the mobile ticket through all available entry points using PayPal payment",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-through-all-available-entry-points-using-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 12311233807,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 15779958338,
              "status": "passed"
            },
            "line": 210,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4484951093,
              "status": "passed"
            },
            "line": 211,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3787917020,
              "status": "passed"
            },
            "line": 212,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 94865527396,
              "status": "passed"
            },
            "line": 213,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 214
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "next WED",
                  "18:00",
                  "1"
                ],
                "line": 215
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4483232544,
              "status": "passed"
            },
            "line": 216,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57455256721,
              "error_message": "java.lang.AssertionError: Neither Outbound nor Return page was found\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat org.junit.Assert.assertNotNull(Assert.java:712)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:53)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.proceedFromSearchResultsToPayment(JourneySearchActions.java:219)\r\n\tat ✽.And proceed search results to the payment screen(booking/RegisteredMobileBooking.feature:217)\r\n",
              "status": "failed"
            },
            "line": 217,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 218,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 219,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 220,
                "value": "#And I note following fields values:"
              },
              {
                "line": 221,
                "value": "#  | Field               | As                  |"
              },
              {
                "line": 222,
                "value": "# | Outbound Ticket         | Outbound Ticket Type     |"
              },
              {
                "line": 223,
                "value": "#  | Outbound Passangers | Outbound Passangers |"
              },
              {
                "line": 224,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 225,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 226,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 227,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 228,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 229,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 230
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 231
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "comments": [
              {
                "line": 232,
                "value": "#Then I should see the \"Available Cards\" screen"
              }
            ],
            "line": 233,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 234,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 235,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 236,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 237,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 238,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 16:58:56.799  1572  3473 E Watchdog: !@Sync 26422 [05-03 16:58:56.808]\r\r\n05-03 16:59:13.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:59:13.719   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:59:26.799  1572  3473 E Watchdog: !@Sync 26423 [05-03 16:59:26.809]\r\r\n05-03 16:59:40.649   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 16:59:40.649   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 16:59:56.799  1572  3473 E Watchdog: !@Sync 26424 [05-03 16:59:56.812]\r\r\n05-03 17:00:22.059  1572  1834 E MARsDBManager: updateDBAll : begin --size 3\r\r\n05-03 17:00:22.239  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 17:00:24.119   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:00:24.119   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:00:26.799  1572  3473 E Watchdog: !@Sync 26425 [05-03 17:00:26.813]\r\r\n05-03 17:00:27.099  1572  3991 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:00:28.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:00:28.459   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:00:35.509  1572  6011 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:00:55.049  1572  4014 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:00:56.799  1572  3473 E Watchdog: !@Sync 26426 [05-03 17:00:56.813]\r\r\n--------- beginning of main\r\r\n05-03 17:01:23.949  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:25.269  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:25.289  3746  2762 E WakeLock: release without a matched acquire!\r\r\n05-03 17:01:25.289  3746  2762 E GCM     : Connection closed with errorCode 20\r\r\n05-03 17:01:25.289  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:25.299  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:25.299  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:25.359  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 17:01:25.519  5173  5173 E Zygote  : v2\r\r\n05-03 17:01:25.659   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 17:01:25.689  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:25.939  5203  5203 E Zygote  : v2\r\r\n05-03 17:01:26.339  5216  5216 E Zygote  : v2\r\r\n05-03 17:01:26.739  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:26.739  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:26.799  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:26.799  1572  3473 E Watchdog: !@Sync 26427 [05-03 17:01:26.814]\r\r\n05-03 17:01:26.849  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 17:01:26.889  5230  5230 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:26.899  5230  5230 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:27.889  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:27.939  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:27.939  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:27.949  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 17:01:27.989  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:28.179  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{794}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -80]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 17:01:28.269  5353  5353 E Zygote  : v2\r\r\n05-03 17:01:28.289  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:28.409  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:28.419  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:28.429  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:28.429  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:28.459  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 17:01:28.469  5370  5370 E Zygote  : v2\r\r\n05-03 17:01:28.589  5395  5395 E Zygote  : v2\r\r\n05-03 17:01:28.749  5437  5437 E Zygote  : v2\r\r\n05-03 17:01:28.769  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:28.789   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 17:01:28.829  5353  5389 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(205/llIIIIlllllIIllIIllI)] Network Status is not ready. DM Not Initialized\r\r\n05-03 17:01:28.829  5353  5389 E DBG_POLICYDM: [llIIlIlIlIlIIIIIIlIl(210/llIIIIlllllIIllIIllI)] SPD SERVICE Stop!!\r\r\n05-03 17:01:28.849  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:28.859  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:28.919  5437  5437 E ReflectField: Incorrect type : Fallback exception\r\r\n05-03 17:01:28.929  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:28.989  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 17:01:29.019  5458  5458 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:29.029  5458  5458 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:29.059  5353  5468 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:29.059  5353  5468 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 17:01:29.379  5353  5490 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:29.379  5353  5490 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 17:01:30.269  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:30.309  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:30.309  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:30.389  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 17:01:30.449  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:30.599  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{795}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -84]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 17:01:30.739  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:30.789  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:30.789  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:30.809  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:30.809  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:30.839  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 17:01:30.919  5353  5587 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:30.919  5353  5587 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 17:01:31.209  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:31.229   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 17:01:31.259  5353  5619 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:31.259  5353  5619 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 17:01:32.479  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:32.489  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:32.529  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:32.559  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 17:01:32.599  5621  5621 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:32.599  5621  5621 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:33.599  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:33.649  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:33.649  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:33.669  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 17:01:33.699  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:33.869  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{796}  lp{{InterfaceName: wlan0 LinkAddresses: [10.41.121.29/24,fe80::3ebb:fdff:fe71:b5b9/64,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -84]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 17:01:33.929  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:34.059  5353  5741 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 17:01:34.059  5353  5741 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 17:01:34.059  5353  5741 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(245/llIIIIlllllIIllIIllI)] DM Not Init\r\r\n05-03 17:01:34.069  5353  5741 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 17:01:34.229  5353  5389 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(409/llIIllllIIlllIIIIlll)] SPD SERVICE Stop!!\r\r\n05-03 17:01:35.139  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:35.149  3746  5743 E WakeLock: release without a matched acquire!\r\r\n05-03 17:01:35.149  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:35.159  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:35.159  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:35.169  3746  5745 E WakeLock: release without a matched acquire!\r\r\n05-03 17:01:35.179  1572  1572 E WifiNotificationController: Ignore SHOW_NOTI_MESSAGE. Received unhandled message\r\r\n05-03 17:01:35.429  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:35.449  5353  5767 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:35.459  5353  5767 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 17:01:35.479   388  1996 E Netd    : netlink response contains error (No such file or directory)\r\r\n05-03 17:01:35.569  2332  2332 E wpa_supplicant: Cmd 35605 not handled\r\r\n05-03 17:01:35.579  1572  2290 E Tethering: No numeric data\r\r\n05-03 17:01:35.609  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:35.649  1572  2284 E WifiNative-wlan0: do suspend false\r\r\n05-03 17:01:35.679  5775  5775 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:35.689  5775  5775 E dhcpcd  : fopen `/system/etc/dhcpcd/dhcpcd.conf\u0027: No such file or directory\r\r\n05-03 17:01:35.719  1957  1957 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : Class not found when unmarshalling: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.Class.forName(Class.java:324)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.Parcel.readParcelableCreator(Parcel.java:2405)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.Parcel.readParcelable(Parcel.java:2359)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.Parcel.readValue(Parcel.java:2265)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.Parcel.readArrayMapInternal(Parcel.java:2620)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.BaseBundle.unparcel(BaseBundle.java:221)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.BaseBundle.getString(BaseBundle.java:920)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.content.Intent.getStringExtra(Intent.java:6227)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityLocked(ActivityStackSupervisor.java:2746)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat com.android.server.am.ActivityStackSupervisor.startActivityMayWait(ActivityStackSupervisor.java:2210)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivityAsUser(ActivityManagerService.java:6626)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.startActivity(ActivityManagerService.java:6362)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.app.ActivityManagerNative.onTransact(ActivityManagerNative.java:174)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat com.android.server.am.ActivityManagerService.onTransact(ActivityManagerService.java:4189)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : Caused by: java.lang.ClassNotFoundException: com.thetrainline.one_platform.search_criteria.ResultsSearchCriteriaDomain$$Parcelable\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.Class.classForName(Native Method)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.BootClassLoader.findClass(ClassLoader.java:781)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.BootClassLoader.loadClass(ClassLoader.java:841)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \tat java.lang.ClassLoader.loadClass(ClassLoader.java:469)\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : \t... 16 more\r\r\n05-03 17:01:38.119  1572  4015 E Parcel  : Caused by: java.lang.NoClassDefFoundError: Class not found using the boot class loader; no stack trace available\r\r\n05-03 17:01:38.139  4735  4899 E Appboy v2.1.3 .bo.app.cl: Error occurred while executing Appboy request: An error occurred during request processing, resulting in no valid response being received. Check the error log for more details.\r\r\n05-03 17:01:38.199  3746  5804 E WakeLock: release without a matched acquire!\r\r\n05-03 17:01:38.329  4735  4852 E CoachSearchApiRetrofitI: Service call execution failed\r\r\n05-03 17:01:38.799  4735  4808 E SearchServiceApiRetrofi: Service call execution failed\r\r\n05-03 17:01:38.809  4735  4735 E TrainJourneyResultsPres: Error getting search results\r\r\n05-03 17:01:40.159  4484  4519 E QueryController: Got null root node from accessibility - Retrying...\r\r\n05-03 17:01:40.159  4735  4735 E ViewRootImpl: sendUserActionEvent() mView \u003d\u003d null\r\r\n05-03 17:01:41.289  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:41.369  1572  2289 E ConnectivityService: Unexpected mtu value: 0, wlan0\r\r\n05-03 17:01:41.379  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:41.389  1572  2284 E WifiStateMachine: Did not find remoteAddress {10.41.121.1} in /proc/net/arp\r\r\n05-03 17:01:41.439  1572  2289 E ConnectivityService: updateNetworkInfo()\r\r\n05-03 17:01:41.459  5353  5889 E DBG_POLICYDM: [com.policydm.lllIlIlIIIllIIlIllIl(104/run)] network is unserviceable\r\r\n05-03 17:01:41.469  5353  5889 E DBG_POLICYDM: [com.policydm.XDMService(380/lllIlIlIIIllIIlIllIl)] network not changed.... \r\r\n05-03 17:01:41.609  1572  2289 E CSLegacyTypeTracker: add() : Adding agent NetworkAgentInfo{ ni{[type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: \"DEVQA2\", roaming: false, failover: false, isAvailable: true]}  network{797}  lp{{InterfaceName: wlan0 LinkAddresses: [fe80::3ebb:fdff:fe71:b5b9/64,10.41.121.29/24,]  Routes: [fe80::/64 -\u003e :: wlan0,10.41.121.0/24 -\u003e 0.0.0.0 wlan0,0.0.0.0/0 -\u003e 10.41.121.1 wlan0,] DnsAddresses: [10.40.0.12,10.40.0.23,] Domains: thetrainline.com MTU: 0 TcpBufferSizes: 524288,1048576,4525824,524288,1048576,4525824}}  nc{[ Transports: WIFI Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED\u0026NOT_VPN LinkUpBandwidth\u003e\u003d1048576Kbps LinkDnBandwidth\u003e\u003d1048576Kbps SignalStrength: -72]}  Score{20}  everValidated{false}  lastValidated{false}  created{true} lingering{false} explicitlySelected{false} acceptUnvalidated{false} everCaptivePortalDetected{false} lastCaptivePortalDetected{false} } for legacy network type 1\r\r\n05-03 17:01:41.759  1572  3519 E GpsLocationProvider: No APN found to select.\r\r\n05-03 17:01:41.829  5353  5911 E DBG_POLICYDM: [com.policydm.XDMService(374/lllIlIlIIIllIIlIllIl)] network changed.... \r\r\n05-03 17:01:41.839  5353  5911 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : true\r\r\n05-03 17:01:41.959  5353  5911 E DBG_POLICYDM: [com.policydm.XDMBroadcastReceiver(418/llllIIIllIlIIIIllllI)] bNetworkChange : false\r\r\n05-03 17:01:43.419  5914  5914 E Zygote  : v2\r\r\n05-03 17:01:43.659  5933  5933 E Zygote  : v2\r\r\n05-03 17:01:44.819  5951  5951 E Zygote  : v2\r\r\n05-03 17:01:53.539  5989  5989 E Zygote  : v2\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: Writing exception to parcel\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: java.lang.IllegalArgumentException: You cannot keep your settings in the secure settings.\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.warnOrThrowForUndesiredSecureSettingsMutationForTargetSdk(SettingsProvider.java:1279)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.enforceRestrictedSystemSettingsMutationForCallingPackage(SettingsProvider.java:1133)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.mutateSystemSetting(SettingsProvider.java:999)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.insertSystemSetting(SettingsProvider.java:967)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat com.android.providers.settings.SettingsProvider.call(SettingsProvider.java:319)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat android.content.ContentProvider$Transport.call(ContentProvider.java:411)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat android.content.ContentProviderNative.onTransact(ContentProviderNative.java:283)\r\r\n05-03 17:01:53.679  1572  6011 E DatabaseUtils: \tat android.os.Binder.execTransact(Binder.java:453)\r\r\n05-03 17:01:53.859  6006  6006 E Zygote  : v2\r\r\n05-03 17:01:54.139  6028  6028 E Zygote  : v2\r\r\n05-03 17:01:54.159  6038  6038 E Zygote  : v2\r\r\n05-03 17:01:54.269  6053  6053 E Zygote  : v2\r\r\n05-03 17:01:54.439  6053  6053 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 17:01:54.439  6053  6053 E SPPClientService: [SystemStateMoniter] Current Time : 792911997\r\r\n05-03 17:01:54.449  6053  6066 E SPPClientService: ShipBuild Binary : True\r\r\n05-03 17:01:54.459  6053  6053 E SPPClientService: [SystemStateMoniter] No Connect : true\r\r\n05-03 17:01:54.499  6053  6068 E SPPClientService: [[SystemStateMonitorService]] No Active Internet\r\r\n05-03 17:01:56.799  1572  3473 E Watchdog: !@Sync 26428 [05-03 17:01:56.815]\r\r\n05-03 17:01:57.169  3746  5912 E WakeLock: release without a matched acquire!\r\r\n05-03 17:01:58.249  3746  6071 E WakeLock: release without a matched acquire!\r\r\n05-03 17:02:02.089  6086  6086 E Zygote  : v2\r\r\n05-03 17:02:02.419  6086  6108 E ActivityThread: Failed to find provider info for null\r\r\n05-03 17:02:02.829  6116  6116 E Zygote  : v2\r\r\n05-03 17:02:03.099  6130  6130 E Zygote  : v2\r\r\n05-03 17:02:06.459  6161  6161 E Zygote  : v2\r\r\n05-03 17:02:07.039  6186  6186 E Zygote  : v2\r\r\n05-03 17:02:10.789  6053  6053 E SPPClientService: [SystemStateMoniter] Action Name : android.net.conn.CONNECTIVITY_CHANGE\r\r\n05-03 17:02:10.789  6053  6053 E SPPClientService: [SystemStateMoniter] Current Time : 792928340\r\r\n05-03 17:02:10.789  6053  6053 E SPPClientService: [SystemStateMoniter] No Connect : false\r\r\n05-03 17:02:11.409  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 35ms lastUpdatedAfter : 60120 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 17:02:16.109  6226  6226 E Zygote  : v2\r\r\n05-03 17:02:16.259  6226  6226 E TranscodeReceiver: onReceive : android.intent.action.CHECK_SIOP_LEVEL\r\r\n05-03 17:02:26.449  3746  6159 E WakeLock: release without a matched acquire!\r\r\n05-03 17:02:26.799  1572  3473 E Watchdog: !@Sync 26429 [05-03 17:02:26.816]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 239,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 240,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 241,
                    "value": "# | Outbound Passangers |"
                  },
                  {
                    "line": 242,
                    "value": "# | Outbound Deptarture Time |"
                  },
                  {
                    "line": 243,
                    "value": "# | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 244
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 245
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52658536058,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 259,
        "name": "Book the mobile ticket through all available entry points using PayPal payment",
        "description": "Entry points : 923,924,921",
        "id": "mobile-booking-for-registered-user;book-the-mobile-ticket-through-all-available-entry-points-using-paypal-payment;;2",
        "after": [
          {
            "result": {
              "duration": 12558121706,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 18903601173,
              "status": "passed"
            },
            "line": 210,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4406088262,
              "status": "passed"
            },
            "line": 211,
            "name": "I am on the \"Home\" page",
            "match": {
              "arguments": [
                {
                  "val": "Home",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3784462370,
              "status": "passed"
            },
            "line": 212,
            "name": "I click on the \"Buy Tickets\" button",
            "match": {
              "arguments": [
                {
                  "val": "Buy Tickets",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 87098257797,
              "status": "passed"
            },
            "line": 213,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              4,
              5,
              6,
              7
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Out Time",
                  "Adults"
                ],
                "line": 214
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "single",
                  "+1 hours",
                  "",
                  "1"
                ],
                "line": 215
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3663081407,
              "status": "passed"
            },
            "line": 216,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45541060444,
              "status": "passed"
            },
            "line": 217,
            "name": "proceed search results to the payment screen",
            "match": {
              "location": "JourneySearchActions.proceedFromSearchResultsToPayment()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 362695193,
              "status": "passed"
            },
            "line": 218,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16665043803,
              "status": "passed"
            },
            "line": 219,
            "name": "the \"Mobile ticket\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile ticket",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7003243206,
              "status": "passed"
            },
            "comments": [
              {
                "line": 220,
                "value": "#And I note following fields values:"
              },
              {
                "line": 221,
                "value": "#  | Field               | As                  |"
              },
              {
                "line": 222,
                "value": "# | Outbound Ticket         | Outbound Ticket Type     |"
              },
              {
                "line": 223,
                "value": "#  | Outbound Passangers | Outbound Passangers |"
              },
              {
                "line": 224,
                "value": "# | Outbound Departure Time | Outbound Deptarture Time |"
              },
              {
                "line": 225,
                "value": "# | Outbound Arrival Time   | Outbound Arrival Time    |"
              }
            ],
            "line": 226,
            "name": "the \"Login\" button is visible",
            "match": {
              "arguments": [
                {
                  "val": "Login",
                  "offset": 5
                }
              ],
              "location": "FieldActions.theButtonIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6517353717,
              "status": "passed"
            },
            "line": 227,
            "name": "I go to the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 707001869,
              "status": "passed"
            },
            "line": 228,
            "name": "I should see the \"Registration\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Registration",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 41515141802,
              "status": "passed"
            },
            "line": 229,
            "name": "I register user with the following criteria:",
            "match": {
              "location": "RegistrationActions.registerUserWithTheCriteria(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "Surname"
                ],
                "line": 230
              },
              {
                "cells": [
                  "Zenon",
                  "Kopyto"
                ],
                "line": 231
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25257168403,
              "status": "passed"
            },
            "comments": [
              {
                "line": 232,
                "value": "#Then I should see the \"Available Cards\" screen"
              }
            ],
            "line": 233,
            "name": "I select Pay by PayPal method",
            "match": {
              "arguments": [
                {
                  "val": "PayPal",
                  "offset": 16
                }
              ],
              "location": "PaymentActions.selectPaymentMethod(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 489001994,
              "status": "passed"
            },
            "line": 234,
            "name": "I should see the \"Paypal Login\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Paypal Login",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1073312115,
              "status": "passed"
            },
            "line": 235,
            "name": "I login into PayPal",
            "match": {
              "location": "PayPalActions.loginIntoPayPal()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9168021557,
              "status": "passed"
            },
            "line": 236,
            "name": "I proceed to booking confirmation",
            "match": {
              "location": "BookingActions.proceeedToBookingConfirmation()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 490840711,
              "status": "passed"
            },
            "line": 237,
            "name": "I should see the \"Booking Confirmation\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Booking Confirmation",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6060774870,
              "status": "passed"
            },
            "line": 238,
            "name": "I should see the \"My Tickets\" screen",
            "match": {
              "arguments": [
                {
                  "val": "My Tickets",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1035798403,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 239,
            "name": "the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              2,
              3
            ],
            "rows": [
              {
                "comments": [
                  {
                    "line": 240,
                    "value": "# | Outbound Ticket Type     |"
                  },
                  {
                    "line": 241,
                    "value": "# | Outbound Passangers |"
                  },
                  {
                    "line": 242,
                    "value": "# | Outbound Deptarture Time |"
                  },
                  {
                    "line": 243,
                    "value": "# | Outbound Arrival Time    |"
                  }
                ],
                "cells": [
                  "London Euston"
                ],
                "line": 244
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 245
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@android"
          }
        ]
      }
    ],
    "name": "Mobile Booking for registered user",
    "description": "As a user I want to be able to buy mobile tickets (all entry points \u0026 delivery option)",
    "id": "mobile-booking-for-registered-user",
    "keyword": "Feature",
    "uri": "booking/RegisteredMobileBooking.feature",
    "tags": [
      {
        "line": 1,
        "name": "@android"
      },
      {
        "line": 1,
        "name": "@android_01"
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 56101839636,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 60,
        "name": "Journey search from Me screen should show consistent results",
        "description": "",
        "id": "walk-up-booking;journey-search-from-me-screen-should-show-consistent-results;;2",
        "after": [
          {
            "result": {
              "duration": 11562491528,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 17929561133,
              "status": "passed"
            },
            "line": 6,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13513507236,
              "status": "passed"
            },
            "line": 7,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 101860426570,
              "status": "passed"
            },
            "line": 8,
            "name": "I search for journey using the following criteria:",
            "match": {
              "location": "JourneySearchActions.searchJourneyByCriteria(DataTable)"
            },
            "matchedColumns": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8
            ],
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Return Date",
                  "Adults",
                  "Children",
                  "Railcards"
                ],
                "line": 9
              },
              {
                "cells": [
                  "SBE",
                  "HGT",
                  "",
                  "Single",
                  "tomorrow",
                  "",
                  "1",
                  "1",
                  "Senior Railcard"
                ],
                "line": 10
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3366361285,
              "status": "passed"
            },
            "line": 11,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6594817730,
              "status": "passed"
            },
            "line": 12,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9069213416,
              "status": "passed"
            },
            "line": 13,
            "name": "I go to the \"Recents and Favourites\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Recents and Favourites",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 413570859,
              "status": "passed"
            },
            "line": 14,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "matchedColumns": [
              10,
              11,
              12
            ],
            "rows": [
              {
                "cells": [
                  "Starbeck"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Harrogate"
                ],
                "line": 16
              },
              {
                "cells": [
                  ""
                ],
                "line": 17
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1598902927,
              "status": "passed"
            },
            "line": 18,
            "name": "I click on the \"Harrogate\" text",
            "match": {
              "arguments": [
                {
                  "val": "Harrogate",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "matchedColumns": [
              13
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9314863712,
              "status": "passed"
            },
            "line": 19,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 363217725,
              "status": "passed"
            },
            "line": 20,
            "name": "the \"Single from\" label is shown",
            "match": {
              "arguments": [
                {
                  "val": "Single from",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 187828607,
              "status": "passed"
            },
            "line": 21,
            "name": "the \"Edit\" label is shown",
            "match": {
              "arguments": [
                {
                  "val": "Edit",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 762106124,
              "status": "passed"
            },
            "comments": [
              {
                "line": 22,
                "value": "#And the \"Passengers\" field has \"1 Adult\" text"
              },
              {
                "line": 23,
                "value": "#And the \"Railcards\" field has \"\u003cRailcard Number\u003e\" text"
              }
            ],
            "line": 24,
            "name": "the \"Journey Changes\" element on row No.1 of the \"Search Results\" table contains the \"Direct\" text",
            "match": {
              "arguments": [
                {
                  "val": "Journey Changes",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 40
                },
                {
                  "val": "Search Results",
                  "offset": 50
                },
                {
                  "val": "Direct",
                  "offset": 86
                }
              ],
              "location": "ListActions.rowElementContainsText(String,int,String,String)"
            },
            "matchedColumns": [
              14
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 423338012,
              "status": "passed"
            },
            "line": 25,
            "name": "the \"Departure Status\" element on row No.1 of the \"Search Results\" table contains one of the following labels:",
            "match": {
              "arguments": [
                {
                  "val": "Departure Status",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 41
                },
                {
                  "val": "Search Results",
                  "offset": 51
                }
              ],
              "location": "ListActions.rowElementContainsOneOfTheLabels(String,int,String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "On time"
                ],
                "line": 26
              },
              {
                "cells": [
                  "On Time"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Delayed"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Departed"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Exp"
                ],
                "line": 30
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 689990835,
              "status": "passed"
            },
            "line": 31,
            "name": "the \"Arrival Status\" element on row No.1 of the \"Search Results\" table contains one of the following labels:",
            "match": {
              "arguments": [
                {
                  "val": "Arrival Status",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 39
                },
                {
                  "val": "Search Results",
                  "offset": 49
                }
              ],
              "location": "ListActions.rowElementContainsOneOfTheLabels(String,int,String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "On time"
                ],
                "line": 32
              },
              {
                "cells": [
                  "On Time"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Delayed"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Exp"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 558284541,
              "status": "passed"
            },
            "line": 36,
            "name": "the \"Platform\" element value on row No.1 of the \"Search Results\" table matches one of the following patterns:",
            "match": {
              "arguments": [
                {
                  "val": "Platform",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 39
                },
                {
                  "val": "Search Results",
                  "offset": 49
                }
              ],
              "location": "ListActions.rowElementShouldMatchPatternList(String,int,String,String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Plat\\.(\\d+)"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Plat\\.-"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Plat\\. (\\d+)"
                ],
                "line": 39
              },
              {
                "cells": [
                  "-"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1691245180,
              "status": "passed"
            },
            "line": 41,
            "name": "the \"Journey Duration\" element on row No.1 of the \"Search Results\" table is calculated using the following formula:",
            "match": {
              "arguments": [
                {
                  "val": "Journey Duration",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 41
                },
                {
                  "val": "Search Results",
                  "offset": 51
                }
              ],
              "location": "CalculationActions.rowElementValueMatchesFormula(String,int,String,String)"
            },
            "keyword": "And ",
            "doc_string": {
              "content_type": "",
              "line": 42,
              "value": "\"Arrival Time\" - \"Departure Time\""
            }
          },
          {
            "result": {
              "duration": 1980809456,
              "status": "passed"
            },
            "line": 45,
            "name": "I swipe screen top till the end",
            "match": {
              "arguments": [
                {
                  "val": "top",
                  "offset": 15
                },
                {
                  "val": "till the end",
                  "offset": 19
                }
              ],
              "location": "ScrollActions.swipeScreen(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1912778826,
              "status": "passed"
            },
            "line": 46,
            "name": "click on the \"Earlier Trains\" button",
            "match": {
              "arguments": [
                {
                  "val": "Earlier Trains",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2518040434,
              "status": "passed"
            },
            "line": 47,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 292255246,
              "status": "passed"
            },
            "line": 48,
            "name": "the \"Search Results\" list is not empty",
            "match": {
              "arguments": [
                {
                  "val": "Search Results",
                  "offset": 5
                }
              ],
              "location": "ListActions.listIsNotEmpty(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 167257339,
              "status": "passed"
            },
            "line": 49,
            "name": "the \"Not available\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Not available",
                  "offset": 5
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5453501447,
              "status": "passed"
            },
            "line": 50,
            "name": "I swipe screen bottom till the end",
            "match": {
              "arguments": [
                {
                  "val": "bottom",
                  "offset": 15
                },
                {
                  "val": "till the end",
                  "offset": 22
                }
              ],
              "location": "ScrollActions.swipeScreen(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 192860032,
              "status": "passed"
            },
            "line": 51,
            "name": "note the current page content as \"Original Content\"",
            "match": {
              "arguments": [
                {
                  "val": "Original Content",
                  "offset": 34
                }
              ],
              "location": "PageActions.notePageContent(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1554279006,
              "status": "passed"
            },
            "line": 52,
            "name": "click on the \"Later Trains\" button",
            "match": {
              "arguments": [
                {
                  "val": "Later Trains",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4262170393,
              "status": "passed"
            },
            "line": 53,
            "name": "swipe screen top till the end",
            "match": {
              "arguments": [
                {
                  "val": "top",
                  "offset": 13
                },
                {
                  "val": "till the end",
                  "offset": 17
                }
              ],
              "location": "ScrollActions.swipeScreen(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 985404223,
              "status": "passed"
            },
            "line": 54,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 286769070,
              "status": "passed"
            },
            "line": 55,
            "name": "the \"Search Results\" list is not empty",
            "match": {
              "arguments": [
                {
                  "val": "Search Results",
                  "offset": 5
                }
              ],
              "location": "ListActions.listIsNotEmpty(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 210985259,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 56,
            "name": "the current page content is different from \"Original Content\"",
            "match": {
              "arguments": [
                {
                  "val": "Original Content",
                  "offset": 44
                }
              ],
              "location": "PageActions.comparePageContent(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 1,
            "name": "@search"
          },
          {
            "line": 1,
            "name": "@payment"
          },
          {
            "line": 4,
            "name": "@android_01"
          },
          {
            "line": 1,
            "name": "@search_results"
          },
          {
            "line": 4,
            "name": "@android"
          },
          {
            "line": 4,
            "name": "@android_live"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 61,
            "value": "#      | London | Manchester | ~Aberdeen  | Return      | tomorrow | +2 days     | 3      | 0        |                 | 0 | London (Any)  | Manchester            | Aberdeen   | Aberdeen       | Direct    |"
          },
          {
            "line": 62,
            "value": "#      | NEH    | ESD        | Grove Park | Open Return | tomorrow |             | 3      | 2        |                 | 0 | New Eltham    | Elmstead Woods        | Grove Park | New Eltham     | 1 change  |"
          },
          {
            "line": 64,
            "value": "# What if first leg isn\u0027t train journey (e.g. walk) STP \u003e YRK"
          },
          {
            "line": 65,
            "value": "# Add mobile ticket icon verification"
          },
          {
            "line": 66,
            "value": "# After remove railcard from Journey Search it shouldn\u0027t appear in Walkup search"
          },
          {
            "line": 67,
            "value": "# Add scenario for non-existing journey: ZFD -\u003e CTK via Aberdeen. Add check for Refresh button"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 52807145368,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "User searches for a walkup journey with via station",
        "description": "",
        "id": "walk-up-booking;user-searches-for-a-walkup-journey-with-via-station",
        "after": [
          {
            "result": {
              "duration": 11219947957,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 18312473299,
              "status": "passed"
            },
            "line": 72,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13082328822,
              "status": "passed"
            },
            "line": 73,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 109607352275,
              "status": "passed"
            },
            "line": 74,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Via",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 75
              },
              {
                "cells": [
                  "EUS",
                  "LIV",
                  "CTR",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 76
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11356995684,
              "status": "passed"
            },
            "line": 77,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8902652516,
              "status": "passed"
            },
            "line": 78,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 505495087,
              "status": "passed"
            },
            "line": 79,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "London Euston"
                ],
                "line": 80
              },
              {
                "cells": [
                  "Chester"
                ],
                "line": 81
              },
              {
                "cells": [
                  "Liverpool Lime Street"
                ],
                "line": 82
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1854622013,
              "status": "passed"
            },
            "line": 83,
            "name": "I click on the \"Chester\" text",
            "match": {
              "arguments": [
                {
                  "val": "Chester",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11878425147,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 84,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 70,
            "name": "@android"
          },
          {
            "line": 70,
            "name": "@android_live"
          },
          {
            "line": 70,
            "name": "@android_01"
          }
        ]
      },
      {
        "comments": [
          {
            "line": 85,
            "value": "# TODO: Add label verifications"
          }
        ],
        "before": [
          {
            "result": {
              "duration": 50146036349,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "User searches for a walkup journey with group stations",
        "description": "",
        "id": "walk-up-booking;user-searches-for-a-walkup-journey-with-group-stations",
        "after": [
          {
            "result": {
              "duration": 11150449108,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20055298145,
              "status": "passed"
            },
            "line": 90,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13421967818,
              "status": "passed"
            },
            "line": 91,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85118957065,
              "status": "passed"
            },
            "line": 92,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 93
              },
              {
                "cells": [
                  "182",
                  "MAN",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 94
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3426418923,
              "status": "passed"
            },
            "comments": [
              {
                "line": 95,
                "value": "# Change to London \u003e Birmingham"
              }
            ],
            "line": 96,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7580605953,
              "status": "passed"
            },
            "line": 97,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8023409682,
              "status": "passed"
            },
            "line": 98,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 333242779,
              "status": "passed"
            },
            "line": 99,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "London"
                ],
                "line": 100
              },
              {
                "cells": [
                  "Manchester"
                ],
                "line": 101
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1888471794,
              "status": "passed"
            },
            "line": 102,
            "name": "I click on the \"London\" text",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11876282902,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 103,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 88,
            "name": "@android"
          },
          {
            "line": 88,
            "name": "@android_live"
          },
          {
            "line": 88,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50585117817,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 270,
        "name": "User swaps journey on Me screen",
        "description": "",
        "id": "walk-up-booking;user-swaps-journey-on-me-screen",
        "after": [
          {
            "result": {
              "duration": 11091033629,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19564183072,
              "status": "passed"
            },
            "line": 271,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13262716419,
              "status": "passed"
            },
            "line": 272,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 84279392870,
              "status": "passed"
            },
            "line": 273,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 274
              },
              {
                "cells": [
                  "OTF",
                  "SEV",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 275
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3494347749,
              "status": "passed"
            },
            "line": 276,
            "name": "accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6834919201,
              "status": "passed"
            },
            "line": 277,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8511440065,
              "status": "passed"
            },
            "line": 278,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 920374030,
              "status": "passed"
            },
            "line": 279,
            "name": "I should see the \"Origin Station\" field contains \"Otford\" text",
            "match": {
              "arguments": [
                {
                  "val": "Origin Station",
                  "offset": 18
                },
                {
                  "val": "contains",
                  "offset": 40
                },
                {
                  "val": "Otford",
                  "offset": 50
                }
              ],
              "location": "FieldActions.fieldShouldContainText(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 925970923,
              "status": "passed"
            },
            "line": 280,
            "name": "I should see the \"Destination Station\" field contains \"Sevenoaks\" text",
            "match": {
              "arguments": [
                {
                  "val": "Destination Station",
                  "offset": 18
                },
                {
                  "val": "contains",
                  "offset": 45
                },
                {
                  "val": "Sevenoaks",
                  "offset": 55
                }
              ],
              "location": "FieldActions.fieldShouldContainText(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 791026824,
              "status": "passed"
            },
            "line": 281,
            "name": "click on the \"Switch Stations\" button",
            "match": {
              "arguments": [
                {
                  "val": "Switch Stations",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1324222022,
              "status": "passed"
            },
            "line": 282,
            "name": "I should see the \"Origin Station\" field contains \"Sevenoaks\" text",
            "match": {
              "arguments": [
                {
                  "val": "Origin Station",
                  "offset": 18
                },
                {
                  "val": "contains",
                  "offset": 40
                },
                {
                  "val": "Sevenoaks",
                  "offset": 50
                }
              ],
              "location": "FieldActions.fieldShouldContainText(String,String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 377292050,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 283,
            "name": "I should see the \"Destination Station\" field contains \"Otford\" text",
            "match": {
              "arguments": [
                {
                  "val": "Destination Station",
                  "offset": 18
                },
                {
                  "val": "contains",
                  "offset": 45
                },
                {
                  "val": "Otford",
                  "offset": 55
                }
              ],
              "location": "FieldActions.fieldShouldContainText(String,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 269,
            "name": "@android"
          },
          {
            "line": 269,
            "name": "@android_live"
          },
          {
            "line": 269,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50818393433,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 306,
        "name": "User should be able to pin and unpin a journey on Me screen on Android",
        "description": "",
        "id": "walk-up-booking;user-should-be-able-to-pin-and-unpin-a-journey-on-me-screen-on-android",
        "after": [
          {
            "result": {
              "duration": 11096115011,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19574057972,
              "status": "passed"
            },
            "line": 307,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13496485942,
              "status": "passed"
            },
            "line": 308,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85408278843,
              "status": "passed"
            },
            "line": 309,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 310
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 311
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3670181084,
              "status": "passed"
            },
            "line": 312,
            "name": "I accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8833922475,
              "status": "passed"
            },
            "line": 313,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8556729099,
              "status": "passed"
            },
            "line": 314,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 262309735,
              "status": "passed"
            },
            "line": 315,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "London Euston"
                ],
                "line": 316
              },
              {
                "cells": [
                  "Manchester Piccadilly"
                ],
                "line": 317
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 529088938,
              "status": "passed"
            },
            "line": 318,
            "name": "I should see the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1430491428,
              "status": "passed"
            },
            "line": 319,
            "name": "click on the \"Pin Journey\" button",
            "match": {
              "arguments": [
                {
                  "val": "Pin Journey",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1426657370,
              "status": "passed"
            },
            "line": 320,
            "name": "I should see the \"Pin Journey\" field is pinned",
            "match": {
              "arguments": [
                {
                  "val": "Pin Journey",
                  "offset": 18
                },
                {
                  "val": "is",
                  "offset": 37
                }
              ],
              "location": "FieldActions.fieldShouldBeChecked(String,String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 939913738,
              "status": "passed"
            },
            "line": 321,
            "name": "click on the \"Pin Journey\" button",
            "match": {
              "arguments": [
                {
                  "val": "Pin Journey",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1435170718,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 322,
            "name": "I should see the \"Pin Journey\" field is not pinned",
            "match": {
              "arguments": [
                {
                  "val": "Pin Journey",
                  "offset": 18
                },
                {
                  "val": "is not",
                  "offset": 37
                }
              ],
              "location": "FieldActions.fieldShouldBeChecked(String,String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 305,
            "name": "@android"
          },
          {
            "line": 305,
            "name": "@android_live"
          },
          {
            "line": 305,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50617760238,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 325,
        "name": "Users should see route restrictions in the select ticket screen",
        "description": "",
        "id": "walk-up-booking;users-should-see-route-restrictions-in-the-select-ticket-screen",
        "after": [
          {
            "result": {
              "duration": 11164060850,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 20152981292,
              "status": "passed"
            },
            "line": 326,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13757782208,
              "status": "passed"
            },
            "line": 327,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83664783483,
              "status": "passed"
            },
            "line": 328,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 329
              },
              {
                "cells": [
                  "OTF",
                  "182",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 330
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3087581951,
              "status": "passed"
            },
            "line": 331,
            "name": "I accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6444359171,
              "status": "passed"
            },
            "line": 332,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7759296065,
              "status": "passed"
            },
            "line": 333,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1258152977,
              "status": "passed"
            },
            "line": 334,
            "name": "I click on the \"London\" text",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8303672897,
              "status": "passed"
            },
            "line": 335,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8093200176,
              "status": "passed"
            },
            "line": 336,
            "name": "I select first available train",
            "match": {
              "location": "JourneySearchActions.selectFirstAvailableTrain()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 858819819,
              "status": "passed"
            },
            "line": 337,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 318572201,
              "status": "passed"
            },
            "line": 338,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Not valid for travel on the"
                ],
                "line": 339
              },
              {
                "cells": [
                  "but valid on all other permitted routes between"
                ],
                "line": 340
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1021035741,
              "status": "passed"
            },
            "line": 341,
            "name": "I click on the \"More ticket options\" element",
            "match": {
              "arguments": [
                {
                  "val": "More ticket options",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1540881136,
              "status": "passed"
            },
            "line": 342,
            "name": "I should see the \"Select Ticket\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Select Ticket",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 294102604,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 343,
            "name": "I should see the following labels are shown:",
            "match": {
              "location": "LabelActions.labelsAreShown(String\u003e)"
            },
            "rows": [
              {
                "cells": [
                  "Not valid for travel on the"
                ],
                "line": 344
              },
              {
                "cells": [
                  "but valid on all other permitted routes between"
                ],
                "line": 345
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 324,
            "name": "@android"
          },
          {
            "line": 324,
            "name": "@android_live"
          },
          {
            "line": 324,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 50406749865,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 348,
        "name": "Users should be able to view ticket info from the Select Ticket screen",
        "description": "",
        "id": "walk-up-booking;users-should-be-able-to-view-ticket-info-from-the-select-ticket-screen",
        "after": [
          {
            "result": {
              "duration": 12011424402,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 19826413414,
              "status": "passed"
            },
            "line": 349,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13239728273,
              "status": "passed"
            },
            "line": 350,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 86396965969,
              "status": "passed"
            },
            "line": 351,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 352
              },
              {
                "cells": [
                  "OTF",
                  "182",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 353
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3453895168,
              "status": "passed"
            },
            "line": 354,
            "name": "I accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6690339729,
              "status": "passed"
            },
            "line": 355,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8402261495,
              "status": "passed"
            },
            "line": 356,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1772262137,
              "status": "passed"
            },
            "line": 357,
            "name": "I click on the \"Otford\" text",
            "match": {
              "arguments": [
                {
                  "val": "Otford",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8462671537,
              "status": "passed"
            },
            "line": 358,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 91671770012,
              "error_message": "java.lang.AssertionError: Unable to find element with locator: \u0027By.xpath: (//*[contains(local-name(), \u0027RecyclerView\u0027) or contains(local-name(), \u0027ListView\u0027)]//android.widget.LinearLayout[contains(@resource-id,\u0027fares_list_item_container\u0027) or contains(@resource-id,\u0027dialog_topcion_content\u0027)])[1]//android.widget.TextView[contains(@resource-id, \u0027id/train_search_results_price\u0027) or contains(@resource-id, \u0027id/fares_list_trip_fare\u0027)]\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getElement(Control.java:84)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getRect(Control.java:305)\r\n\tat com.thetrainline.android.pages.search.JourneySearchResultsPage.selectFirstAvailableTicket(JourneySearchResultsPage.java:160)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:85)\r\n\tat ✽.When I select first available train(booking/WalkUpBooking.feature:359)\r\n",
              "status": "failed"
            },
            "line": 359,
            "name": "I select first available train",
            "match": {
              "location": "JourneySearchActions.selectFirstAvailableTrain()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 360,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 361,
            "name": "I click on the \"More ticket options\" element",
            "match": {
              "arguments": [
                {
                  "val": "More ticket options",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 362,
            "name": "I should see the \"Select Ticket\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Select Ticket",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 363,
            "name": "I click on the \"Ticket Info\" button",
            "match": {
              "arguments": [
                {
                  "val": "Ticket Info",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 17:30:56.849  1572  3473 E Watchdog: !@Sync 26486 [05-03 17:30:56.861]\r\r\n05-03 17:30:57.609  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1184, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 17:30:57.609  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1185, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 17:31:12.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:31:12.759   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:31:26.849  1572  3473 E Watchdog: !@Sync 26487 [05-03 17:31:26.862]\r\r\n05-03 17:31:45.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:31:45.379   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:31:46.809   388  1992 E FrameworkListener: read() failed (Connection reset by peer)\r\r\n05-03 17:31:46.809   388  1992 E FrameworkListener: read() failed (Connection reset by peer)\r\r\n05-03 17:31:56.849  1572  3473 E Watchdog: !@Sync 26488 [05-03 17:31:56.862]\r\r\n05-03 17:32:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:32:18.639   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:32:19.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:32:19.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:32:26.849  1572  3473 E Watchdog: !@Sync 26489 [05-03 17:32:26.863]\r\r\n05-03 17:32:42.389  1572  3648 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:32:42.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:32:42.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:32:43.819   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:32:43.819   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:32:50.689  1572  4015 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:32:56.849  1572  3473 E Watchdog: !@Sync 26490 [05-03 17:32:56.864]\r\r\n05-03 17:33:05.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:33:05.679   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:33:09.099  1572  1595 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:33:10.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:33:10.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:33:26.849  1572  3473 E Watchdog: !@Sync 26491 [05-03 17:33:26.865]\r\r\n05-03 17:33:56.689 18460 18460 E ActivityThread: Failed to find provider info for flipboard.auth.internal.debug\r\r\n05-03 17:33:56.689 18460 18460 E ActivityThread: Failed to find provider info for flipboard.auth.internal\r\r\n05-03 17:33:56.849  1572  3473 E Watchdog: !@Sync 26492 [05-03 17:33:56.865]\r\r\n05-03 17:33:58.159 18476 18543 E ActivityThread: Failed to find provider info for com.facebook.katana.provider.AttributionIdProvider\r\r\n05-03 17:34:26.849  1572  3473 E Watchdog: !@Sync 26493 [05-03 17:34:26.866]\r\r\n05-03 17:34:39.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:34:39.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:34:56.859  1572  3473 E Watchdog: !@Sync 26494 [05-03 17:34:56.867]\r\r\n--------- beginning of main\r\r\n05-03 17:35:05.769   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:35:05.769   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:35:14.949  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 26ms lastUpdatedAfter : 60124 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : Settings request failed.\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException: java.net.SocketTimeoutException: failed to connect to settings.crashlytics.com/23.21.176.181 (port 443) after 10000ms\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.network.HttpRequest.b(HttpRequest.java:1355)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.settings.l.a(DefaultSettingsSpiCall.java:2108)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.settings.j.a(DefaultSettingsController.java:80)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.settings.j.a(DefaultSettingsController.java:64)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.settings.q.b(Settings.java:155)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.l.f(Onboarding.java:126)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.l.e(Onboarding.java:99)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.l.d(Onboarding.java:45)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.g.doInBackground(InitializationTask.java:1063)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.concurrency.AsyncTask$2.call(AsyncTask.java:311)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:423)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.util.concurrent.FutureTask.run(FutureTask.java:237)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.lang.Thread.run(Thread.java:818)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : Caused by: java.net.SocketTimeoutException: failed to connect to settings.crashlytics.com/23.21.176.181 (port 443) after 10000ms\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat libcore.io.IoBridge.connectErrno(IoBridge.java:169)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat libcore.io.IoBridge.connect(IoBridge.java:122)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:183)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.net.PlainSocketImpl.connect(PlainSocketImpl.java:452)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat java.net.Socket.connect(Socket.java:884)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.Platform.connectSocket(Platform.java:117)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.http.SocketConnector.connectRawSocket(SocketConnector.java:438)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.http.SocketConnector.connectTls(SocketConnector.java:178)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.Connection.connect(Connection.java:1324)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.Connection.connectAndSetOwner(Connection.java:1412)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.OkHttpClient$1.connectAndSetOwner(OkHttpClient.java:131)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.http.HttpEngine.nextConnection(HttpEngine.java:485)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.http.HttpEngine.connect(HttpEngine.java:466)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.http.HttpEngine.sendRequest(HttpEngine.java:372)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:468)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:410)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:532)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:105)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:25)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.google.firebase.perf.network.e.h(Unknown Source)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat com.google.firebase.perf.network.d.getResponseCode(Unknown Source)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \tat io.fabric.sdk.android.services.network.HttpRequest.b(HttpRequest.java:1353)\r\r\n05-03 17:35:17.589 18476 18491 E Fabric  : \t... 15 more\r\r\n05-03 17:35:18.629 18476 18641 E File    : fail readDirectory() errno\u003d2\r\r\n05-03 17:35:18.629 18476 18641 E File    : fail readDirectory() errno\u003d2\r\r\n05-03 17:35:20.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:35:20.839   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:35:26.859  1572  3473 E Watchdog: !@Sync 26495 [05-03 17:35:26.869]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 364,
            "name": "I should see the \"Ticket Info\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Ticket Info",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 347,
            "name": "@android"
          },
          {
            "line": 347,
            "name": "@android_live"
          },
          {
            "line": 347,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 53141882561,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 386,
        "name": "User should see the Cheapest label and mobile icon on the Select Ticket screen",
        "description": "",
        "id": "walk-up-booking;user-should-see-the-cheapest-label-and-mobile-icon-on-the-select-ticket-screen",
        "after": [
          {
            "result": {
              "duration": 11931358533,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15933952017,
              "status": "passed"
            },
            "line": 387,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13081553531,
              "status": "passed"
            },
            "line": 388,
            "name": "I am on the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85692846800,
              "status": "passed"
            },
            "line": 389,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 390
              },
              {
                "cells": [
                  "OTF",
                  "182",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 391
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3228838014,
              "status": "passed"
            },
            "line": 392,
            "name": "I accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6677666382,
              "status": "passed"
            },
            "line": 393,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8116551260,
              "status": "passed"
            },
            "line": 394,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1262405330,
              "status": "passed"
            },
            "line": 395,
            "name": "I click on the \"Otford\" text",
            "match": {
              "arguments": [
                {
                  "val": "Otford",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8253802328,
              "status": "passed"
            },
            "line": 396,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 92014321684,
              "error_message": "java.lang.AssertionError: Unable to find element with locator: \u0027By.xpath: (//*[contains(local-name(), \u0027RecyclerView\u0027) or contains(local-name(), \u0027ListView\u0027)]//android.widget.LinearLayout[contains(@resource-id,\u0027fares_list_item_container\u0027) or contains(@resource-id,\u0027dialog_topcion_content\u0027)])[1]//android.widget.TextView[contains(@resource-id, \u0027id/train_search_results_price\u0027) or contains(@resource-id, \u0027id/fares_list_trip_fare\u0027)]\u0027\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getElement(Control.java:84)\r\n\tat com.thetrainline.common.lib.ui.controls.Control.getRect(Control.java:305)\r\n\tat com.thetrainline.android.pages.search.JourneySearchResultsPage.selectFirstAvailableTicket(JourneySearchResultsPage.java:160)\r\n\tat com.thetrainline.common.steps.JourneySearchActions.selectFirstAvailableTrain(JourneySearchActions.java:85)\r\n\tat ✽.When I select first available train(booking/WalkUpBooking.feature:397)\r\n",
              "status": "failed"
            },
            "line": 397,
            "name": "I select first available train",
            "match": {
              "location": "JourneySearchActions.selectFirstAvailableTrain()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 398,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 399,
            "name": "I click on the \"More ticket options\" element",
            "match": {
              "arguments": [
                {
                  "val": "More ticket options",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 400,
            "name": "I should see the \"Select Ticket\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Select Ticket",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "output": [
              "Error Log:--------- beginning of system\r\r\n05-03 17:35:56.859  1572  3473 E Watchdog: !@Sync 26496 [05-03 17:35:56.870]\r\r\n05-03 17:36:15.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:36:15.239   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:36:20.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:36:20.489   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:36:22.069  1572  1834 E MARsDBManager: updateDBAll : begin --size 2\r\r\n05-03 17:36:22.089  1572  1834 E MARsDBManager: updateDBAll : end\r\r\n05-03 17:36:26.859  1572  3473 E Watchdog: !@Sync 26497 [05-03 17:36:26.871]\r\r\n05-03 17:36:35.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:36:35.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:36:46.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:36:46.109   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:36:56.859  1572  3473 E Watchdog: !@Sync 26498 [05-03 17:36:56.871]\r\r\n05-03 17:37:26.859  1572  3473 E Watchdog: !@Sync 26499 [05-03 17:37:26.872]\r\r\n05-03 17:37:38.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:37:38.519   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:37:41.839  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:37:43.539   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:37:43.539   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:37:50.549  1572  4004 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:37:56.859  1572  3473 E Watchdog: !@Sync 26500 [05-03 17:37:56.873]\r\r\n05-03 17:38:09.349  1572  4013 E InputMethodManagerService: Perflock object null\r\r\n05-03 17:38:26.859  1572  3473 E Watchdog: !@Sync 26501 [05-03 17:38:26.874]\r\r\n05-03 17:38:39.729 19832 19832 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 17:38:39.729 19832 19832 E SmartFaceService: mScrollEnabled:false mPauseEnabled:false mStayEnabled:true mRotationEnabled:false, (false,false)\r\r\n05-03 17:38:39.729 19832 19832 E Logger  : New Logger Instance\r\r\n05-03 17:38:39.739 19832 19832 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 17:38:39.739 19832 19832 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 17:38:39.739 19832 19832 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 17:38:39.739 19832 19832 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 17:38:39.749 19832 19832 E SmartFaceService: from registerCoverManager -\u003e mClearCoverOpened: true\r\r\n05-03 17:38:39.749 19832 19832 E SmartFaceService: SmartFaceService Started.\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: Update service state according to cover state: true\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: mActiveServiceType: 100\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: mLightIntensityEnough: true mLux: 0.0\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: Service Type to Worker: 0\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: Last Active clients:0 Current Active clients: 0\r\r\n05-03 17:38:39.749 19832 19844 E SmartFaceService: Last Smart Pause clients: 0 Current Smart Pause clients: 0\r\r\n05-03 17:38:56.859  1572  3473 E Watchdog: !@Sync 26502 [05-03 17:38:56.874]\r\r\n05-03 17:39:19.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:39:19.999   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:39:25.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:39:25.009   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:39:26.859  1572  3473 E Watchdog: !@Sync 26503 [05-03 17:39:26.875]\r\r\n05-03 17:39:45.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:39:45.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:39:47.419   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:39:47.419   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:39:49.439  1572  2289 E ConnectivityService: RemoteException caught trying to send a callback msg for NetworkRequest [ id\u003d1186, legacyType\u003d-1, [ Capabilities: INTERNET\u0026NOT_RESTRICTED\u0026TRUSTED] ]\r\r\n05-03 17:39:56.859  1572  3473 E Watchdog: !@Sync 26504 [05-03 17:39:56.876]\r\r\n--------- beginning of main\r\r\n05-03 17:39:58.429 20008 20028 E Finsky  : [56348] com.google.android.finsky.ar.c.a(34): Unable to build selector: /storage/emulated/0/Download/marketenvs.csv: open failed: ENOENT (No such file or directory)\r\r\n05-03 17:39:58.989 20008 20008 E Finsky  : [1] com.google.android.finsky.wear.t.a(3): onConnectionFailed: ConnectionResult{statusCode\u003dAPI_UNAVAILABLE, resolution\u003dnull, message\u003dnull}\r\r\n05-03 17:40:15.529  2671  2716 E ContactsProvider_EventLog: Flush buffer to file cnt : 11 size : 3Kb duration : 22ms lastUpdatedAfter : 60112 ms mFlush_time_threasold : 2000 mCurrentSize : 1848\r\r\n05-03 17:40:20.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027LABEL\u0027 not found\r\r\n05-03 17:40:20.079   388  1988 E NetlinkEvent: NetlinkEvent::FindParam(): Parameter \u0027UID\u0027 not found\r\r\n05-03 17:40:26.869  1572  3473 E Watchdog: !@Sync 26505 [05-03 17:40:26.877]\r\r\n",
              "Device: Samsung Galaxy A3"
            ],
            "line": 401,
            "name": "I should see the \"Cheapest\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Cheapest",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 385,
            "name": "@android"
          },
          {
            "line": 385,
            "name": "@android_live"
          },
          {
            "line": 385,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 51380564961,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 404,
        "name": "User should see empty state on recent journeys when there are no journeys",
        "description": "",
        "id": "walk-up-booking;user-should-see-empty-state-on-recent-journeys-when-there-are-no-journeys",
        "after": [
          {
            "result": {
              "duration": 11207603523,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 16593937123,
              "status": "passed"
            },
            "line": 405,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6108630384,
              "status": "passed"
            },
            "line": 406,
            "name": "I am on the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 394114325,
              "status": "passed"
            },
            "line": 407,
            "name": "I should see the \"Empty Recents State\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Empty Recents State",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 143592198,
              "status": "passed"
            },
            "line": 408,
            "name": "I should see the \"Save your favourite journeys\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Save your favourite journeys",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 126783966,
              "status": "passed"
            },
            "line": 409,
            "name": "I should see the \"departure times and platform numbers\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "departure times and platform numbers",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1004395476,
              "status": "passed"
            },
            "line": 410,
            "name": "I click on the \"Plan A Journey\" button",
            "match": {
              "arguments": [
                {
                  "val": "Plan A Journey",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3460867926,
              "status": "passed"
            },
            "line": 411,
            "name": "I should see the \"Journey Search\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Journey Search",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 86153585106,
              "status": "passed"
            },
            "line": 412,
            "name": "I go to the search results for the following journey:",
            "match": {
              "location": "JourneySearchActions.goToSearchResults(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "From",
                  "To",
                  "Type",
                  "Out Date",
                  "Adults"
                ],
                "line": 413
              },
              {
                "cells": [
                  "EUS",
                  "MAN",
                  "Single",
                  "tomorrow",
                  "1"
                ],
                "line": 414
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3699813617,
              "status": "passed"
            },
            "line": 415,
            "name": "I accept the alert message",
            "match": {
              "location": "PageActions.acceptMessage()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7695336859,
              "status": "passed"
            },
            "line": 416,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8828845953,
              "status": "passed"
            },
            "line": 417,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2045367347,
              "status": "passed"
            },
            "line": 418,
            "name": "I click on the \"London\" text",
            "match": {
              "arguments": [
                {
                  "val": "London",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10695274749,
              "status": "passed"
            },
            "line": 419,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8083013378,
              "status": "passed"
            },
            "line": 420,
            "name": "I select first available train",
            "match": {
              "location": "JourneySearchActions.selectFirstAvailableTrain()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1005485095,
              "status": "passed"
            },
            "line": 421,
            "name": "I should see the \"Payment\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Payment",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1748791966,
              "status": "passed"
            },
            "line": 422,
            "name": "I click on the \"More ticket options\" element",
            "match": {
              "arguments": [
                {
                  "val": "More ticket options",
                  "offset": 16
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1249754127,
              "status": "passed"
            },
            "line": 423,
            "name": "I should see the \"Select Ticket\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Select Ticket",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 165224192,
              "status": "passed"
            },
            "line": 424,
            "name": "I should see the \"Cheapest\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Cheapest",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 253524724,
              "status": "passed"
            },
            "line": 425,
            "name": "I should see the \"Mobile icon\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Mobile icon",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16448597212,
              "status": "passed"
            },
            "line": 426,
            "name": "I go to the \"Me\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Me",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 905705072,
              "status": "passed"
            },
            "line": 427,
            "name": "click on the \"Overflow Menu\" button",
            "match": {
              "arguments": [
                {
                  "val": "Overflow Menu",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnTheField(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1180000897,
              "status": "passed"
            },
            "line": 428,
            "name": "click on the \"Delete\" text",
            "match": {
              "arguments": [
                {
                  "val": "Delete",
                  "offset": 14
                }
              ],
              "location": "FieldActions.clickOnText(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1007148825,
              "status": "passed"
            },
            "line": 429,
            "name": "I should see the \"Empty Recents State\" field is visible",
            "match": {
              "arguments": [
                {
                  "val": "Empty Recents State",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 190398868,
              "status": "passed"
            },
            "line": 430,
            "name": "I should see the \"departure times and platform numbers\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "departure times and platform numbers",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 136242731,
              "status": "passed"
            },
            "line": 431,
            "name": "I should see the \"Save your favourite journeys\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Save your favourite journeys",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 308808017,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 432,
            "name": "I should see the \"Your departure board is empty\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "Your departure board is empty",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 403,
            "name": "@android"
          },
          {
            "line": 403,
            "name": "@android_live"
          },
          {
            "line": 403,
            "name": "@android_01"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 52534239181,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.setUp(Scenario)"
            }
          }
        ],
        "line": 435,
        "name": "User should see their Live Departure search in the recent journeys list if it has to and from stations",
        "description": "",
        "id": "walk-up-booking;user-should-see-their-live-departure-search-in-the-recent-journeys-list-if-it-has-to-and-from-stations",
        "after": [
          {
            "result": {
              "duration": 11211391673,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.tearDown(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15728438081,
              "status": "passed"
            },
            "line": 436,
            "name": "I am not logged into the system",
            "match": {
              "location": "LoginActions.openHomePageNotLogged()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 8009618361,
              "status": "passed"
            },
            "line": 437,
            "name": "I am on the \"Live train times\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Live train times",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 103534999079,
              "status": "passed"
            },
            "line": 438,
            "name": "I search for live time trains with the following criteria:",
            "match": {
              "location": "LiveTrainTimesAction.liveTrainSearch(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Departure/Arrival",
                  "From/At",
                  "To/From"
                ],
                "line": 439
              },
              {
                "cells": [
                  "Departures",
                  "EUS",
                  "MAN"
                ],
                "line": 440
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1233166790,
              "status": "passed"
            },
            "line": 441,
            "name": "I should see the \"Out Search Results\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Out Search Results",
                  "offset": 18
                }
              ],
              "location": "PageActions.shouldSeeTheScreen(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8545531262,
              "status": "passed"
            },
            "line": 442,
            "name": "I go to the \"Recents and Favourites\" screen",
            "match": {
              "arguments": [
                {
                  "val": "Recents and Favourites",
                  "offset": 13
                }
              ],
              "location": "NavigationActions.navigateToPage(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 321401702,
              "status": "passed"
            },
            "line": 443,
            "name": "I should see the \"Recent Search\" element is visible",
            "match": {
              "arguments": [
                {
                  "val": "Recent Search",
                  "offset": 18
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1534832733,
              "status": "passed"
            },
            "line": 444,
            "name": "I select \"Star\" element on row No.1 of the \"Recent Search\" table",
            "match": {
              "arguments": [
                {
                  "val": "Star",
                  "offset": 10
                },
                {
                  "val": "1",
                  "offset": 34
                },
                {
                  "val": "Recent Search",
                  "offset": 44
                }
              ],
              "location": "ListActions.selectListItem(String,int,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1174470434,
              "status": "passed"
            },
            "line": 445,
            "name": "I should see the \"Live Departure Board\" label is shown",
            "match": {
              "arguments": [
                {
                  "val": "Live Departure Board",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 291872866,
              "status": "passed"
            },
            "line": 446,
            "name": "the \"Live Departure Board\" element is visible",
            "match": {
              "arguments": [
                {
                  "val": "Live Departure Board",
                  "offset": 5
                }
              ],
              "location": "FieldActions.shouldSeeFieldIsVisible(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133386765,
              "status": "passed"
            },
            "line": 447,
            "name": "I should see the \"arrives first at destination\" text is shown",
            "match": {
              "arguments": [
                {
                  "val": "arrives first at destination",
                  "offset": 18
                }
              ],
              "location": "LabelActions.messageIsShown(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 344485983,
              "status": "passed"
            },
            "line": 448,
            "name": "the \"Origin Station\" element on row No.1 of the \"Live Departure Board\" table contains the \"London Euston\" text",
            "match": {
              "arguments": [
                {
                  "val": "Origin Station",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 39
                },
                {
                  "val": "Live Departure Board",
                  "offset": 49
                },
                {
                  "val": "London Euston",
                  "offset": 91
                }
              ],
              "location": "ListActions.rowElementContainsText(String,int,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 358531413,
              "status": "passed"
            },
            "output": [
              "Device: Samsung Galaxy A3"
            ],
            "line": 449,
            "name": "the \"Destination Station\" element on row No.1 of the \"Live Departure Board\" table contains the \"Manchester Piccadilly\" text",
            "match": {
              "arguments": [
                {
                  "val": "Destination Station",
                  "offset": 5
                },
                {
                  "val": "1",
                  "offset": 44
                },
                {
                  "val": "Live Departure Board",
                  "offset": 54
                },
                {
                  "val": "Manchester Piccadilly",
                  "offset": 96
                }
              ],
              "location": "ListActions.rowElementContainsText(String,int,String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 434,
            "name": "@android"
          },
          {
            "line": 434,
            "name": "@android_live"
          },
          {
            "line": 434,
            "name": "@android_01"
          }
        ]
      }
    ],
    "name": "Walk-up booking",
    "description": "",
    "id": "walk-up-booking",
    "keyword": "Feature",
    "uri": "booking/WalkUpBooking.feature",
    "tags": [
      {
        "line": 1,
        "name": "@search"
      },
      {
        "line": 1,
        "name": "@search_results"
      },
      {
        "line": 1,
        "name": "@payment"
      }
    ]
  }
]